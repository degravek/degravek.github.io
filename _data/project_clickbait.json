{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Introduction\n",
    "In today's age of information, we are constantly bombarded with advertisements and news headlines of various kinds on virtually every web page we visit. With so many people connected to the internet, websites and news outlets are in continuous competition for viewers, and so they are pushed to produce ever more interesting, catchy, and provacative article headlines, regardless of their veracity. In recent years, this has led to an influx of \"news\" headlines that are designed essentially entirely to capture the attention of new viewers, rather than to convey any real, practical journalistic information. These catchy headlines and their associated content are referred to as \"clickbait\". Sites like BuzzFeed and Upworthy are well known for hosting many of these kinds of articles.\n",
    "\n",
    "In a formal sense, clickbait is somewhat hard to define. The Oxford English dictionary defines it as *\"on the internet, content whose main purpose is to attract attention and encourage visitors to click on a link to a particular web page\"*. In a general sense, clickbait headlines are those which satisfy two main criteria:\n",
    "\n",
    "1. They exploit the so-called \"curiosity gap\" by not explaining the full article contents\n",
    "2. They provide misleading information about the article contents\n",
    "\n",
    "In other words, these headlines contain text which leaves the reader curious about what the article contents might be, or they contain text about topics not really covered in the article itself. Examples of clickbait headline include things like\n",
    "\n",
    "* I left my husband and daughter home alone, and you'll never believe what happened!\n",
    "* 19 Tweets anyone addicted to diet coke will totally relate to\n",
    "* What these pilots do with dogs is the most brilliant thing I've ever seen\n",
    "* She picks this object off the ground, but watch what happens when it starts to move!\n",
    "\n",
    "We must be sure to make a distinction here between clickbait and fake news, which has also been talked about more and more as of late. The distinction comes from the fact that fake news actively tries to get the reader to believe things that are untrue. Clickbait, on the other hand, usually just contains \"junk\" news with no real journalistic integrity, and is not constructed to get the reader to believe false claims. \n",
    "\n",
    "Since clickbait is becomming increasingly common, and is genereally considered a nuisance to internet users, let's see if we can use machine learning and natural language processing to identify these headlines automatically. This sort of study has been carried out before by, for example, [Chakraborty et al.](http://cse.iitkgp.ac.in/~abhijnan/papers/chakraborty_clickbait_asonam16.pdf), and is covered in [this informative article](https://www.linkedin.com/pulse/identifying-clickbaits-using-machine-learning-abhishek-thakur).\n",
    "\n",
    "The dataset used in the Chakraborty et al. study is publicly available, and can be found [here](https://github.com/bhargaviparanjape/clickbait/tree/master/dataset). The data contain 16,000 clickbait headlines from BuzzFeed, Upworthy, ViralNova, Thatscoop, Scoopwhoop and ViralStories, along with 16,000 non-clickbait headlines from WikiNews, New York Times, The Guardian, and The Hindu. Let's import some useful Python libraries, and read in the dataset. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/Users/degravek/anaconda/lib/python3.5/site-packages/sklearn/cross_validation.py:44: DeprecationWarning: This module was deprecated in version 0.18 in favor of the model_selection module into which all the refactored classes and functions are moved. Also note that the interface of the new CV iterators are different from that of this module. This module will be removed in 0.20.\n",
      "  \"This module will be removed in 0.20.\", DeprecationWarning)\n",
      "/Users/degravek/anaconda/lib/python3.5/site-packages/sklearn/grid_search.py:43: DeprecationWarning: This module was deprecated in version 0.18 in favor of the model_selection module into which all the refactored classes and functions are moved. This module will be removed in 0.20.\n",
      "  DeprecationWarning)\n"
     ]
    }
   ],
   "source": [
    "from sklearn.feature_extraction.text import TfidfVectorizer\n",
    "from sklearn.feature_extraction.text import CountVectorizer\n",
    "from sklearn.model_selection import train_test_split\n",
    "from sklearn.linear_model import LogisticRegression\n",
    "from sklearn.metrics import classification_report\n",
    "from sklearn.preprocessing import StandardScaler\n",
    "from nltk.stem.wordnet import WordNetLemmatizer\n",
    "from sklearn.grid_search import GridSearchCV\n",
    "from sklearn.metrics import confusion_matrix\n",
    "from nltk.stem.porter import PorterStemmer\n",
    "from sklearn.metrics import roc_auc_score\n",
    "from sklearn.metrics import roc_curve\n",
    "from sklearn.pipeline import Pipeline\n",
    "from nltk.corpus import stopwords\n",
    "from string import punctuation\n",
    "import seaborn as sns\n",
    "import pandas as pd\n",
    "import numpy as np\n",
    "import nltk\n",
    "import re\n",
    "\n",
    "import matplotlib.pyplot as mp\n",
    "%matplotlib inline\n",
    "\n",
    "file = '/Users/degravek/Downloads/clickbait_data.txt'\n",
    "with open(file, encoding=\"utf-8\") as f_in:\n",
    "    lines = [line.rstrip() for line in f_in]\n",
    "    ybait = list([line for line in lines if line])\n",
    "\n",
    "df_ycb = pd.DataFrame(ybait, columns=['text'])\n",
    "df_ycb['clickbait'] = 1\n",
    "\n",
    "file = '/Users/degravek/Downloads/non_clickbait_data.txt'\n",
    "with open(file, encoding=\"utf-8\") as f_in:\n",
    "    lines = [line.rstrip() for line in f_in]\n",
    "    nbait = list([line for line in lines if line])\n",
    "\n",
    "df_ncb = pd.DataFrame(nbait, columns=['text'])\n",
    "df_ncb['clickbait'] = 0\n",
    "\n",
    "df = df_ycb.append(df_ncb, ignore_index=True).reset_index(drop=True)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Feature Engineering\n",
    "Now that the data is loaded, one option is to move ahead using only the headline text to identify clickbait headlines. It turns out that this actually gives very good results. However, it is also possible to engineer some new features from the available data. These new features include things like:\n",
    "\n",
    "* Number of words in the headline\n",
    "* Number of stop words in the headline\n",
    "* Number of contractions in the headline\n",
    "* Frequency of various parts of speech in the headline\n",
    "* Is the headline a question?\n",
    "* Ratio of stop words to total number of words\n",
    "* Ratio of contractions to total number of words\n",
    "\n",
    "To produce these new features, we'll first need to define a few functions. The function process_text carries out the task of processing the raw headlines. It makes every headline lowercase, removes any punctuation and extra white space, and replaces any numerical values with the word \"number\". Next, the function cnt_stop_words tokenizes (splits) each headline into it's individual words, and counts the number of those words that appear in the NLTK corpus of pre-defined stop words.\n",
    "\n",
    "It is often the case that clickbait headlines are stated in the form of a question. For example, something like \"Can you spot the amazing thing in this photo?\". Since the particular dataset we're using doesn't actually contain punctuation like question marks, we can try to determine if the text is stated as a question based on the first word in the headline. Questions typically start with words like \"who\", \"what\", \"when\", \"can\", etc. To this end, we can define a list of question_words, and a function to check if any of these words starts a headline.\n",
    "\n",
    "Clickbait headlines also tend to contain more informal writing than non-clickbait headlines. As such, they may contain many more contractions, occurrences of slang, etc. Below, we can make a list of possible contractions to look for, as well as a function to check for them.\n",
    "\n",
    "Lastly, a function is defined to check the part-of-speech (i.e., noun, verb, adjective, etc.) of each word in a headline. It's possible that non-clickbait headlines contain, for example, more nouns than do clickbait headlines. This part-of-speech tagging is carried out using methods from the NLTK package."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "question_words = ['who', 'whos', 'whose', 'what', 'whats', 'whatre', 'when', 'whenre', 'whens', 'couldnt',\n",
    "        'where', 'wheres', 'whered', 'why', 'whys', 'can', 'cant', 'could', 'will', 'would', 'is',\n",
    "        'isnt', 'should', 'shouldnt', 'you', 'your', 'youre', 'youll', 'youd', 'here', 'heres',\n",
    "        'how', 'hows', 'howd', 'this', 'are', 'arent', 'which', 'does', 'doesnt']\n",
    "\n",
    "contractions = ['tis', 'aint', 'amnt', 'arent', 'cant', 'couldve', 'couldnt', 'couldntve',\n",
    "                'didnt', 'doesnt', 'dont', 'gonna', 'gotta', 'hadnt', 'hadntve', 'hasnt',\n",
    "                'havent', 'hed', 'hednt', 'hedve', 'hell', 'hes', 'hesnt', 'howd', 'howll',\n",
    "                'hows', 'id', 'idnt', 'idntve', 'idve', 'ill', 'im', 'ive', 'ivent', 'isnt',\n",
    "                'itd', 'itdnt', 'itdntve', 'itdve', 'itll', 'its', 'itsnt', 'mightnt',\n",
    "                'mightve', 'mustnt', 'mustntve', 'mustve', 'neednt', 'oclock', 'ol', 'oughtnt',\n",
    "                'shant', 'shed', 'shednt', 'shedntve', 'shedve', 'shell', 'shes', 'shouldve',\n",
    "                'shouldnt', 'shouldntve', 'somebodydve', 'somebodydntve', 'somebodys',\n",
    "                'someoned', 'someonednt', 'someonedntve', 'someonedve', 'someonell', 'someones',\n",
    "                'somethingd', 'somethingdnt', 'somethingdntve', 'somethingdve', 'somethingll',\n",
    "                'somethings', 'thatll', 'thats', 'thatd', 'thered', 'therednt', 'theredntve',\n",
    "                'theredve', 'therere', 'theres', 'theyd', 'theydnt', 'theydntve', 'theydve',\n",
    "                'theydvent', 'theyll', 'theyontve', 'theyre', 'theyve', 'theyvent', 'wasnt',\n",
    "                'wed', 'wedve', 'wednt', 'wedntve', 'well', 'wontve', 'were', 'weve', 'werent',\n",
    "                'whatd', 'whatll', 'whatre', 'whats', 'whatve', 'whens', 'whered', 'wheres',\n",
    "                'whereve', 'whod', 'whodve', 'wholl', 'whore', 'whos', 'whove', 'whyd', 'whyre',\n",
    "                'whys', 'wont', 'wontve', 'wouldve', 'wouldnt', 'wouldntve', 'yall', 'yalldve',\n",
    "                'yalldntve', 'yallll', 'yallont', 'yallllve', 'yallre', 'yallllvent', 'yaint',\n",
    "                'youd', 'youdve', 'youll', 'youre', 'yourent', 'youve', 'youvent']\n",
    "\n",
    "def process_text(text):\n",
    "    result = text.replace('/', '').replace('\\n', '')\n",
    "    result = re.sub(r'[1-9]+', 'number', result)\n",
    "    result = re.sub(r'(\\w)(\\1{2,})', r'\\1', result)\n",
    "    result = re.sub(r'(?x)\\b(?=\\w*\\d)\\w+\\s*', '', result)\n",
    "    result = ''.join(t for t in result if t not in punctuation)\n",
    "    result = re.sub(r' +', ' ', result).lower().strip()\n",
    "    return result\n",
    "\n",
    "stop = stopwords.words('english')\n",
    "def cnt_stop_words(text):\n",
    "    s = text.split()\n",
    "    num = len([word for word in s if word in stop])\n",
    "    return num\n",
    "\n",
    "def num_contract(text):\n",
    "    s = text.split()\n",
    "    num = len([word for word in s if word in contractions])\n",
    "    return num\n",
    "\n",
    "def question_word(text):\n",
    "    s = text.split()\n",
    "    if s[0] in question_words:\n",
    "        return 1\n",
    "    else:\n",
    "        return 0\n",
    "\n",
    "def part_of_speech(text):\n",
    "    s = text.split()\n",
    "    nonstop = [word for word in s if word not in stop]\n",
    "    pos = [part[1] for part in nltk.pos_tag(nonstop)]\n",
    "    pos = ' '.join(pos)\n",
    "    return pos"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "With our functions defined, let's apply them to the data."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "df['text']     = df['text'].apply(process_text)\n",
    "df['question'] = df['text'].apply(question_word)\n",
    "\n",
    "df['num_words']       = df['text'].apply(lambda x: len(x.split()))\n",
    "df['part_speech']     = df['text'].apply(part_of_speech)\n",
    "df['num_contract']    = df['text'].apply(num_contract)\n",
    "df['num_stop_words']  = df['text'].apply(cnt_stop_words)\n",
    "df['stop_word_ratio'] = df['num_stop_words']/df['num_words']\n",
    "df['contract_ratio']  = df['num_contract']/df['num_words']"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Here's what the data look like."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "                                                text  clickbait  question  \\\n",
    "0                                 should i get bings          1         1   \n",
    "1      which tv female friend group do you belong in          1         1   \n",
    "2  the new star wars the force awakens trailer is...          1         0   \n",
    "3  this vine of new york on celebrity big brother...          1         1   \n",
    "4  a couple did a stunning photo shoot with their...          1         0   \n",
    "\n",
    "   num_words                   part_speech  num_contract  num_stop_words  \\\n",
    "0          4                        VB NNS             0               2   \n",
    "1          9               NN NN NN NN VBD             0               4   \n",
    "2         14  JJ NN NNS VBP NNS VBP JJ NNS             0               6   \n",
    "3         12       JJ JJ NN NN JJ NN NN NN             0               4   \n",
    "4         18  NN VBG NN NN NN VBG JJ NN NN             0               9   \n",
    "\n",
    "   stop_word_ratio  contract_ratio  \n",
    "0         0.500000             0.0  \n",
    "1         0.444444             0.0  \n",
    "2         0.428571             0.0  \n",
    "3         0.333333             0.0  \n",
    "4         0.500000             0.0  "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Let's plot some of these columns."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 57,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.text.Text at 0x26de21908>"
      ]
     },
     "execution_count": 57,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAAAt0AAAK4CAYAAACoDkEbAAAABHNCSVQICAgIfAhkiAAAAAlwSFlz\nAAALEgAACxIB0t1+/AAAIABJREFUeJzs3XuYXFWZqPE3N3LBBIM2ZlQEQf1ELuLAAAKBiAiCOlGO\nMA6KjGiAHBBQR1QIB1AYIAoqCkSD3PGIgqAwIighmGQEBFGIwMdNvBxBWwwkEElI0uePvRuKti/V\nndpdXZ339zx5UrVqr72/6qpe9fWqdRnR0dGBJEmSpOqMbHYAkiRJ0nBn0i1JkiRVzKRbkiRJqphJ\ntyRJklQxk25JkiSpYqObHUDV2tuXuTxLP0yePIElS5Y3OwwNY77H+qetbeKIZscw2Hpqtwf63rFe\nc6813Ou1QozDvd5QirG3Ntuebr3I6NGjmh2ChjnfYxqogb53rNfcaw33eq0Q43Cv1woxgkm3JEmS\nVDmTbkmSJKliJt2SJElSxUy6JUmSpIqZdEuSJEkVM+mWJEmSKmbSLUmSJFXMpFuSJEmqWKVJd0Ts\nGBHzy9sbRcQPIuJnEbEoIjYvy2dExB0RcWtEvLssGx8RV0XEgoj4UUS0leU7RcRtZf0Tq4xd0vD3\nox9dy3nnfY0nnvgrX/rS6T0e9/73v4cVK1b0WdaTr371TB5//HGWLn2KG2/88VrFLEnrslZutytL\nuiPiWOB8YFxZNBu4PDN3A2YBb4yIKcBRwC7A3sBpETEWmAnck5lTgUvK4wHmAAcCuwI7RsRbqopf\n0rrjZS97Of/5n5+t7PxHH/0ppkyZwkMPPciiRbdUdh1JWle0YrtdZU/3w8B+Nfd3AV4dET8FPgjM\nB3YAFmXmisx8CngI2IYiqe78s+J6YM+ImASMzcyHM7MDuAHYs8L4JQ0zK1Y8y4knfo7DDvsIhxzy\nIZ544q8APPbYnzj00P8AYNGiBXzsYx/mox89iDPOOJU1a9Y8X/+aa67kuOM+zcqVKwH44hf/iyOP\nPJQTTvgsK1Y8yzPPPM0JJ3yWT3ziCA466ACuvvpKAI488lB+97tHueSSC7jzzjv4wQ++P7hPXJJa\nVD3t9s033zygdvvZZwe33R691mfoQWZeFRGb1hRtCizJzD0j4v8AnwEeAJ6qOWYZsAEwqaa8tmxp\nl2M36yuOyZMnMHr0qAE+i3VTW9vEZoegYa5Z77GLLrqKzTbblHPP/TqPPvoo8+fPZ82alWy44fqM\nGTOKyZPHc/bZX+J73/seL3vZy5g7dy6rVz/DqFEj+fGPr+H+++9jzpxzGDVqFKNGjeQjH/kw2267\nLbNnz2bevOvZbrvt2G+/6ey11178+c9/5qCDDuLQQz/CeuuNZvLkCRx11JF85zvf4WMfO7gpz1+S\nWs0111zFlCmv5OSTT+MPf/g9P//5Qp5++unnH1+1ahVf+MIXmDPnQiZP3pDLL7+Yv/zlLwBcddUV\nPPjgA3zhC6czalSRC773ve9nq6225txzv8p3v/tdNttsC/bccy92330P/vrXdo488lDe9773P3/+\nD3/4EH7wg6uYPn0/1lZlSXc3ngB+WN6+FjgVuAOo/fSdCDxJkVxP7KWstrxXS5YsX6ug1zVtbRNp\nb1/W7DA0jDXzPXbvvclOO+1Me/sy1l//ZYwYsR7Ll6/kb397hueeW81DD/2BCRPWZ82a9WhvX8Z7\n3/sBAFavXsMttyxg1KhR/O1vRZsyYsQoXvWqzWlvX8bmm2/BL35xG9tvvwvXXXc91177IyZMWJ8V\nK1bS3r6MlStXsWTJcp58cjkrVjzXr+fvH8GS1mW///3v2GmnnQHYeOPXcM89E3niiSeef/ypp55k\n0qRJTJ68IQAf/OALnRp33HF72UlSJNyjR49hq622BmCrrd7M4sW/ZPvtd+G73/02t9xyMxMmrM+q\nVasqey6DmXQvBPYFLgV2A34D3A6cGhHjgLHAFsBiYFF57O3APsCCzFwaESvLCZiPUIwBP3kQ42+o\nQ06f1+wQunXtmdObHYJUmU02eS333XcvU6dO4//9vz/yjW+cwzvf+a7nH588eUOefvppli59ikmT\nNuArX/kie+21DwCnnXYmZ5xxCtdccyXvfe/7WbXqOR58MHn964Nf//ouNttsc77zncvYaqtteN/7\n3s8vf3kHP//5whddf+TIkaxZ0zGoz1laW7WfV35GaLDV024vXbp0QO32G9/4+kFttwcz6f4UcH5E\nzKQYOnJgZi6JiLOBBRTjy4/PzGcj4jzg4ohYCKykmDwJcDhwOTAKuDEzbxvE+CW1uOnT9+O00z7P\nkUceyurVq/m3f/sgTz31whdmI0eO5JOf/Ayf/vQxjBw5kje8Idhiiy2ff/yYY/6TGTMOZrvtdmDM\nmDFceeUV/PGPf2DKlCnMnPlx7r77V3z5y7O56aYbeclLXsKoUaOeH0cI8KpXvZpHHnmI73732xxw\nwIFIknpXT7t94oknDqjd3n///Zk3b+GgtdsjOjqGd69Le/uyIfkEh3JPt8NLVCWHMPVPW9vEEc2O\nYbD11G4P9L1jvbWr07Wne6g/t8Gu1woxDvd6QynG3trswezpliS1kIgYBcwFAuig+LbxWeCi8v5i\n4IjMXBMRM4DDgFXAKZl5XUSMBy4DNqKY/H5wZrYP+hORpCHAHSklST15D0Bm7kKxX8KpwFnArHIf\nhRHA9AHsuaAmOOT0ec//kzT47OmWJHUrM6+JiOvKu5tQrBi1J9C5U8T1wF7Aaso9F4AVEVG758Ls\nmmNPqOe6vS31OtDVXKzX3GsN93qtEONwr9cKMZp0S5J6lJmrIuJi4H3A+4F3lBuUQfd7K/RU3lnW\np56Weh1K4zaHQ72Bzq1ohee2ro4nXlfrDaUYe0vGHV4iSepVZh4MvIFifPf4mof62kehuz0XJGmd\nZE+3pHVKo8ezXvDZPRp6vqEkIg4CXp2ZpwHLgTXAHRExLTPnU+yjcDP92HNh0J+EpJY2nNpsk25J\nqtCaNWs488zTeeihBxkzZgyf/ewJvPrVGzc7rHp9H7gwIn4GjAGOAe4D5kbEeuXtKzNzdT/3XJCk\nIauqdtukW5IqtGDBfFauXMk3vnEhixffw9e//mVOP/2sZodVl8x8Bjigm4d27+bYuRTDT2rLlgP7\nVxOdJFWjqnbbMd2SVKG77/4VO+74VgC22mpr7r//viZHJEnqTVXttkm3JFXomWeeYf31X/L8/ZEj\nR7Jq1aomRiRJ6k1V7bZJtyRVaP3112f58heWwOvo6GD0aEf2SdJQVVW7bdItSRXaeus3c+utiwBY\nvPgeNtvsdU2OSJLUm6rabbtbJK1TBnu5qN12exu/+MVtHH74IXR0dHDccScO6vUlqZXV02YPdJOb\nnlTVbpt0S1KFRo4cyac/fVyzw5Ak1amqdtvhJZIkSVLFTLolSZKkipl0S5IkSRUz6ZYkSZIqZtIt\nSZIkVczVSyStU46Yd2xDz3fOHrMbej5J0guGU5ttT7ckDYLf/GYxRx55aLPDkCTVoYo2255uSarY\n5ZdfzA03/Ihx48Y3OxRJUh+qarPt6Zakir3qVa/m1FO/2OwwJEl1qKrNNumWpIpNm/Z2Ro/2i0VJ\nagVVtdkm3ZIkSVLFTLolSZKkivl9p6R1ikv8SVLrqKfNbmubSHv7skGIZu3Y0y1Jg+Cf/umVfPOb\nFzU7DElSHaposyvt6Y6IHYEzMnNaTdmBwMcz863l/RnAYcAq4JTMvC4ixgOXARsBy4CDM7M9InYC\nvloee2Nmnlxl/JIkSVIjVNbTHRHHAucD42rK3gJ8FBhR3p8CHAXsAuwNnBYRY4GZwD2ZORW4BJhV\nnmIOcCCwK7BjeT5JkiRpSKuyp/thYD/gUoCIeBnwX8AxwNzymB2ARZm5AlgREQ8B21Ak1Z2DeK4H\nToiIScDYzHy4PN8NwJ7AXb0FMXnyBEaPHtXI5zXstbVNbHYIGuZ8j0mS1jWVJd2ZeVVEbAoQEaOA\nbwGfBP5ec9gk4Kma+8uADbqU15Yt7XLsZn3FsWTJ8oE9gXVYK0xGUOtqlQkvQ4V/oEjS8DBYq5ds\nB7weOI9iuMmbIuIrwDyg9hNlIvAkRXI9sZey2nJJkiRpSBuUpDszbwe2BCh7v7+TmceUY7pPjYhx\nwFhgC2AxsAjYF7gd2AdYkJlLI2JlRGwOPEIxBtyJlJIkSRrymrpkYGY+DpwNLKDo9T4+M5+l6BHf\nMiIWAofyQnJ9OHA5RTJ+V2beNvhRS5IkSf1TaU93Zj4K7NRbWWbO5YWJlZ1ly4H9uznfrV3PJ0mS\nJA11bo4jSZIkVcykW5IkSaqYSbckSZJUMZNuSZIkqWIm3ZIkSVLFTLolSZKkipl0S5IkSRUz6ZYk\nSZIqZtItSZIkVcykW5IkSapYpdvAS5JaV0SMAS4ANgXGAqcAfwCuAx4sDzsvM6+IiBnAYcAq4JTM\nvC4ixgOXARsBy4CDM7N9cJ+FJA0NJt2SpJ58CHgiMw+KiA2BXwGfB87KzDM7D4qIKcBRwPbAOGBh\nRPwEmAnck5knRcQHgFnA0YP9JCRpKDDpliT15HvAleXtERS92NsBERHTKXq7jwF2ABZl5gpgRUQ8\nBGwD7ArMLutfD5xQz0UnT57A6NGjun2srW3igJ6I9Zp7reFerxViHO71WiFGk25JUrcy82mAiJhI\nkXzPohhmcn5m3hkRxwMnUvSAP1VTdRmwATCppryzrE9LlizvtrytbSLt7cv6/Tys172B1BlovVb5\nmQykXivEONzrDaUYe0vGTbolST2KiI2Bq4FzM/PbEfHSzHyyfPhq4GvAz4DaT5qJwJPA0pryzjKp\nbgdcMfP52+fsMbuXI6Whz9VLJEndiohXADcCn8nMC8riGyJih/L224E7gduBqRExLiI2ALYAFgOL\ngH3LY/cBFgxa8JI0xNjTLUnqyXHAZOCEiOgcj/1J4MsR8RzwOHBoZi6NiLMpkuqRwPGZ+WxEnAdc\nHBELgZXAgYP/FCRpaDDpliR1KzOPpvvVRnbp5ti5wNwuZcuB/auJTpJai8NLJEmSpIqZdEuSJEkV\nM+mWJEmSKuaYbkmSVKnapf/A5f+0brKnW5IkSaqYSbckSZJUMZNuSZIkqWIm3ZIkSVLFTLolSZKk\nilW6eklE7AickZnTImJb4GvAamAF8OHM/HNEzAAOA1YBp2TmdRExHrgM2AhYBhycme0RsRPw1fLY\nGzPz5CrjlyRJkhqhsp7uiDgWOB8YVxZ9Ffh4Zk4Dvg98JiKmAEdRbCm8N3BaRIwFZgL3ZOZU4BJg\nVnmOOcCBwK7AjhHxlqrilyRJkhqlyp7uh4H9gEvL+x/IzMdqrvsssAOwKDNXACsi4iFgG4qkunMR\nz+uBEyJiEjA2Mx8GiIgbgD2Buyp8DpIkaQAOOX3e87fH79DEQKQhorKkOzOviohNa+4/BhAROwNH\nArtR9G4/VVNtGbABMKmmvLZsaZdjN+srjsmTJzB69KgBP491UVvbxGaHoGHO95gkaV0zqDtSRsS/\nAccD7yrHaC8Faj99JwJPUiTXE3spqy3v1ZIlyxsQ+bqlvX1Zs0PQMNbWNtH3WD/4B4okDQ+DtnpJ\nRHyIood7WmY+UhbfDkyNiHERsQGwBbAYWATsWx6zD7AgM5cCKyNi84gYQdFLvmCw4pckSZIGalB6\nuiNiFHA28Hvg+xEBcEtmnhgRZ1MkzyOB4zPz2Yg4D7g4IhYCKykmTwIcDlwOjKJYveS2wYhfkiRJ\nWhuVJt2Z+SiwU3l3wx6OmQvM7VK2HNi/m2NvrTmfJEmS1BLcHEeSJEmq2KBOpJQkSWundik+gGvP\nnN6kSCT1hz3dkiRJUsVMuiVJkqSKmXRLkiRJFTPpliRJkipm0i1JkiRVzKRbkiRJqphLBupFDrhi\nZrND6NY5e8xudgiSJEkD1q+e7oiYFBFbVhWMJKl6tuWSNPj67OmOiI8BOwOfAe4ClkXEVZk5q+rg\nJEmNYVsuSc1VT0/3TOA/gX8HfgBsDbyzyqAkSQ1nWy5JTVTX8JLM/BuwL/DfmbkKGF9pVJKkhrMt\n17rigCtmcsS8Yzli3rHNDkV6Xj1J928i4jpgM+CnEfFd4BfVhiVJajDbcklqonqS7kOA2cCOmbkS\nuBT4WKVRSZIazbZckpqonqR7JDAV+EpETALeUmc9SdLQYVsuSU1UT4N7DrA+sB2wCngd8K0qg5Ik\nNZxtuSQ1UT1J93aZeRzwXGYuBw6m6CGRJLUO23JJaqJ6ku6OiFgP6Cjvv7zmtiSpNdiWS1IT1ZN0\nfwX4KTAlIr4C3AF8udKoJEmNZlsuSU3U546UmXlpRNwJvA0YBbwnM++uPDJJUsPYlktSc9WzDfxo\n4LXAUmAEsG1EbJuZl1QdnCSpMQbSlkfEGOACYFNgLHAKcC9wEcXQlMXAEZm5JiJmAIdRTNI8JTOv\ni4jxwGXARsAy4ODMbK/mGUrS0FbP8JJvA/8HeDtFD8nbgGkVxiRJaryBtOUfAp7IzKkUW8Z/HTgL\nmFWWjQCmR8QU4ChgF2Bv4LSIGEux9fw95bGXALMa/aQkqVX02dMNbANskZlOuJGk1jWQtvx7wJXl\n7REUvdjbAbeUZdcDewGrgUWZuQJYEREPldfblWJDns5jT1irZyBJLayepPs+YArwWMWxSJKq0++2\nPDOfBoiIiRTJ9yzgSzWJ+zJgA2AS8FRN1e7KO8v6NHnyBEaPHtXtY21tE+sN33pD6FqNOMdgxTuU\nY7Pe0LjWQOvVk3RPADIiFgPPdhZm5h79vpokqVkG1JZHxMbA1cC5mfntiJhd8/BE4EmKceIT+yjv\nLOvTkiXLuy1va5tIe/uyek6xTtUDBlRvIHUOuGLmi+6fs8fsHo5s/LUH42czkNegVd4nw7neUIqx\nt2S8nqT7v/odjSRpqOl3Wx4RrwBuBI7MzJvK4rsiYlpmzgf2AW4GbgdOjYhxFBMut6CYZLkI2Ld8\nfB9gwdo+CUlqVT1OpIyIfy5vdvTwT5I0xK1lW34cMBk4ISLmR8R8iiEmJ0fEz4H1gCsz83HgbIqk\neh5wfGY+C5wHbBkRC4FDgZMb+dwkqZX01tM9E5hB941kB9Dn8JKI2BE4IzOnRcTrWMtlpiJiJ+Cr\n5bE3ZqYNuCT1bsBteWYeDRzdzUO7d3PsXGBul7LlwP79CVaShqsek+7MnFH+/7aBnDgijgUOAp4p\nizqXmZofEXMolpn6OcUyU9sD44CFEfETXlhm6qSI+ABFz8rRwBzgfwGPAP8dEW/JzLsGEp8krQvW\nti2XJDVGj0l3RNxML1891jGR8mFgP+DS8v5aLTMVEZOAsZn5cBnfDcCeQK9Jd2+z4NU6GjFbXkOH\nr+fgaUBbLklqgN6Gl5y0NifOzKsiYtOaohFruczUJIqZ8LXHbtZXHD3NgldrGeisdQ09a7NCw7qo\nAX+gnNSAMCRJa6m3pLvRkyXX1NweyDJTPR0rSeqZE98laQjoLenunHTzMmBz4H8ohoPsDNxDsd1v\nf6zVMlOZuTQiVkbE5hRjuvfGmfCS1JdGt+WSpAHobSLl2wAi4kfAfpn5UHl/E+AbA7jWp4C5EbEe\nxc5oV2bm6ojoXGZqJOUyUxFxHnBxuczUSuDA8hyHA5cDoyhWL7ltAHFI0jqjgrZckjQA9WyOs0ln\nI136PbBJPSfPzEeBncrbD7CWy0xl5q2d55Mk9cuA23JJ0tqrJ+m+MyIuBr5L0Rt9IO4qJkmtxrZc\nkpqonqT7Y8DHKYZ2dAA/Bc6tMihJUsPZlktSE/WZdGfmyoi4kKJ3ZATFeOrdKLb6lSS1ANtySWqu\nPpPuiDgN+N/AGOCvwKuAO4Adqw1NktQotuWS1Fwj6zjmA8DGwBXA2yh2gWyvMihJUsPZlktSE9WT\ndD+WmUsp1s9+c2beDLyi2rAkSQ1mWy5JTVTPRMqnIuIg4E7g4xHxJ2BytWFJkhrMtlySmqienu6P\nAhuVO0k+SrGZwqwKY5IkNZ5tuSQ1UT2rl/wpIuZExDbAp4HxmflM9aFJkhrFtlySmqvPnu6IeDvw\na+AHFOP/fhsRe1UdmCSpcWzLJam56hle8l/ArsCTmfkYMA34YpVBSZIazrZckpqonqR7ZGY+3nkn\nM++tMB5JUjVsyyWpiepZveSPEfFuoCMiXgocAfy+2rAkSQ1mWy5JTVRPT/dhwAcpNlV4BNgWOLTK\noCRJDWdbLklNVM/qJX8B/n0QYpEkVcS2XJKaq8ekOyJuBjp6ejwz96gkIklSw9iWS9LQ0FtP90nl\n/yOAucDHKo9GktRoJ5X/25ZLUhP1mHRn5i2dtyPi6dr7kqTWYFuuVnPI6fOevz1+hyYGIjVYPRMp\noZevJiVJLcO2XJKapN6kW5IkSdIA9TaR8kJe6BXZJCIuqH08Mw+pMjBJ0tqzLZekoaG3iZTza247\nBlCSWtP8mtu25ZLUJL1NpLx4MAORJDWebbkkDQ2O6ZYkSZIq1mPSHRHrD2YgkqTGsy2XpKGht57u\n+QARce7ghCJJqsB8sC2X6nHAFTM5Yt6xHDHv2GaHomGot4mUL4mIy4B3RsS4rg86412SWoJtuSQN\nAb0l3XsBbwOm0qAZ7xExBrgY2BRYDcwAVgEXUSxptRg4IjPXRMQM4LDy8VMy87qIGA9cBmwELAMO\nzsz2RsQmScNUw9tySVL/9bZ6yR+ASyLi18C9QJTHL87MVQO83r7A6MzcOSLeAZwKjAFmZeb8iJgD\nTI+InwNHAdsD44CFEfETYCZwT2aeFBEfAGYBRw8wFkka9ipqyyVJ/VTP6iVjgAcpeqgvBH4fETsO\n8HoPAKMjYiQwCXgO2I4Xel+uB/YEdgAWZeaKzHwKeAjYBtgV+HGXYyVJfWtkWy5J6qfehpd0+irw\nb5l5G0BE7AR8jSIx7q+nKYaW3A+8HHg3sFtmdu6WtgzYgCIhf6qmXnflnWW9mjx5AqNHjxpAqBpK\n2tomNjsENZCvZ1M0si2XJPVTPUn3SzobaYDMvLW7yTh1+gRwQ2Z+LiI2BuYB69U8PhF4Elha3u6t\nvLOsV0uWLB9gqBpK2tuXNTsENUhb20Rfz35o4B8oA27Lyx7xMzJzWkS8BbiOotcc4LzMvMJ5OJLU\nu3qGl/wtIqZ33omI9wJPDPB6S3ihp/pvFF933hUR08qyfYAFwO3A1IgYFxEbAFtQTLJcRDEuvPZY\nSVLfBtSWR8SxwPkU82ugGBJ4VmZOK/9dERFTKObh7ALsDZwWEWN5YR7OVOASink4krROqqen+1Dg\nsoj4FjACeBj40ACv92XggohYQNHDfRxwBzA3ItYD7gOuzMzVEXE2RVI9Ejg+M5+NiPOAiyNiIbAS\nOHCAcUjSumagbfnDwH7ApeX97YAoE/gHgWOomYcDrIiI2nk4s8t61wMnNOi5SFLL6TPpzswHgR3L\nXc1GZuaAvxfOzKeBA7p5aPdujp0LzO1SthzYf6DXl6R11UDb8sy8KiI2rSm6HTg/M++MiOOBE4Ff\n0aB5OND7XJyBDrexXuOu1YhzDGa8g1FvKMe2rtRrhRjr6ekGIDOf6ffZJUlDSgPa8qszs3M+zdUU\nkzF/RoPm4UDPc3EGOh9guNeDgc17acTcilaIt+p6rfI+Gc71hlKMvSXj9YzpliSp0w0R0bniyduB\nO3EejiT1qc+kOyIOH4xAJEnVaWBbPhP4ckTMp5g4eUpmPg50zsOZRzkPBzgP2LKch3MocHKDYpCk\nllPP8JIjgTlVByJJqtSA2/LMfBTYqbz9S4pku+sxzsORpF7Uk3T/ISLmAbcBf+8szMzPVxaVJKnR\nbMslqYnqSbpvrbk9oqpAJEmVsi2XpCaqZ8nAk8slpjanmBgz3pVMJKm12Jar1gFXzHzR/XP2mN3D\nkZIapZ6JlHsAvwZ+ALwCeDQi9qo6MElS49iWS1Jz1bNk4GkUu4o9mZmPUWxk88VKo5IkNZptuSQ1\nUT1J98hyOSgAMvPeCuORJFXDtlySmqieiZR/jIh3Ax0R8VLgCOD31YYlSWow23JJaqJ6eroPAz4I\nbAw8AmxLscmBJKl12JZLUhPVs3rJX4B/j4hJwHOZ+fe+6kiShhbbcklqrj6T7ojYGrgYeE15/37g\n4Mx8uOLYJEkNYlsuSc1Vz/CSOcDxmfnyzHw5cCZwQbVhSZIazLZckpqonqR7fGZe33knM68GJlUX\nkiSpArblktREPQ4viYjXlDd/HRGfBb4FrKKYiLNgEGKTJK0l23JJGhp6G9N9C9ABjACmUcx879QB\nHFVdWJKkBrEtl6QhoMekOzNfO5iBSJIaz7ZckoaGelYvCYq1XCfXlmfmIVUFJUlqLNtySWquenak\nvBr4DnB3xbFIkqpjWy5JTVRP0v1kZn6+8kgkSVWyLZekJqon6b4oIk4FbqKY8Q5AZv6ssqgkSY1m\nWy5JTVRP0j0N+Bdg55qyDmCPKgKSJFViGrblktQ09STd22fm6yuPRJJUJdtySWqienakvCcitqk8\nEklSlWzLJamJ6unp3gy4KyIeA1ZSbLDQkZmbVRqZJKmRbMslqYnqSbrfW3kUkqSq2ZZLUhPVk3Tv\n3kP5JQO5YER8DvhXYD3gXIotii+imNCzGDgiM9dExAyK7YpXAadk5nURMR64DNgIWAYcnJntA4lD\nktYxDW3LJUn9U8+Y7rfV/NsL+ALwjoFcLCKmUcyc34XiA2Bj4CxgVmZOpfi6c3pETAGOKo/bGzgt\nIsYCM4F7ymMvAWYNJA5JWgc1rC2XJPVfnz3dmfmR2vsRsSFwxQCvtzdwD8XOaJOATwMzKHq7Aa6n\n+DBYDSzKzBXAioh4CNgG2BWYXXPsCX1dcPLkCYwePWqA4WqoaGub2OwQ1EC+noOvwW25JKmf6hle\n0tXTwKYDvN7LgU2AdwOvBX4IjMzMjvLxZcAGFAn5UzX1uivvLOvVkiXLBxiqhpL29mXNDkEN0tY2\n0dezHyr8A2Vt2nJJUj/1mXRHxM0U462hGP6xGfDfA7zeE8D9mbkSyIh4lmKISaeJwJPA0vJ2b+Wd\nZZKkPjS4LZck9VM9Pd0n1dzuAP6amfcO8HoLgaMj4izgn4D1gZsiYlpmzgf2AW4GbgdOjYhxwFhg\nC4pJlov3lugFAAAgAElEQVSAfcvH9wEWDDAOSVrXnFRze23bcklSP/WYdEfEa8qbv+3uscz8fX8v\nVq5AshtF0jwSOKI8/9yIWA+4D7gyM1dHxNkUSfVI4PjMfDYizgMujoiFFOvMHtjfGCRpXVJFWy5J\n6r/eerpvoegNGVFT1gG8EhgDDGh2YmYe203xPyxllZlzgbldypYD+w/kupK0jqqkLdfaO+T0eS+6\nf+2Z05sUiaTB0GPSnZmvrb0fES8BzqRYgWRGxXFJkhrAtlyShoZ61ukmIt4O3F3e3Tozf1JdSJKk\nKtiWS1Lz9DqRMiLWp9i8Zm9ghg20JLUe23JJar4ee7rLHpF7yrtb2UhLUuuxLZekoaG3nu6fAM9R\n7BB5d0R0lo8AOjJzs4pjkyStPdtySRoCeku6X9vLY5Kk1mBbLlXogCtmvuj+OXvMblIkGup6W73k\nd4MZiCSp8RrRlkfEjsAZmTktIl4HXESx7OBi4IjMXBMRM4DDgFXAKeW+DOOBy4CNgGXAwZnZvrbx\nSFIrqmv1EknSuikijgXOB8aVRWcBszJzKsUQlekRMQU4CtiFYrLmaRExFpgJ3FMeewkwa7Djl6Sh\nop5t4CVJ666Hgf2AS8v721FsuANwPcVY8dXAosxcAayIiIeAbYBdgdk1x54wWEFr3dJ1o6HxOzQp\nEKkXJt2SpB5l5lURsWlN0YjM7ChvLwM2ACYBT9Uc0115Z1mfJk+ewOjR3W+U2dY2se7YrTd0rzuQ\neq0QY3/rDeXYWq1eK8Ro0i1J6o81NbcnAk8CS8vbvZV3lvVpyZLl3Za3tU2kvX1ZP8NtnXrAoNdr\n1nUHUq8VYuxPvVZ5X7ZCvaEUY2/JuGO6JUn9cVdETCtv7wMsAG4HpkbEuIjYANiCYpLlImDfLsdK\n0jrJpFuS1B+fAk6OiJ8D6wFXZubjwNkUSfU84PjMfBY4D9gyIhYChwInNylmSWo6h5dIknqVmY8C\nO5W3HwB27+aYucDcLmXLgf0HIURJGvLs6ZYkSZIqZtItSZIkVczhJZIGVdctk4cKt26WJFXJnm5J\nkiSpYibdkiRJUsVMuiVJkqSKmXRLkiRJFTPpliRJkipm0i1JkiRVzKRbkiRJqpjrdEuS1MJq1753\nvXlp6LKnW5IkSaqYSbckSZJUsaYML4mIjYA7gXcAq4CLgA5gMXBEZq6JiBnAYeXjp2TmdRExHrgM\n2AhYBhycme1NeAqSJElS3Qa9pzsixgDfAP5eFp0FzMrMqcAIYHpETAGOAnYB9gZOi4ixwEzgnvLY\nS4BZgx2/JEmS1F/NGF7yJWAO8Kfy/nbALeXt64E9gR2ARZm5IjOfAh4CtgF2BX7c5VhJkiRpSBvU\n4SUR8R9Ae2beEBGfK4tHZGZHeXsZsAEwCXiqpmp35Z1lvZo8eQKjR49qQPRqpra2ic0OQcOc7zFJ\nUpUGe0z3IUBHROwJbEsxRGSjmscnAk8CS8vbvZV3lvVqyZLlax+1mq69fVmzQ9AwN1TfY/4xIEnD\nw6AOL8nM3TJz98ycBvwK+DBwfURMKw/ZB1gA3A5MjYhxEbEBsAXFJMtFwL5djpUkSZKGtKGwZOCn\ngJMj4ufAesCVmfk4cDZFUj0POD4znwXOA7aMiIXAocDJTYpZkiRJqlvTdqQse7s77d7N43OBuV3K\nlgP7VxuZJEmS1FhDoadbkiRJGtZMuiVJkqSKmXRLkiRJFTPpliRJkipm0i1JkiRVzKRbkiRJqphJ\ntyRJklQxk25JkiSpYk3bHEeSJGlddcAVM190/5w9ZjcpEg0We7olSZKkipl0S5IkSRUz6ZYkSZIq\nZtItSZIkVcykW5IkSaqYSbckSZJUMZNuSZIkqWIm3ZIkSVLF3BxHktRvEfFLYGl597fAqcBFQAew\nGDgiM9dExAzgMGAVcEpmXteEcKVuHXL6vBfdH79DkwLROsGkW5LULxExDhiRmdNqyn4IzMrM+REx\nB5geET8HjgK2B8YBCyPiJ5m5ohlxS1IzmXRLkvrrzcCEiLiR4nPkOGA74Jby8euBvYDVwKIyyV4R\nEQ8B2wC/GPyQJam5TLolSf21HPgScD7weooke0RmdpSPLwM2ACYBT9XU6yzv1eTJExg9elS3j7W1\nTRxQwMO9XrOuO5j1WiHGwao3lGNrVr1WiNGkW5LUXw8AD5VJ9gMR8QRFT3enicCTFGO+J3ZT3qsl\nS5Z3W97WNpH29mX9DrZV6gEDrre29VuhXivEOBj1WuX9PJj1hlKMvSXjrl4iSeqvQ4AzASLilRQ9\n2jdGxLTy8X2ABcDtwNSIGBcRGwBbUEyylKR1jj3dkqT++hZwUUQspFit5BDgr8DciFgPuA+4MjNX\nR8TZFAn4SOD4zHy2WUFLUjOZdEuS+iUzVwIHdvPQ7t0cOxeYW3lQw8ABV8x8/vY5e8xuYiSSquDw\nEkmSJKliJt2SJElSxUy6JUmSpIoN6pjuiBgDXABsCowFTgHupc6tgyNiPHAZsBHFeq8HZ2b7YD4H\nSZIkqb8Gu6f7Q8ATmTkVeCfwdeAsiq2DpwIjKLYOnkKxdfAuwN7AaRExFpgJ3FMeewkwa5DjlyRJ\nkvptsFcv+R5wZXl7BEUvdn+2Dt4VmF1z7Al9XbC3nc3UOtZ2lzapL77HJLWC2lVuwJVuWsmgJt2Z\n+TRAREykSL5nAV/qx9bBteV1bSfc085mai1ru0ub1Jeh+h7zjwFJGh4GfSJlRGwM3AxcmpnfBtbU\nPNzX1sG15XVtJyxJkiQ122BPpHwFcCNwZGbeVBbfFRHTMnM+xdbBN1NsHXxqRIyjmHDZuXXwImDf\n8vHObYYlSWqqQ06f9/zta8+c3sRIJA1Vgz2m+zhgMnBCRHSOxz4aOLuerYMj4jzg4nLr4Z52RJMk\nSZKGlMEe0300RZLdVV1bB2fmcmD/aqKTJEmSquHmOJIkSVLFTLolSZKkipl0S5IkSRUb7ImUkiRJ\nLa12tZrxOzQxELUUe7olSZKkipl0S5IkSRUz6ZYkSZIqZtItSZIkVcykW5IkSaqYSbckSZJUMZNu\nSZIkqWIm3ZIkSVLF3BxHkqQGOuCKmc/fPmeP2U2MRNJQYtItSZI0zPnHYPM5vESSJEmqmEm3JEmS\nVDGHl0iSJA2CQ06f9/zt8Ts0MRA1hT3dkiRJUsVMuiVJkqSKmXRLkiRJFXNMtyRJkrrlUoONY0+3\nJEmSVDGTbkmSJKliDi+RJKlUu6TbtWdOb2Ik0gtcanB4sKdbkiRJqpg93ZIkSWooJ2D+I5NuSZK6\nUZs0gImDpLXTckl3RIwEzgXeDKwAPpaZDzU3KklSd2yzpeZpxbHgw7mHvOWSbuC9wLjMfGtE7ASc\nCTjbReqitrEdSlql4VfD2GZLLaTrZ4dtduO0YtK9K/BjgMy8NSK2b3I8kqSeNb3NdpiIVL1mJuut\n8js+oqOjo9kx9EtEnA9clZnXl/d/D2yWmauaG5kkqSvbbEkqtOKSgUuBiTX3R9p4S9KQZZstSbRm\n0r0I2BegHB94T3PDkST1wjZbkmjNMd1XA++IiP8BRgAfaXI8kqSe2WZLEi04pluSJElqNa04vESS\nJElqKSbdkiRJUsVMuiVJkqSKteJESlXArZo1GCJiR+CMzJzW7FjUevr7/omIMcAFwKbAWOCUzPxh\nHfVGAXOBADqAwzNzcZ3X3Ai4E3hHZt5fZ51fUiytCPDbzKxrsmlEfA74V2A94NzM/FYddf4D+I/y\n7jhgW2BKZj7ZR70xwMUUP8vVwIx6nl9EjAUuBDajeI5HZOaDvRz//GscEa8DLqJ4DRaXddf0Va+m\n7MtAZuacOq+3LfC18vmtAD6cmX+uo96bgG9STBR+kOLzs9tlMXuI80Dg45n51jrjfAtwXXktgPMy\n84o+6mxE8Z6eDIwqn9vDdVzrO8CU8qFNgVsz8wN11NsWmAOsAh4ofyZ9vnYR8c9lvRXAr4Cju9br\n7vcauJc+3iu9tQe9vVd6uN4fqOM16MqebnV6fqtm4LMUWzVLDRMRxwLnU3zQS/0ywPfPh4AnMnMq\n8E7g63XWew9AZu4CzAJOrTPGMcA3gL/XG2BEjANGZOa08l+9Cfc0YGdgF2B3YON66mXmRZ3Xovjj\n4Ki+Eu7SvsDozNwZ+Dx1/kyAGcDTmbkT8HF6eQ26eY3PAmaVr98IYHo99SKiLSKup/iDpEfdXO+r\nFMnvNOD7wGfqrPdfwHHl+wXK908d9SgT6I+Wz6/eOLcDzqp5z3SXcHetMxu4PDN3o3hPv7Gea2Xm\nB8qfx/uAJ4FP1BnjicDnM3NXikT1XXXW+yZwTPmaPwUc2E217n6v63mv/EO9Ot8r3V2vz9egOybd\n6vSirZqBQd+qWcPew8B+zQ5CLWsg75/vASeUt0dQ9Lr1KTOvAQ4t725CkWzU40sUvXR/6keMbwYm\nRMSNETGvXMu8HntTrHl+NXAtRa9b3SJie2DLzPxmnVUeAEaX34pOAp6rs96bgOuh6EYEtujl2K6v\n8XbALeXt64E966z3EuAk4NI+Yuta7wOZ+avy9mjg2Trr/a/M/FlErEfRK/xUPfUi4mUUCfsx/Yxz\nO+BdEfGziPhWREyso84uwKsj4qfAB4H5dV6r08nA1zLzsTrr3QVsGBEjKDbH6un90rXeqzPzf8rb\niyhyk666+72u573SXb163is9Xa+v1+AfmHSr0yRe3FCsjgiHH6lhMvMq6v+gll5kIO+fzHw6M5eV\nH4hXUvTw1Vt3VURcTDHc4PK+ji+HbbRn5g39iRFYTpGs7w0cDlxeZ9v7corOkf1r6vXYW9qN4ygS\nqXo9TfH1+v0UwxTOrrPer4B3R8SI8g+KV5XDd/5BN6/xiMzsXNd4GbBBPfUy87eZeVtfgXVT7zGA\niNgZOBL4cp31VkfEJsBvKF6XX/dVr/wZfAv4ZPnc6o4TuB34dNlr/QhFr3JfdTYFlmTmnsDv6aEX\nv7vfs3Joytsphm/UG+ODFO+R+4BX0EOS3029RyJi9/L2e4D1u6nT3e91n++V7urV817p4Xp9vgbd\nMelWJ7dqljTsRMTGwM3ApZn57f7UzcyDgTcAcyPiHz78uziEYhOg+RTjpC+JiCm9VwGKHuTLMrMj\nMx8AngD+qY56TwA3ZObKsgf5WaCtjnpExEuByMyb6zm+9Inyem+g6J2/uBwa05cLKD5fFlAMUbgz\nM1fXec3aMbkTqf8bhwGLiH+j+LbiXZnZXm+9zPxdZr6+rHtWHVW2A14PnAd8B3hTRHylzstdnZl3\ndt4G3lJHnSeAzvkM19K/b7PfD3y7H68bFEN1pmbmG4FLqH/I6keAz0XETcBfgL92d1A3v9d1vVcG\n2h50U28gr4FJt57nVs2ShpWIeAVwI/CZzLygH/UOKicpQtETvYYXf6j/g8zcLTN3L8e//opiotrj\ndVzuEMqEJCJeSfGtY09f4ddaCLyz7EF+JUWP4BN11APYDbipzmM7LeGFb0P/BoyhmJDXl38BbirH\n9n6PolewXneVY9cB9qFI3CsTER+i6OGelpl1xxkRP4yI15d3l9HHewUgM2/PzC3L98sHgHszs69h\nJp1uiIgdyttvpxib35eFlJ/xFK//b+q8FhRDNa7vx/FQvEc6Jwf/iWICZz3eBXwwM98OvAz4SdcD\nevi97vO9shbtQXf1BvIauHqJnudWzZKGm+MoPuxPiIjOMZn7ZGZfEx2/D1wYET+jSC6PqaPOQH0L\nuCgiFlKsvHBIPd8yZuZ1EbEbxdfcIylWa6i3JzLoX/ILxVCLCyJiAcVqKcdl5jN11HsQ+EJEHE/R\n+/jRflzzUxTfMqxHMUzhyn7GXLdyuMfZFEMvvh8RALdkZj3DBk6neA1XUvyR9rGq4izNBL4WEc8B\nj/PC/IPefAo4PyJm0vMExZ4M5P3yMeA7EbEKWEkxobYeDwI3RcRy4ObM/FE3x3T3e300cHYf75WB\ntgfd1fsk8OV+vgZuAy9JkiRVzeElkiRJUsVMuiVJkqSKmXRLkiRJFTPpliRJkipm0i1JkiRVzCUD\nNWRExKbA/MzctEt5R2b2Z6e1ns5/EkBmntR5zog4vCyb04Dzv51iO9kNy6IfU+x41bClxiLiPcDr\nM/OsRsYuSQNVtt2/BfbKzJ/UlD9Kseb1o2t5/oacp49rvIZiLeZnymsti4gxFOtNb5KZfyuP+wXw\nZGa+o7wfFJsGbTrA615E8bl30Vo/CQ159nRrnZaZcxqUcO8OXAwclZlbUuxONRa4Zm3P3cV2FJtn\nNCx2SWqA5yjW1J7Y55FD0zTgl5m5XWYuA8jM5yg2jnsrQES0UeRNERETynpT6WYDF6k79nSrZZSb\nF3yRonEcBVyUmV+OiNEUW+luBbwCSGC/zPx7RHyaYtH6v1LsqHZ7l3OeBM/3fj9GsaD+rsAq4IDM\n/G1E/AvFxhATyvMclpm/7RLeCcAXMvOu8nwrI+ITwKMRsQvFBhsnlbuPvah3IyI+DBxD0ZjfCRwB\nrKbYPnmr8vznUjT+h5f1fwdsUhP7u4FTynM8Usb457KH6FJgb4od6z5cs3WtJDXKnyiSzzPpslFI\nuVPgP7R/5b9rKNqsrYE7yrL/oNiM5H2ZeV95mpMi4s0U290flpl3lzsFfgPYmGIXyM9l5k/Ldn0n\n4DXA1zPz3JpY3gB8k+IbyWeAoyj+YDgFeElEzMnMw2vCnwfsAvw38A6KnTw3Bnan2KVxavkYEfER\nik1oOija8iMz8+mIaC/vT6HYofMM4N3lz2wUMD8iJgH/tzwG4OTM7Ny2XcOEPd0aal4ZEb+q/Vfz\n2AyAzPxnYAdgekRMBXYGVmbmW4HXAeOBfSNie4otlt9CsY3tq/u49hSK7YrfAvwMOLLc3ep84MDy\numcCc7upuwNdEvqyl+R/gB17umBEbFk+r50zc1vgL8B/ls9pwzKWPYFdMvNeYA4wJzMvrDnHRhQf\nPO/NzG0okvOv11zmiczcoax7XB8/A0kaqE8Be0fEO/pRZxvgCxS7Hv4LsGnZlv9fXpy8P1i2h1+g\n+FYR4KvABZm5HfCvwDdqetrHZeabahPu0mXA2WVb+QmKjpb7gP8D/LBLwg1Fkr1LeXtv4AaKYSh7\nl2W7AD+NiK2B44HdM3NrioS+czfLlwOnl238dIrPpC2B/Sk+swDeBzxaPpcPUSTzGmZMujXU/Ckz\nt639V/PYnsC/lon4bRRJ9NaZ+TPg3Ig4gqIRfj3wEooe8R9l5tPldsXfq+P6Py7/X0zRE/IGYHPg\nh+V1zwA268fzGU/Rk9GTt5Xx3lqefzrwxvL6ERE3UDTAn+nlHDsAt9eMd/wm8PZenpMkNVxmLqXo\nROjPMJPHM/OuzFwD/JEiyQX4HUVvd6fzy2v8CNgkIl5K8Znw+bLtvJ7iG8XNy+Nv63qhiHgJ8LrM\n/H55rlspxmxHL/HdBbyu7IDZFVhI0aM/LSJeDfytHO+9O3BtZj5R1uvaDnfGMw34fmY+l5ntQOc2\n5/8DvDcirimv84VeYlKLMulWKxkFHFuTjO8EXBgR/wpcDiwHLqTopR5B8RVf7Xt8VV8XyMxny5sd\n5TlGAY/UXHM7igaxq19Q06MdEW0RMZaiR+OOmvN1GlPznL5bc/4dKL6SfIKiJ+RrFB8Ivyw/ZLrT\n9fd4BC8eOtb1OUlSJTLzRl4YZtKpp/YPYGWXU/TUTnctX0nRfu7R5TPhnvLx7iawj+Qf28Cu7eWL\nlH8M3AYcBDyQmSsy84/lud7JC+O5e22HaybUd/u5lJkPUnS4XE7Ry317RNheDzMm3Wol84AZETGm\n7LFYSJHo7kmRuF4IPA7sRtEY3wS8OyI2iIhxFF/f9df9wIblMBYohqt8u5vjTgaOj4i3lJNt5lH0\nMD+QmTdTjAXfLCLGRcSGvPDV4XzgfRGxUdnAngccU/4hcRnFWMGjgKcpxhGu4h8/IG4DdipXEIDi\nK9mbB/BcJakRPkUx/OKV5f2e2r/++CBARLwPuD8zl1O0s/+7LH8TcDfF3JtulT3xD0fEfmWdnSiG\nFS7u49rzgE9SDCvpdDNwNC8k3fMpvont/DZxBt23wz8F9o+IsRExmSJxJyKOpBjH/b3yOW0EbNBH\nXGoxJt1qJXOABym+7rsDuDAz51OMsf73iLgL+D5wK/DazPwV8BWKXuhbKL6u7JfMXEEx7u7MiLgb\nOBj4aDfH/Yxi8s855bXWA9qBCRGxS2b+hiKB/g3FMJcFZb1fUyTs88rHRgKnU3xV+vey7HaKryPv\noejF/2BEfLzm2n+mSLSvjojfUHx92XVcoiQNipphJmPK+922f/30hnIYyScp2mGAj1N0ONwNXAEc\n1LnySC8+BBwVEfdQzH3ZLzO79rZ3dRPwJl6cdN8IvJZiWAiZeTdwGnBLRNwPvBSY1fVEmfkDigR9\nMfBD4N7yoUsohhR2tvMnZeaTfcSlFjOio6Oj2TFIw1ZEbEIxIfKuZsciSZKax6RbkiRJqpjDSyRJ\nkqSKmXRLkiRJFTPpliRJkipm0i1JkiRVzKRbkiRJqphJtyRJklQxk25JkiSpYibdkiRJUsVMuiVJ\nkqSKmXRLkiRJFTPpliRJkipm0i1JkiRVzKRbkiRJqphJtyRJklQxk25JkiSpYibdkiRJUsVMuiVJ\nkqSKmXRLkiRJFTPpliRJkipm0i1JkiRVzKRbkiRJqphJtyRJklQxk25JkiSpYibdkiRJUsVMuiVJ\nkqSKmXRLkiRJFTPpliRJkipm0i1JkiRVbHSzA6hae/uyjv4cP3nyBJYsWV5JLFWeu+rzG3tzzt+q\n5676/OtS7G1tE0dUEsgQ1t92e7BU/b4bbvx59Y8/r/4Zqj+v3tpse7q7GD16VEueu+rzG3tzzt+q\n5676/MauZvC16x9/Xv3jz6t/WvHnZdItSZL0/9u79zi5yvrw459cICGwoVEXqYogWr8/KiAWCxQI\nxBRBqBZFQYsoinJJQbDFKwQFBYEoKlRuRhEQbLFcRGnDRbkYUi6iIETwy028VKgrBghEEpPs749z\nlgzrZpOZOWd3dvfzfr18MfPMmWe+5yDf+e4zz3keqWYW3ZIkSVLNLLolSZKkmll0S5IkSTWz6JYk\nSZJqNuqXDJQkrb2I2B44NTNnRMRGwFxgGjABeG9mPhQRBwOHAsuBEzPzqohYD7gI2AhYDByYmT0R\nsQNwennstZl5wjCcliQNO0e6JUkARMTHgK8Bk8umOcDFmbkLMBv4fxGxMXAksBOwB3ByREwCZgH3\nZOZ04MLyeIBzgP2BnYHtI+J1Q3U+ktRJLLolSX0eAvZpeL4T8LKI+D7wbuBGYDtgQWYuzcwngQeB\nrSmK6qvL980DdouIqcCkzHwoM3uBa4DdhuRMJKnDOL1E0pj13//9PX75y0fYb79/4hvf+Bof+cgn\nBjzuHe94CxdffCmTJk0atG11Tj/9NN75znczZcp63Hrrjeyww4yqTqFSmXlZRGzW0LQZsCgzd4uI\nTwEfB+4Hnmw4ZjGwITC1ob2x7al+x26+pjimTZvSsRtfdHd3DXcII4rXqzlerzW7/PLLefjhhznw\nwAM588wzOf744wc8bubMmcybN+95OXqgttU56aSTeP/738+UKVOYP38+b3nLW9qO3aJb0pj3whe+\naLUFdxWOOupoAH7ykzu4/vrrO7boHsDjwHfLx98DTgLuABorgy7gCYriumuQtsb2QXXi1s5QFEQ9\nPYuHO4wRw+vVHK/X2lm8+FmWLFlGd3c3hx9+9Gqv2YoVK+npWcykScsGbVudQw45EoDbbruDefOu\nWeu8PdgfTk4vkTRmLF36LJ/+9Cc59ND3c9BBB/D4478H4NFHf8shh7wPgAUL5vP2t7+dD3zgPZx6\n6kmsXLnyufd/5zuXcswxH2XZsiJhf/7zn+OIIw7huOM+wdKlz/LMM09z3HGf4F/+5XDe8579uOKK\nSwE44ohD+OUvH+HCC8/j1ltv5corLx/aE2/dzcBe5eNdgJ8BtwPTI2JyRGwIbAEsBBY0HLsnMD8z\nnwKWRcQrI2IcxRzw+UN5ApJGttXl7d/85jfPy9sf/OB7a8vbP/7xHZXkbUe6JY0Z3/nOZWy88Us4\n4YST+fWvf8Utt9zM008//dzry5cv50tfmsPll1/GypXrcvHFF/C73/0OgMsuu4QHHrifz372FCZM\nKKY+vPWt72DLLbfirLNO57vf/Q5bb70Nu+22O7vuOpPf/76HI444hLe97R3P9f/e9x7E1Vd/l733\n3ocR4mjgaxExi2LqyP6ZuSgizqAonscDx2bmsxFxNnBBRNwMLKO4eRLgMOBiitVPrs3M24b8LCSN\nWGubt+fOvYBp015QS96+8srLKsnbFt01OeiU6/+s7Xun7T0MkUjq86tf/ZIddtgRgE02eTn33NPF\n448//tzrTz75BF1dXbzwhS+kp2cx7373gc+9dscdtzNhwoTnEvfEieuw5ZZbAbDllq/lRz+6jRkz\nZvLtb3+Lm266gSlT1mf58uVDeHbVyMxHgB3Kx78E3jjAMXMplhJsbFsC7DvAsbf29TccBsrFrTKH\nS0NvbfP2tGkvAOjovO30EkljxqabvoL77rsXgP/9399w7rlnPu/1adNewNNPP80TTxTTjr/85c9z\n770LATj55NPo6prKd75T/PS4fPmfeOCBBOCnP72TzTd/Jf/xHxex5ZZb86lPfZaZM3ejt7f3ef2P\nHz/+eT97SpIGt7Z5+6mnivu468nbz29rlSPdksaMvffeh5NP/gxHHHEIK1as4J3vfDdPPrnqvr7x\n48fzr//6cQ499FBWrOjl1a8OttjiNc+9/uEPf4SDDz6QbbfdjnXWWYdLL72E3/zm12y88cbMmvUh\n7r77Lr70pTn84AfXssEGGzBhwoTn5hECvPSlL+P+++/n29/+Fvvttz+SpMGtbd7+6Ec/zPjx42vJ\n2w8//GAleXtc/4p+tOnpWdzUCVZ19/DqppfUeWdynXc+131XtbGPrr7r7n8sxd7d3TWulkA6WLN5\ne256Iu4AACAASURBVDBVTy9xdYm152oczfF6NadTr9dgOdvpJZIkSVLNLLolSZKkmll0S5IkSTWz\n6JYkSZJqZtEtSZIk1cwlAyWNKVWuZgFw3idmVtqfJGmV0ZSzLbolqUYrV67ktNNO4cEHH2CdddZh\nzpxTmDLlBcMdliRpNfrn7U984jhe9rJN2u7X6SWSVKP5829k2bJlnHvuNzjssA9xyimnDHdIkqRB\n9M/bX/nKlyrp16Jbkmp09913sf32fwfAlltuxcKFC4c5IknSYPrn7Z///L5K+rXolqQaPfPMM6y/\n/gbPPZ8wYQLLly8fxogkSYPpn7fHjx9fSd626JakGq2//vosWbLkuecrV65k4kRvp5GkTtU/b/f2\n9laSty26JalGW231Wm69dQEACxfew6tf/ephjkiSNJj+eXvzzV9VSb8Ot0gaU9Zmuaju7i56ehZX\n8nm77PIGfvSj2zjssIPo7e3l858/tZJ+JWksWF3OrjJP99c/bx9zzKcr6deiW5JqNH78eD760WOe\ne17nF4UkqX3983Zl/VbeoyRJkqTnseiWJEmSambRLUmSJNXMoluSJEmqmUW3JEmSVDNXL5E0phx+\n/ccq7e/MmXMq7U+StMpoytmOdEvSEPjZzxZyxBGHDHcYkqS1UEfOdqRbkmp28cUXcM01/83kyesN\ndyiSpDWoK2c70i1JNXvpS1/GSSd9frjDkCSthbpytkW3JNVsxoy/Z+JEf1iUpJGgrpw95N8CEfET\n4Kny6S+Ak4DzgV5gIXB4Zq6MiIOBQ4HlwImZeVVErAdcBGwELAYOzMyeIT4FSZIkqSlDWnRHxGRg\nXGbOaGj7LjA7M2+MiHOAvSPiFuBI4PXAZODmiLgOmAXck5nHR8S7gNnAUUN5DpI0mkXE9sCp/fL0\n/sCHMvPvyudrPSgSETsAp5fHXpuZJwzpCUlShxjqke7XAlMi4trys48BtgVuKl+fB+wOrAAWZOZS\nYGlEPAhsDewMzGk49rghjF3SKLA2y0V1d3fR07N4CKLpLBHxMeA9wDMNba8DPgCMK59vTHODIucA\nbwceBv4rIl6XmXcO3VlJGslWl7NHYp4e6qJ7CfAF4GvAX1EUzuMys7d8fTGwITAVeLLhfQO197UN\natq0KUycOKGpILu7u5o6vlP6rrt/Yx+e/kdq33X3P9Ji7+4Orrjislr6rtBDwD7ANwEi4oXA54AP\nA3PLY7ZjLQdFImIqMCkzHyr7uwbYDbDoltTR/vIvX8JXv3p+pX0OddF9P/BgWWTfHxGPU4x09+kC\nnqCY8921hva+tkEtWrSkqQDr/supzr7rjL3u62Lso6vvuvsfS7EPZYGemZdFxGYAETEB+Drwr8Af\nGw5rZlBkKqvu4elr33xNcbQyWDJUOvgPpo7k9WqO16s5I+16DXXRfRCwFfDPEfESioR8bUTMyMwb\ngT2BG4DbgZPKOeCTgC0obrJcAOxVvr4nMH+I45eksWJbil8kz6aYRvLXEfFl4HrWflBkdQMog2p2\nsGQojbSfs4fTSPz5fzh5vZrTqddrsD8Ehrro/jpwfkTcTLFayUHA74G5EbEucB9waWauiIgzKIrq\n8cCxmflsRJwNXFC+fxmw/xDHL0ljQmbeDrwGoBz9/o/M/HA5p3utBkUy86mIWBYRr6SY070H4I2U\nksakIS26M3N1hfKuAxw7l1VzCPvalgD71hOdJGlNMvOxJgdFDgMuBiZQrF5y23DELUnDzd0aJEnP\nycxHgB0Ga2tmUCQzb+3fnySNRe5IKUmSJNXMoluSJEmqmUW3JEmSVDOLbkmSJKlmFt2SJElSzVy9\nRJKktbDfJbMq6+vMmXMq60vSyOBItyRJklQzi25JkiSpZhbdkiRJUs0suiVJkqSaWXRLkiRJNbPo\nliRJkmpm0S1JkiTVzKJbkiRJqplFtyRJklQzi25JkiSpZhbdkiRJUs0mDncAat5Bp1w/YPv3Ttt7\niCORJEnS2nCkW5IkSaqZRbckSZJUM4tuSZIkqWYW3ZIkSVLNLLolSZKkmll0S5IkSTWz6JYkSZJq\nZtEtSZIk1cyiW5IkSaqZRbckSZJUM7eBlyQ9JyK2B07NzBkRsQ3wb8AKYCnw3sz8v4g4GDgUWA6c\nmJlXRcR6wEXARsBi4MDM7ImIHYDTy2OvzcwThuG0JGnYOdItSQIgIj4GfA2YXDadDnwoM2cAlwMf\nj4iNgSOBnYA9gJMjYhIwC7gnM6cDFwKzyz7OAfYHdga2j4jXDdHpSFJHcaRbktTnIWAf4Jvl83dl\n5qPl44nAs8B2wILMXAosjYgHga0piuo55bHzgOMiYiowKTMfAoiIa4DdgDsHC2LatClMnDihurPq\nQN3dXcMdwpAYK+dZFa9Xc0ba9bLoliQBkJmXRcRmDc8fBYiIHYEjgF0oRrefbHjbYmBDYGpDe2Pb\nU/2O3XxNcSxatKTlcxgpenoWD3cItevu7hoT51kVr1dzOvV6DfaHgNNLJEmrFRHvpJgi8g+Z2UNR\nRDd+q3QBT/RrH6itsV2SxhyLbknSgCLiAIoR7hmZ+XDZfDswPSImR8SGwBbAQmABsFd5zJ7A/Mx8\nClgWEa+MiHEUo+Tzh/QkJKlDOL1EkvRnImICcAbwK+DyiAC4KTM/HRFnUBTP44FjM/PZiDgbuCAi\nbgaWUdw8CXAYcDEwgWL1ktuG+FQkqSNYdEuSnpOZjwA7lE9fsJpj5gJz+7UtAfYd4NhbG/qTpDHL\n6SWSJElSzSy6JUmSpJpZdEuSJEk1s+iWJEmSambRLUmSJNXMoluSJEmq2bAsGRgRGwE/Bt4ILAfO\nB3opNlg4PDNXRsTBwKHl6ydm5lURsR5wEbARxXbCB5Y7pEmSJEkda8hHuiNiHeBc4I9l0xeB2Zk5\nHRgH7B0RGwNHAjtR7GB2ckRMAmYB95THXgjMHur4JUmSpGYNx0j3F4BzgE+Wz7cFbiofzwN2B1YA\nCzJzKbA0Ih4EtgZ2BuY0HHvcmj5s2rQpTJw4oakAu7u7mjq+U/quu39jH57+R2rfdfdv7JKkkWRI\ni+6IeB/Qk5nXRERf0T0uM3vLx4uBDYGpwJMNbx2ova9tUIsWLWkqxu7uLnp6Fjf1nmbU2Xed/dd9\nXers39iHvu+6+x9LsVugS9LoMNQj3QcBvRGxG7ANxRSRjRpe7wKeAJ4qHw/W3tcmSZIkdbRK5nRH\nxNSIeM2ajsvMXTJz18ycAdwFvBeYFxEzykP2BOYDtwPTI2JyRGwIbEFxk+UCYK9+x0qSBrC2uVmS\nVL+WR7oj4oPAjsDHgTuBxRFxWWY2e3Pj0cDciFgXuA+4NDNXRMQZFEX1eODYzHw2Is4GLoiIm4Fl\nwP6txi9Jo1GFuVmSVKF2ppfMoljy7wDgSuAo4FbWckWRcrS7z64DvD4XmNuvbQmwb2vhStKY0FZu\nliTVo63pJZn5B4rpHv+VmcuB9SqJSpLUMnOzJHWedorun0XEVcDmwPcj4tvAj6oJS5LUInOzJHWg\ndorugyjWzN4+M5cB3wQ+WElUkqRWmZslqQO1U3SPB6YDX46IqcDr2uxPktQ+c7MkdaB2EvGZwPoU\nO0ouB14FfL2KoCRJLTM3S1IHaqfo3jYzjwH+VK4qciDFiIokafiYmyWpA7VTdPeWa2v3beH+oobH\nkqThYW6WpA7UTtH9ZeD7wMYR8WXgDuBLlUQlSWqVuVmSOlDLm+Nk5jcj4sfAG4AJwFsy8+7KIpMk\nNc3cLEmdqeWR7oiYCLwCeAp4AtgmIt5bVWCSpOaZmyWpM7WzDfy3gE2B+1g1X7AXuLDdoCRJLTM3\nS1IHaqfo3hrYIjO9QUeSOoe5WZI6UDs3Ut4HbFxVIJKkSpibJakDtTPSPQXIiFgIPNvXmJkz245K\nktQqc7MkdaB2iu7PVRaFJKkqbeXmiNgeODUzZ0TEq4DzKeaELwQOz8yVEXEwcCjFjpcnZuZVEbEe\ncBGwEbAYODAzeyJiB+D08thrM/OEduKTpJGq6eklEfE35cPe1fxPkjTEqsjNEfEx4GvA5LLpi8Ds\nzJwOjAP2joiNgSOBnYA9gJMjYhIwC7inPPZCYHbZxznA/sDOwPYR4e6YksakVka6ZwEHAwONVvQC\n/oQpSUOvitz8ELAP8M3y+bbATeXjecDuwApgQWYuBZZGxIMUN2/uDMxpOPa4iJgKTMrMhwAi4hpg\nN+DOwYKYNm0KEydOWItwR67u7q7hDmFIjJXzrIrXqzkj7Xo1XXRn5sHlP99QfTiSpFZUkZsz87KI\n2KyhaVzDKiiLgQ2BqcCTDccM1N7Y9lS/YzdfUxyLFi1pJfwRpadn8XCHULvu7q4xcZ5V8Xo1p1Ov\n12B/CDRddEfEDQzyU6U360jS0KspN69seNxFsdnOU+XjwdrXdKwkjTmtTC85vuogJEltO76GPu+M\niBmZeSOwJ3ADcDtwUkRMBiYBW1DcZLkA2Kt8fU9gfmY+FRHLIuKVwMMUc8C9kVLSmNRK0e3NkmPQ\nfpfMGrD9zJlzBmyXNOTqyM1HA3MjYl2K9b8vzcwVEXEGMJ/iZvxjM/PZiDgbuCAibgaWUdw8CXAY\ncDEwgWL1kttqiFOSOl4rRXffKMULgVcC/0NxY82OwD0Ud7RLkoZWJbk5Mx8Bdigf3w/sOsAxc4G5\n/dqWAPsOcOytff1J0ljWyo2UbwCIiP8G9snMB8vnmwLnVhueJGltmJslqbO1sw38pn1JvfQrYNM2\n45EktcfcLEkdqJ0dKX8cERcA36Yo3venmOMnSRo+5mZJ6kDtFN0fBD5EcZNML/B94KwqgpIktczc\nLEkdqOWiOzOXRcQ3KEZTxlHcmb4LcH1FsWkMcXUUqRrmZknqTC0X3RFxMvDPwDrA74GXAncA21cT\nmiSpWeZmSepM7dxI+S5gE+AS4A3AbkBPFUFJklpmbpakDtRO0f1oZj5FsRPZazPzBuDF1YQlSWqR\nuVmSOlA7N1I+GRHvAX4MfCgifgtMqyYsSVKLzM2S1IHaGen+ALBRZt4IPEKx+cLsCmKSJLXO3CxJ\nHaid1Ut+GxHnRMTWwEeB9TLzmepCkyQ1y9wsSZ2p5ZHuiPh74KfAlRTzBX8REbtXFZgkqXnmZknq\nTO1ML/kcsDPwRGY+CswAPl9FUJKklpmbJakDtVN0j8/Mx/qeZOa9FcQjSWqPuVmSOlA7q5f8JiLe\nDPRGxF8AhwO/qiYsSVKLzM2S1IHaGek+FHg3xSYMDwPbAIdUEZQkqWXmZknqQO2sXvI74J8qjEWS\n1CZzsyR1pqaL7oi4Aehd3euZObOtiCRJTTM3S1Jna2Wk+/jyn+OAucAHK4tGktSq48t/mpslqQM1\nXXRn5k19jyPi6cbnkqThYW6WpM7WzuolMMhPmQOJiAkUIzBRvvcw4Fng/PL5QuDwzFwZEQdT3BC0\nHDgxM6+KiPWAi4CNgMXAgZnZ0+Y5SNJo01RuliTVr53VS1rxFoDM3AmYDZwEfBGYnZnTKX4W3Tsi\nNgaOBHYC9gBOjohJwCzgnvLYC8s+JEmSpI7Wyo2U32DVKMqmEXFe4+uZedDq3puZ34mIq/reCzwB\n7Ab0/Qw6D9gdWAEsyMylwNKIeBDYmmKXtTkNxx7XbPySNBq1k5slSfVrZXrJjQ2Pm54zmJnLI+IC\n4G3AO4A3ZmbfF8ViYENgKvBkw9sGau9rG9S0aVOYOHFCUzF2d3c1dXyn9D0U/Q/151XV/0iJczT1\nXXf/xv5nbmx47HxuSeowrdxIeUG7H5qZB0bEx4HbgPUaXuqiGP1+qnw8WHtf26AWLVrSVGzd3V30\n9Cxu6j3NqLPvoeh/qD+viv7r/ndaZ/8jte+6+x9Lsa9tgV5FbpYk1WdI53RHxHsi4pPl0yXASuCO\niJhRtu0JzAduB6ZHxOSI2BDYguImywXAXv2OlSRJkjpa00V3RKzfxuddDrwuIn4IXAN8GDgcOCEi\nbgHWBS7NzMeAMyiK6uuBYzPzWeBs4DURcTPFtsYntBGLJI0abeZmSVLNWp3T/bcRcVZm/nMzb8zM\nZ4D9Bnhp1wGOnUuxvGBj2xJg32Y+U5LGiBtpMTevTkSsA1wAbEZxg/vBFMu4no/LvEpSU1opujeI\niIuAN0XE5P4veoe8JA2LOnLzXsDEzNwxIt5IsczrOhTLvN4YEedQLPN6C8Uyr68HJgM3R8R1rFrm\n9fiIeBfFMq9HtXR2kjTCtVJ07w68AZiOd8hLUqeoIzffD0yMiPEUq0f9CdgBl3mVpKa1snrJr4EL\nI+KnwL0Uu0tOBBZm5vKK45MkrYWacvPTFFNLfg68CHgzsEudy7xCa0u9jjRDvbzrcBkr51kVr1dz\nRtr1amcb+HWAB4DHKW7IfHFEvC0zb6skMklSK6rMzf8CXJOZn4yITShubF+34fXKl3mF5pd6HYmG\nennX4VD30p6jjderOZ16vQb7Q6CdJQNPB96Zmdtm5uuAfYB/a6M/SVL7qszNi1g1Uv0HioL+Tpd5\nlaTmtVN0b9A4cpKZt1LcQCNJGj5V5uYvAX8TEX3Ltx6Dy7xKUkvamV7yh4jYOzOvBIiIt1L8nClJ\nGj6V5ebMfBqXeZWkSrRTdB8CXBQRXwfGAQ8BB1QSlSSpVeZmSepALRfdmfkAsH25C9r4zOy82eyS\nNMaYmyWpM7Uz0g08t8ukJKmDmJslqbO0cyOlJEmSpLXQctEdEYdVGYgkqX3mZknqTO1MLzkCOKeq\nQKS67HfJrAHbz5w5Z8B2aYQzN0tSB2qn6P51RFwP3Ab8sa8xMz/TdlSSpFaZmyWpA7VTdN/a8Hhc\nu4FIkiphbpakDtTOkoEnlEtSvZJiu9/1vFtekoaXuVmSOlM7N1LOBH4KXAm8GHgkInavKjBJUvPM\nzZLUmdpZMvBkYGfgicx8lGJb4M9XEpUkqVXmZknqQO0U3eMz87G+J5l5bwXxSJLaY26WpA7Uzo2U\nv4mINwO9EfEXwOHAr6oJS5LUInOzJHWgdka6DwXeDWwCPAxsAxxSRVCSpJaZmyWpA7WzesnvgH+K\niKnAnzLzj2t6jySpXuZmSepMLRfdEbEVcAHw8vL5z4EDM/OhimKTJDXJ3CxJnamd6SXnAMdm5osy\n80XAacB51YQlSWqRuVmSOlA7Rfd6mTmv70lmXgFMbT8kSVIbzM2S1IGanl4SES8vH/40Ij4BfB1Y\nTnHjzvwKY1OT9rtk1oDtZ86cM8SRSBpq5mZJ6mytzOm+CegFxgEzKO6U79MLHNl+WJKkJpmbJamD\nNV10Z+Yr6ghEktQ6c7MkdbZ2Vi8JirVfpzW2Z+ZB7QYlSWqNuVmSOlM7O1JeAfwHcHdFsUiS2mdu\nlqQO1E7R/URmfqaySNQRDjrl+gHb19tuiAOR1CpzsyR1oHaK7vMj4iTgBxR3yAOQmT9sOypJUqvM\nzZLUgdopumcAfwvs2NDWC8xsJyBJUltmYG6WpI7TTtH9+sz8q8oikSRVwdwsSR2onR0p74mIrSuL\nRJJUBXOzJHWgdka6NwfujIhHgWUUGzL0ZubmlURWs9XdMPi90/Ye4kgkqVKV5uaI+CTwj8C6wFkU\nm/CcTzFlZSFweGaujIiDKTbkWQ6cmJlXRcR6wEXARsBi4MDM7Gnn5CRppGqn6H5rZVFIkqpSWW6O\niBkUc8N3AqYAHwG+CMzOzBsj4hxg74i4hWLHy9cDk4GbI+I6YBZwT2YeHxHvAmYDR1UVnySNJO0U\n3buupv3CNvqUJLWnyty8B3APxdrfU4GPAgdTjHYDzAN2B1YACzJzKbA0Ih4EtgZ2BuY0HHtcCzFI\n0qjQTtH9hobH6wDTgR9i0S1Jw6nK3PwiYFPgzcArgO8C4zOzt3x9MbAhRUH+ZMP7Bmrva1ujadOm\nMHHihBbCHTm6u7uGO4QhMVbOsyper+aMtOvVctGdme9vfB4RLwAuaTsiSVLLKs7NjwM/z8xlQEbE\ns8AmDa93AU8AT5WPB2vva1ujRYuWtBjuyNHTs3i4Q6hdd3fXmDjPqni9mtOp12uwPwTaWb2kv6eB\nzSrsT5LUvnZy883AmyJiXES8BFgf+EE51xtgT2A+cDswPSImR8SGwBYUN1kuAPbqd6wkjUktj3RH\nxA0Ud69DcXf85sB/VRGUJKk1VebmcgWSXSiK6vHA4cAvgLkRsS5wH3BpZq6IiDMoiurxwLGZ+WxE\nnA1cEBE3U6yksn8bpyZJI1o7c7qPb3jcC/w+M+8d7A0RsQ5wHsWoyyTgROBeXH5KkqpyfMPjtcrN\ng8nMjw3Q/Gc3a2bmXGBuv7YlwL6tfrYkjSZNTy+JiJdHxMspRjv6/vcI8HTZPpgDgMczczrwJuAr\nrFp+ajrFqMzeEbExxfJTO1HcPX9yRExi1fJT0yluCprdbPySNBq1mZslSTVrZaT7JorRk3ENbb3A\nSyjulB/slvP/BC4tH4+jGMXeFpefkqR2tZObJUk1a7rozsxXND6PiA2A0yhGpA9ew3ufLt/TRVF8\nzwa+UOfyU60sPVXnEjTDsbzNSD6fkRL7SIlzKPuuu39jf752crMkqX7tzOkmIv6eYg7fdcBWmbnG\ntVsiYhOKjRbOysxvRcSchpcrX36qlaWn6lyCZjiWtxnJ5zMSYq9z2aKR2nfd/Y+l2Fsp0FvJzZKk\nerVUdEfE+hRzsfcADs7M69byfS8GrgWOyMwflM13RsSMzLyRYkmpGyjulD8pIiZT3HDZf/mp23H5\nKUl6nlZzsySpfq3cSPn3FNsCA2zZZFI/BpgGHBcRN0bEjRRTTE6IiFuAdSmWn3oM6Ft+6nrK5aeA\ns4HXlMtPHQKc0Gz8kjQatZmbJUk1a2Wk+zrgTxQ3PN4dEX3t44DezNx8dW/MzKOAowZ4yeWnJKk9\nLedmSVL9Wim6X7HmQyRJQ8zcLEkdrJXVS35ZRyCSpNaZmyWpszU9p1uSJElScyy6JUmSpJpZdEuS\nJEk1s+iWJEmSambRLUmSJNXMoluSJEmqmUW3JEmSVDOLbkmSJKlmFt2SJElSzSy6JUmSpJpZdEuS\nJEk1s+iWJEmSambRLUmSJNXMoluSJEmqmUW3JEmSVDOLbkmSJKlmFt2SJElSzSy6JUmSpJpZdEuS\nJEk1mzjcAUiSOltEbAT8GHgjsBw4H+gFFgKHZ+bKiDgYOLR8/cTMvCoi1gMuAjYCFgMHZmbPMJyC\nJA07i26pTftdMuvP2s6cOWcYIpGqFxHrAOcCfyybvgjMzswbI+IcYO+IuAU4Eng9MBm4OSKuA2YB\n92Tm8RHxLmA2cNSQn4QkdQCnl0iSBvMF4Bzgt+XzbYGbysfzgN2A7YAFmbk0M58EHgS2BnYGru53\nrCSNSY50S5IGFBHvA3oy85qI+GTZPC4ze8vHi4ENganAkw1vHai9r22Npk2bwsSJE9qMvrN1d3cN\ndwhDYqycZ1W8Xs0ZadfLoluStDoHAb0RsRuwDXAhxfzsPl3AE8BT5ePB2vva1mjRoiXtRT0C9PQs\nHu4Qatfd3TUmzrMqXq/mdOr1GuwPAaeXSJIGlJm7ZOaumTkDuAt4LzAvImaUh+wJzAduB6ZHxOSI\n2BDYguImywXAXv2OlaQxyaJbktSMo4ETypsn1wUuzczHgDMoiurrgWMz81ngbOA1EXEzcAhwwjDF\nLEnDzuklkqQ1Kke7++w6wOtzgbn92pYA+9YbmSSNDI50S5IkSTWz6JYkSZJqZtEtSZIk1cyiW5Ik\nSaqZRbckSZJUM4tuSZIkqWYW3ZIkSVLNXKd7CO13yawB28+cOWeII5EkSdJQcqRbkiRJqplFtyRJ\nklQzi25JkiSpZhbdkiRJUs0suiVJkqSaWXRLkiRJNRuWJQMjYnvg1MycERGvAs4HeoGFwOGZuTIi\nDgYOBZYDJ2bmVRGxHnARsBGwGDgwM3uG4xwkSZKktTXkI90R8THga8DksumLwOzMnA6MA/aOiI2B\nI4GdgD2AkyNiEjALuKc89kJg9lDHL0mSJDVrOEa6HwL2Ab5ZPt8WuKl8PA/YHVgBLMjMpcDSiHgQ\n2BrYGZjTcOxxa/qwadOmMHHihKYC7O7uaur4dtX9eXX2b+z19z1S4hzq/o1dkjSSDHnRnZmXRcRm\nDU3jMrO3fLwY2BCYCjzZcMxA7X1tg1q0aEnTMfb0LG76Pe2o+/Pq7N/Y6+27u7urtjjr7Lvu/sdS\n7BbokjQ6dMKNlCsbHncBTwBPlY8Ha+9rkyRJkjpaJxTdd0bEjPLxnsB84HZgekRMjogNgS0obrJc\nAOzV71hJkiSpo3VC0X00cEJE3AKsC1yamY8BZ1AU1dcDx2bms8DZwGsi4mbgEOCEYYpZkiRJWmvD\nsmRgZj4C7FA+vh/YdYBj5gJz+7UtAfYdghAlSZKkygxL0a2x66BTrh+wfb3thjgQSZKkIdQJ00sk\nSZKkUc2iW5IkSaqZ00skSVLl9rtkVmV9nTlzzpoPkjqcI92SJElSzSy6JUmSpJo5vUSSNKCIWAc4\nD9gMmAScCNwLnA/0UmxadnhmroyIg4FDgeXAiZl5VUSsB1wEbAQsBg7MzJ6hPg9J6gSOdEuSVucA\n4PHMnA68CfgK8EVgdtk2Dtg7IjYGjgR2AvYATo6IScAs4J7y2AuB2cNwDpLUESy6JUmr85/AceXj\ncRSj2NsCN5Vt84DdgO2ABZm5NDOfBB4EtgZ2Bq7ud6wkjUlOL5EkDSgznwaIiC7gUoqR6i9kZm95\nyGJgQ2Aq8GTDWwdq72tbo2nTpjBx4oS24+9k3d1dwx3CiDJWrtdYOc+qjLTrZdEtSVqtiNgEuAI4\nKzO/FRGNa7d1AU8AT5WPB2vva1ujRYuWtBt2x+vpWTzcIYwoY+F6dXd3jYnzrEqnXq/B/hBweokk\naUAR8WLgWuDjmXle2XxnRMwoH+8JzAduB6ZHxOSI2BDYguImywXAXv2OlaQxyZFuSdLqHANMA46L\niL653UcBZ0TEusB9wKWZuSIizqAoqscDx2bmsxFxNnBBRNwMLAP2H/pTkKTOYNEtdbDV7ejmkP+U\nDAAADpxJREFU7mwaCpl5FEWR3d+uAxw7F5jbr20JsG890UnSyOL0EkmSJKlmFt2SJElSzSy6JUmS\npJpZdEuSJEk1s+iWJEmSambRLUmSJNXMoluSJEmqmUW3JEmSVDOLbkmSJKlmFt2SJElSzSy6JUmS\npJpZdEuSJEk1s+iWJEmSambRLUmSJNXMoluSJEmq2cThDqDT7HfJrAHbz5w5Z4gjUbMOOuX6AdvX\n226IA5EkSerHolsao/wDU5KkoeP0EkmSJKlmFt2SJElSzSy6JUmSpJpZdEuSJEk1s+iWJEmSambR\nLUmSJNXMoluSJEmqmUW3JEmSVDM3x5FUCzffkSRpFYtuaS25zbyk0W51ea4V5kbp+Sy6JUmShtnq\nfh1shb8odqYRV3RHxHjgLOC1wFLgg5n54PBGJUkaiDlbkgojrugG3gpMzsy/i4gdgNOAvYc5Jqkt\nTl1pjvPFRxRztiQxMlcv2Rm4GiAzbwVeP7zhSJIGYc6WJGBcb2/vcMfQlIj4GnBZZs4rn/8K2Dwz\nlw9vZJKk/szZklQYiSPdTwFdDc/Hm7wlqWOZsyWJkVl0LwD2AijnB94zvOFIkgZhzpYkRuaNlFcA\nb4yI/wHGAe8f5ngkSatnzpYkRuCcbkmSJGmkGYnTSyRJkqQRxaJbkiRJqplFtyRJklSzkXgjZS2G\nYqviiNgeODUzZ1TY5zrAecBmwCTgxMz8boX9TwDmAgH0Aodl5sKq+i8/YyPgx8AbM/PnFff9E4ol\nywB+kZmV3cQVEZ8E/hFYFzgrM79eYd/vA95XPp0MbANsnJlPVND3OsAFFP+fWQEcXNV1j4hJwDeA\nzSmu++GZ+UBFfT/3309EvAo4n+L/kwvLz1lZRd8NbV8CMjPPqTDubYB/o7juS4H3Zub/tdO/6uU2\n9q2p4/tuNKr7O3w0Goq6pC6OdK/y3FbFwCcotiquTER8DPgaRQFVpQOAxzNzOvAm4CsV9/8WgMzc\nCZgNnFRl52XCORf4Y5X9ln1PBsZl5ozyf1UW3DOAHYGdgF2BTarqGyAzz++Lm+IPkiOrKLhLewET\nM3NH4DNU++/0YODpzNwB+BAV/f9xgP9+vgjMLv9/P442thXv33dEdEfEPIo/qNoyQNynAx8q/71e\nDny83c9Q7Wr9bhiNavy+G43q/g4fjWqtS+pk0b1K3VsVPwTsU3GfAP8JHFc+HgdUuulEZn4HOKR8\nuilQVeHX5wvAOcBvK+4XipGpKRFxbURcX64RXJU9KNYbvgL4HnBVhX0/JyJeD7wmM79aYbf3AxPL\nEbypwJ8q7PuvgXlQDBEDW1TUb///frYFbiofzwN2q7DvDYDjgW+20efq+n5XZt5VPp4IPFvBZ6he\nbmPfvLq+70ajWr/DR6MhqEtqY9G9ylTgyYbnKyKisuk3mXkZ1RY3ff0+nZmLI6ILuJTir76qP2N5\nRFxA8bP4xVX1W06h6MnMa6rqs58lFEX9HsBhwMUV/jt9EcWX774NfY+rqO9GxwAnVNzn0xQ/Zf6c\n4ie6Myrs+y7gzRExrvwj56XlT4FtGeC/n3GZ2bfe6WJgw6r6zsxfZOZtrfa3hr4fBYiIHYEjgC9V\n8TmqVa3fDaNRXd93o9FQfIePRnXVJXWz6F5lxG5VHBGbADcA38zMb9XxGZl5IPBqYG5ErF9RtwdR\nbJpxI8Wc5QsjYuOK+oZiRPeizOzNzPuBx4G/rKjvx4FrMnNZOaL7LNBdUd8ARMRfAJGZN1TZL/Av\nFLG/muLXgAvKqThVOI/iv6X5wNuAH2fmior6btQ4f7uLETTSERHvpPh15x8ys2e449EajdjvBo0M\nQ/EdPhrVVJfUyqJ7lRG5VXFEvBi4Fvh4Zp5XQ//vKW8YhGLkeCXPL3halpm7ZOau5fzWuyhuKnus\nir5LB1HOv4yIl1CMWD1aUd83A28qR3RfAqxPUYhXaRfgBxX3CbCIVSN3fwDWAdoejS79LfCDzNyZ\n4mfThyvqt787y3n1AHtSFPkdLyIOoBjhnpGZdV0bVWtEfjdoZKj7O3w0qrMuqZs/ka0yUrcqPgaY\nBhwXEX3zwvbMzKpuTLwc+EZE/JCiOPtwhX3X7evA+RFxM8UdzgdVNUKVmVdFxC7A7RR/vB5ew4hu\nUE/R+iXgvIiYT7HyyjGZ+UxFfT8AfDYijqUYff5ARf32dzTF6Ma6wH0UP8t2tHKazRnAr4DLIwLg\npsz89LAGpjUZqd8NGhnq/g4fjUZsXeI28JIkSVLNnF4iSZIk1cyiW5IkSaqZRbckSZJUM4tuSZIk\nqWYW3ZIkSVLNXDJQtYqIzYBfALtn5nUN7Y9QrFX8SJv9V9LPGj7j5RTrqD5Tftbisn0cxXbhb6NY\nknAp8KnMvLp8/YbMfEObn70TcFZmvrZ8viHwe+D4zDypbDsU2LHcKKCVz3iEmq+hpM42mnN1+VoA\nnwdeUTbdAxyZmb9v4XM2BC7IzLdWEPMhwOLM/PeI+AxwR2Z+t91+1Zkc6dZQ+BPFmspdazyyM80A\nfpKZ2zYmcWA/YFvgb8qi+ADgmxGxUcP72nU7sGlETC2f7wZcT7G1fZ/pFF80ktSOUZmryw3MbgDm\nZuZWwNbAQoo12FsxjWIX5SrsCEwCyMxPWXCPbo50ayj8FriOYnfIQxpfKHcVPL7clZKIOB+4sfzf\ndyg2h9kKuKNsex9FwntbZt5XdnN8RLyWYiv2QzPz7nKXr3OBTSh2qvpkZn4/Io4HdgBeDnwlM89q\niOXVwFeBF1CMlBxJ8SV0IrBBRJyTmYc1hL8xxU6Ok4DlmXl/RLwD+FNEnFH2eVtmbh8Rby77GV+e\n06GZ+X/l6M+VFLtPQrGBz519H5CZfyo35diBorDeAzgdODsipmbmU8DOwNERMR74MvD3FCPv38zM\nU8trPKeMdSHFNvAXldfmXmByGevW5flPLK/l+zPzASSNFaM1V88Crs3M7wFkZm9EnAr8IiImUmwS\nNhd4bRnDFzLzwoh4H/Cm8nM2L/v4Z4pNrl4SEVdQ5NOrKX6BfBbYh2JjtpcBLwF+CLy3jOMUil9G\nl5fn/DPgH4GZEfEo8E/AjZl5fkS8n2ITsF7gx8ARmfl0edylFHl/ObBfZv4iIr4AvBFYAVyZmSeg\njuNIt4bK0cAeEfHGJt6zNfBZip0Z/xbYLDP/Dvh3nv+F8EBmvq489oKy7XTgvMzcliKpndswejM5\nM/+6MYmXLgLOyMytKRLppRS7HX4K+G6/JA5wIcXW8j0RcU1EfBzIzFyUmUdSPNm+HPk+F3hr2fcC\n4CsN/fyhjP9TDfE3+gGwU/l4Bqu+6GZGxKbAE5n5f8BhFF9cWwPbAW+PiH8o3/dqYGY5BeUzFKNB\nWwFnAi8uj/kX4LTMfD3wbxRfeJLGltGYq18H3NbYkJkrMvPfy12Kjwcez8wtgZkUfxxsXR66I/D2\n8hzfEhFbURT5v83Mt5XHBHBAZu4G/ANwV3n+fwX8HfA3wDso8vhWFPn5/RSDIN+lmJZ4TV9s5Wcc\nC+xa5ulngL6dazcGflBexx8CR5TfA3uWv7juCPxVRExGHceiW0OiHJE9mOZ+unwsM+/MzJXAbyiK\nT4BfUoyg9Pla+Rn/TTEV4y8opmF8JiLuAuZRbBX7yvL45yVfgIjYAHhVZl5e9nUr8AeKZLq6c1qU\nmTsB2wPXUIyI/CwiNu936HbA7Q1zGb9KMRpNw3PKUZiXRcSL+r3/emCniPh/wK8zcwnFaNQMiqkl\nffMvZwLnl18mS4CLGz4nM/PJ8vEM4JKy8Yes2mr+v4CvRMTXgWXAt1Z37pJGp9GYqylGr8cN8vpM\nitFpyjneV7JqeuD/ZObiMqc+TDHq3d/v+vJ7Zv47cF1EfJhi8OKFwAbArsC3M3NpZj6dmdtk5mOr\niWdX4HuZ+Xj5vP93xtXlPxeW8fwv8MeIWEDxR8jszHx2kPPVMLHo1pDJzGtZ9dNln16enwzXaXi8\nrF8Xy1fTdf/2ZRRTKWaWiW0bilHbe8rX/zhAH+P586Q8jkGmYEXEv0bEazPznsz8YnnT5NUUoyL9\n+x6s3+X9jl3R7/i7KL6E3sSqudvXURTzjfO5B/ucxnPu7XfscoDMvJRiROZ24MPAOUgac0ZbrqaY\n8vL6xoaIGB8Rl5fTWwbLnY3Fa/9r0Oe5OCPiQxQ3bPZQFN33lu/5U7/P3ywi1l9NvIN+ZzQU1L3A\nuHK0fnvgOIoi/5ZyCo46jEW3htrRFPOSX1I+/z2weURMjogXUBSRzXo3QES8Dfh5OSJxPfDPZftf\nA3cDU1bXQTm681BE7FO+ZweKn/EWDvK5GwKfLUdeiIgpFHfG31W+vqKcL3gbsEO5OgAUP7fe0NDP\nuxrivy8zF/WLrW9O38GUBXY5nWQCxU+X88tDrwcOjIgJZSzv7vc5fb5PcdMnEfG3wKvKx5cA22Xm\nuRTJ+28GOXdJo9toytVfBf4hIvYq3zOOIsdtVObS64EPlK+9CHgrxRS+1VnO6ov8NwLnZubFFEXx\nNhS5+ofAPhGxTpmfrwZeupq+bgT+sbzOUOT+gXI5ZcyvA24CfpiZH6Eo9Acb+dcwsejWkGr46XKd\n8vnPKKY1/Az4T1YVkM14dfnT5L8CfcvmfYii0L2bYirFe/L5K48M5ADgyIi4h2LO9T6Z2X8Ep9Fn\nKeYR3h0R91KMEF+Yq5bbuhL4KfAkRaF9RUT8jOJny8Y5hzuV8X+kIf7+fgC8iFUFPRRJ/LGGUY9z\nKX7a/SlwJ8XcxoHuzv808Moylk+wanrJ54BjIuInwBcorqekMWg05epyGseeFDec31Oew19RFNdQ\n3OfygvK1HwInZeZPBvn8/wN+FREDFcJfBj5d5tGzgP8BXlHm4gXAT4AfAadn5v0UgyDHlDfh98V7\nN3AycFNE/Bz4C2D2IOd3J3ALsLD83Ecopuqow4zr7e0d7hikMStcI1uSpDHBkW5JkiSpZo50S5Ik\nSTVzpFuSJEmqmUW3JEmSVDOLbkmSJKlmFt2SJElSzSy6JUmSpJr9f946WvxpdueSAAAAAElFTkSu\nQmCC\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x220b3a3c8>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "figure, axes = mp.subplots(nrows=2, ncols=2, figsize=(12,12))\n",
    "\n",
    "plot = df.groupby('question')['clickbait'].value_counts().unstack().plot.bar(ax=axes[0,0], rot=0)\n",
    "plot.set_xlabel('Headline Question')\n",
    "plot.set_ylabel('Number of Headlines')\n",
    "\n",
    "plot = df.groupby('num_words')['clickbait'].value_counts().unstack().plot.bar(ax=axes[0,1], rot=0)\n",
    "plot.set_xlabel('Number of Words')\n",
    "plot.set_ylabel('Number of Headlines')\n",
    "\n",
    "plot = df.groupby('num_stop_words')['clickbait'].value_counts().unstack().plot.bar(ax=axes[1,0], rot=0)\n",
    "plot.set_xlabel('Number of Stop Words')\n",
    "plot.set_ylabel('Number of Headlines')\n",
    "\n",
    "plot = df.groupby('num_contract')['clickbait'].value_counts().unstack().plot.bar(ax=axes[1,1], rot=0)\n",
    "plot.set_xlabel('Number of Contractions')\n",
    "plot.set_ylabel('Number of Headlines')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Well, there definitely do appear to be differences between the clickbait and non-clickbait headlines in terms of number of words, stop words, and contractions. As I suspected, clickbait headlines are also much more likely to be phrased as a question.\n",
    "\n",
    "Let's check for collinearity in the numerical data."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(array([ 0.5,  1.5,  2.5,  3.5,  4.5,  5.5]),\n",
       " <a list of 6 Text xticklabel objects>)"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\nwOl7yQAAAABJRU5ErkJggg==\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x111b21dd8>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "figure, axes = mp.subplots(figsize=(10,8))\n",
    "sns.heatmap(df.drop(['text','clickbait'], axis=1).corr(), annot=True, vmax=1, linewidths=.5, cmap='Reds')\n",
    "mp.xticks(rotation=45)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "There does appear to be some collinearity present, especially between num_words vs. num_stop_words, between num_stop_words vs. stop_word_ratio, and between num_contract vs. contract_ratio. This makes sense. This collinearity could potentially jeopardize the accuracy of our classifier, though, and to this end, we can go ahead and drop num_stop_words and num_contract from our dataset."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 59,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "df.drop(['num_stop_words','num_contract'], axis=1, inplace=True)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Now we can split our data into training and test sets and get to classifying! We'll put 80% of the data into the training set, and 20% into the test set."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 60,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "df_train, df_test = train_test_split(df, test_size=0.2, random_state=0)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "To convert the headline text into the numerical data necessary for classification, we can use Scikit-Learn's TfidfVectorizer. The tf-idf is short for term frequency-inverse document frequency. In essence, tf-idf counts the number of occurrences of the words in each headline and weights these frequencies by their total number of occurrences across all headlines. The idea is that commonly occurring words like \"the\" and \"can\" appear so frequently that they are very likely to be unimportant in distinguishing between the two classes."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 61,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "tfidf = TfidfVectorizer(min_df=3, max_features=None, strip_accents='unicode',\n",
    "                           analyzer='word', token_pattern=r'\\w{1,}', ngram_range=(1,5),\n",
    "                           use_idf=1, smooth_idf=1, sublinear_tf=1)\n",
    "\n",
    "X_train_text = tfidf.fit_transform(df_train['text'])\n",
    "X_test_text  = tfidf.transform(df_test['text'])"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Next, we can use CountVectorizer to count the number of part-of-speech occurrences in each headline. These counts are then scaled using StandardScaler."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 62,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/Users/degravek/anaconda/lib/python3.5/site-packages/sklearn/utils/validation.py:429: DataConversionWarning: Data with input dtype int64 was converted to float64 by StandardScaler.\n",
      "  warnings.warn(msg, _DataConversionWarning)\n"
     ]
    }
   ],
   "source": [
    "cvec = CountVectorizer()\n",
    "\n",
    "X_train_pos = cvec.fit_transform(df_train['part_speech'])\n",
    "X_test_pos  = cvec.transform(df_test['part_speech'])\n",
    "\n",
    "sc = StandardScaler(with_mean=False)\n",
    "X_train_pos_sc = sc.fit_transform(X_train_pos)\n",
    "X_test_pos_sc  = sc.transform(X_test_pos)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "We can then isolate the engineered features and scale their values so that they heave a mean of zero and unit standard deviation. This is necessary for many classifiers in order to obtain good results."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 63,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "X_train_val = df_train.drop(['clickbait','text','part_speech'], axis=1).values\n",
    "X_test_val  = df_test.drop(['clickbait','text','part_speech'], axis=1).values\n",
    "\n",
    "sc = StandardScaler()\n",
    "X_train_val_sc = sc.fit(X_train_val).transform(X_train_val)\n",
    "X_test_val_sc  = sc.transform(X_test_val)\n",
    "\n",
    "y_train = df_train['clickbait'].values\n",
    "y_test  = df_test['clickbait'].values"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Lastly, we can combine the new tf-idf vectors with the scaled engineered features and store them as sparse arrays. This helps to save memory as the tf-idf vectors are extremely large, but are composed mostly of zeros."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 64,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "from scipy import sparse\n",
    "\n",
    "X_train = sparse.hstack([X_train_val_sc, X_train_text, X_train_pos_sc]).tocsr()\n",
    "X_test  = sparse.hstack([X_test_val_sc, X_test_text, X_test_pos_sc]).tocsr()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "It turns out that logistic regression tends to give the best results for this classification problem, so we'll use it here. Below, we can use GridSearchCV to find the best regularization parameter for the job."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "param_grid = [{'C': np.linspace(90,100,20)}]\n",
    "\n",
    "grid_cv = GridSearchCV(LogisticRegression(), param_grid, scoring='accuracy', cv=5, verbose=1)\n",
    "grid_cv.fit(X_train, y_train)\n",
    "\n",
    "print(grid_cv.best_params_)\n",
    "print(grid_cv.best_score_)\n",
    "\n",
    "Best parameter: 'C': 93.684210526315795\n",
    "Best accuracry:  0.9755859375"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "collapsed": true
   },
   "source": [
    "Five-fold cross-validation suggests that we obtain a classification accuracy of 97.6%. Not bad at all! We can now apply the classifier to our test data to make some final predictions."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 70,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "model = LogisticRegression(penalty='l2', C=93.684210526315795)\n",
    "model = model.fit(X_train, y_train)\n",
    "predict = model.predict(X_test)\n",
    "\n",
    "print(classification_report(y_test, predict))\n",
    "\n",
    "             precision    recall  f1-score   support\n",
    "\n",
    "          0       0.97      0.98      0.98      3204\n",
    "          1       0.98      0.97      0.98      3196\n",
    "\n",
    "avg / total       0.98      0.98      0.98      6400"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The classification report gives\n",
    "\n",
    "* A precision value of 0.98\n",
    "* A recall value of 0.98\n",
    "* An F1-score of 0.98\n",
    "\n",
    "Let's plot the confusion matrix."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 72,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.text.Text at 0x25f507400>"
      ]
     },
     "execution_count": 72,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\n9ZZlDBnU1HlcLpVoa2sHYMHrSzn7yju49bKTmL+whTnP/pn5Cyr/ng9rbmLnbTfngdnzcqlbfVdd\nOs2U0r0ppYdWe81KKT1Uj/cTjBq1F7954AEA5j41h5133qXz3PY77MhLL77IwgULWLliBbNnP84e\ne45a87X22ptfP3A/AE88/hg77rRTfYuX1mDWUy9w2IHvBGDfd23LM/P+t/NcQ0OZPXd9B4eccg0T\nz7mZtN3mzJrzAgBj99qR+x57LpeatXaKNjxbr07zHOB7wFFAa53eQzUOPnQ8s2Y9yMc/9lE6Ojq4\n8OJv8PO77mTJkiV8+JhjOevsczjtUyfT3tHBhKOOZvjw4Wu81llnf4lJX/sq/3nbf9Dc3Myll03u\nxU8i/dMd9z7Nwfsl7p3+OUqlEp+adCvHHrYXgwe9rXOuctYPzmL58lam/OA+5i+sdJq7bLs5L/xl\nfp6lK6uCLQQqdXR01OXCKaUvAvMiYsba/u6yVupTlNSL3j7mzLxLkNaLpY9fVbdoe+SPC3v09/1+\nOw7r1dit25xmRFxer2tLkpQHFwJJknJTtPs0DU1JUm4KlpmGpiQpRwVLTUNTkpSbou09645AkiRl\nZKcpScqNC4EkScqoYJlpaEqSclSw1DQ0JUm5cSGQJEl9lJ2mJCk3LgSSJCmjgmWmoSlJylEdUzOl\nVAauA0YCy4FTImJezfnjgM9TeYTl08DpEdHe1TWd05Qk9VUTgKaI2J/Kc547Hw6cUhoIXAwcFBEH\nAsOAI7q7oKEpScpNqYf/dGMscDdARDwMjK45txw4ICKWVI8bgWXdXdDhWUlSbuq8EGgosLDmuC2l\n1BgRrdVh2FcAUkpnAM3AL7u7oKEpScpNnRcCLQKG1ByXI6J11UF1zvMyYBfg6Ijo6O6CDs9KkvJT\n6uGraw8ChwOklMZQWexTayrQBEyoGabtkp2mJKmvmgGMTyk9RCViT0opHU9lKPZx4GTg18DMlBLA\nlIiY0dUFDU1JUm7quY1edd7y1NW+/WzN12s92mpoSpJy445AkiRlVLDMdCGQJElZ2WlKkvJTsFbT\n0JQk5aZoz9M0NCVJuXEhkCRJGRUsM10IJElSVnaakqT8FKzVNDQlSblxIZAkSRm5EEiSpIwKlpku\nBJIkKSs7TUlSfgrWahqakqTcuBBIkqSMirYQyDlNSZIystOUJOWmYI2moSlJylHBUtPQlCTlxoVA\nkiRl5EIgSZL6KDtNSVJuCtZoGpqSpPwUbXjW0JQk5ahYqWloSpJyU7RO04VAkiRlZKcpScpNwRpN\nQ1OSlJ+iDc8ampKk3BRtRyDnNCVJyshOU5KUn2I1moamJCk/BctMQ1OSlB8XAkmSlJELgSRJ6qPs\nNCVJ+SlWo2loSpLyU7DMNDQlSflxIZAkSRm5EEiSpD7KTlOSlJuiDc/aaUqSlJGdpiQpN3aakiT1\nUXaakqTcFG31rKEpScpN0YZnDU1JUm4KlpmGpiQpRwVLTRcCSZKUkZ2mJCk3LgSSJCkjFwJJkpRR\nwTLT0JQk5ahgqelCIEmSMrLTlCTlxoVAkiRlVLSFQKWOjo68a5AkqRCc05QkKSNDU5KkjAxNSZIy\nMjQlScrI0JQkKSNDU5KkjLxPs59JKZWB64CRwHLglIiYl29V0rpJKe0HfDMixuVdi/oHO83+ZwLQ\nFBH7A+cAk3OuR1onKaWzgeuBprxrUf9haPY/Y4G7ASLiYWB0vuVI6+yPwIfyLkL9i6HZ/wwFFtYc\nt6WUHKZX4UTEj4GVedeh/sXQ7H8WAUNqjssR0ZpXMZJUJIZm//MgcDhASmkM8HS+5UhScTgs1//M\nAManlB6i8vjXk3KuR5IKw6ecSJKUkcOzkiRlZGhKkpSRoSlJUkaGpiRJGRmakiRl5C0n6ndSSt8G\nDgQGADsBv6uemhIRN67H97kAICIuyPjznwDGRcQn1uI9OiKitA7lSVoHhqb6nYj4DEBKaTvgvojY\nM9+KJBWFoSnVqHaHY4ARwLXAMcAFEXFfTchul1IaDkwFtgHagS9HxD0Z32NrYDqwMbAlcGtEnFM9\nvVNK6QFgU+DO6nU7UkofBz5PZUplNvCZiFi2Pj6zpOyc05TerCkidouI67r4mSnADRGxN/ABYGpK\naUgXP1/rOCpBOQbYAzg9pbRZ9dz2wNHAKCpPpPlASml34F+BA6pd8d+AL6z1p5LUY3aa0ps9kuFn\nDgV2TSldWD3eCNgRmNPdL0bEFSmlg1JKXwDeRWVudXD19E8j4u8AKaXbgXFUutmdgYdTSlR//onM\nn0bSemNoSm+2tObrDip79EIlGFdpAA6OiNcAUkpbAa9kuXhKaTKwA/BD4CdUAnjVe9Q+caZE5dFX\nDcDtEfG56u8343+7Ui4cnpW69iqwe/XrCTXfnwmcDpBS2g2YCwzKeM3xwOUR8Z9UusitqQQjwOEp\npY1TSk1UhnHvAe4DjkopbZ5SKgHfoTK/KamX+X+rUtcuA25OKX2SSle4yhnAtJTSXCod4QkR8fpb\n/P651WHYVT4NXALcklJaQKU7fZzKXCbAs8DPqSwS+mFE/DdASmkSlaAuA08Cl66nzydpLfiUE0mS\nMnJ4VpKkjAxNSZIyMjQlScrI0JQkKSNDU5KkjAxNSZIyMjQlScrI0JQkKaP/DxrXOuZzIwPuAAAA\nAElFTkSuQmCC\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x116b07828>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "figure, axes = mp.subplots(figsize=(8,6))\n",
    "cm = confusion_matrix(y_test, predict).T\n",
    "cm = cm.astype('float')/cm.sum(axis=0)\n",
    "\n",
    "sns.heatmap(cm, annot=True, cmap='Blues');\n",
    "mp.xlabel('True Label')\n",
    "mp.ylabel('Predicted Label')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The confusion matrix suggests that we misclassify clickbait headlines about twice as often as real news headlines. However, these error rates are extremely small. Now let's plot the corresponding ROC curve."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 73,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x116b079b0>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "figure, axes = mp.subplots(figsize=(8,8))\n",
    "fpr, tpr, thresholds = roc_curve(y_test, model.predict_proba(X_test)[:,1])\n",
    "roc_auc = roc_auc_score(y_test, predict)\n",
    "\n",
    "mp.plot(fpr, tpr, lw=1, label='AUC = %0.2f'%(roc_auc))\n",
    "mp.plot([0, 1], [0, 1], '--k', lw=1)\n",
    "mp.xlabel('False Positive Rate')\n",
    "mp.ylabel('True Positive Rate')\n",
    "mp.title('ROC')\n",
    "mp.legend(loc=\"lower right\", frameon = True).get_frame().set_edgecolor('black')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "collapsed": true
   },
   "source": [
    "As expected, the ROC curve is very good and hugs the upper left-hand corner of the figure. The area under the curve (AUC) is 0.98, suggesting near-perfect classification.\n",
    "\n",
    "If we split the headlines into separate clickbait and non-clickbait groups, we can use tf-idf to compare which kinds of words occur more frequently among them."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 74,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "tfidf_cb = TfidfVectorizer(min_df=3, max_features=None, strip_accents='unicode',\n",
    "                           analyzer='word', token_pattern=r'\\w{1,}', ngram_range=(1,3),\n",
    "                           use_idf=1, smooth_idf=1, sublinear_tf=1, stop_words='english')\n",
    "cb = tfidf_cb.fit_transform(df_train.loc[df['clickbait']==1, 'text'])\n",
    "\n",
    "tfidf_ncb = TfidfVectorizer(min_df=3, max_features=None, strip_accents='unicode',\n",
    "                           analyzer='word', token_pattern=r'\\w{1,}', ngram_range=(1,3),\n",
    "                           use_idf=1, smooth_idf=1, sublinear_tf=1, stop_words='english')\n",
    "ncb = tfidf_ncb.fit_transform(df_train.loc[df['clickbait']==0, 'text'])\n",
    "\n",
    "cb_values = cb.mean(axis=0).tolist()\n",
    "cb_names = tfidf_cb.get_feature_names()\n",
    "ncb_values = ncb.mean(axis=0).tolist()\n",
    "ncb_names = tfidf_ncb.get_feature_names()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "We can place the results in two dataframes to handle them a little more easily."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 75,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "import itertools\n",
    "\n",
    "q_cb = pd.DataFrame()\n",
    "q_cb['names'] = cb_names\n",
    "q_cb['values'] = list(itertools.chain.from_iterable(cb_values))\n",
    "q_cb = q_cb.sort_values('values', ascending=True)\n",
    "\n",
    "q_ncb = pd.DataFrame()\n",
    "q_ncb['names'] = ncb_names\n",
    "q_ncb['values'] = list(itertools.chain.from_iterable(ncb_values))\n",
    "q_ncb = q_ncb.sort_values('values', ascending=True)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "And plot the results."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 76,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.text.Text at 0x261aee2b0>"
      ]
     },
     "execution_count": 76,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\n/wdUQaHJNXNGmwAAAABJRU5ErkJggg==\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x220dd80b8>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "figure, axes = mp.subplots(nrows=1, ncols=2, figsize=(12,7))\n",
    "mp.tight_layout(8,1)\n",
    "\n",
    "plot = q_cb[-20:].plot.barh(x='names', y='values', ax=axes[0], rot=0)\n",
    "plot.set_xlabel('Mean tf-idf')\n",
    "plot.set_ylabel('Words')\n",
    "plot.set_title('Clickbait')\n",
    "\n",
    "plot = q_ncb[-20:].plot.barh(x='names', y='values', ax=axes[1], rot=0)\n",
    "plot.set_xlabel('Mean tf-idf')\n",
    "plot.set_ylabel('Words')\n",
    "plot.set_title('Non-Clickbait')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "As we might expect, the words are quite different between the two sets. Clickbait headlines tend to contain words like \"best\", \"character\", \"love\", etc., while the non-clickbait headlines contain more serious subject matter like \"president\", \"iraq\", and \"government\". Also, note that one of the top clickbait features is \"number things\", representing headlines like \"10 things you'll never believe!\".\n",
    "\n",
    "Let's take a look at some of the headlines we misclassified."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "df_test['predict'] = predict\n",
    "df_test.loc[df_test['clickbait'] != df_test['predict'], ['text','clickbait','predict']]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "                                                    text  clickbait  predict\n",
    "12060               bruno mars might headline super bowl          1        0\n",
    "13695  priest reportedly suspended for riding a hover...          1        0\n",
    "15652                     night owls become early risers          1        0\n",
    "759    number differences between snow days in canada...          1        0\n",
    "4046        hear a clip of good charlottes comeback song          1        0"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "There actually appear to be a few cases where a headline was deemed to be clickbait, though I personally might not have classified it as such. For example, the headlines \"bruno mars might headline superbowl\", and \"night owls become early risers\" were labeled as clickbait by the collectors of this dataset, though these could possibly constitute legitimate news headlines (albeit maybe poor ones).\n",
    "\n",
    "# Concluding Remarks\n",
    "In this notebook we used logistic regression and natural language processing to accurately classify clickbait headlines. The results were surprisingly good, as we obtained an accuracy score of 97.6%, an F1-score of 0.98, and an ROC AUC of 0.98. This classifier actually performs better than that of Chakraborty et al., in which an accuracy score of 93% was achieved. An interesting next step would be to use this classifier to deploy a real clickbait detection extension for a web browser like Firefox or Safari. This was actually done in the Chakraborty et al. paper, where an accuracy of 83% in blocking clickbaits was attained.\n",
    "\n",
    "Well, that’s all I have for now. Thanks for following along!"
   ]
  }
 ],
 "metadata": {
  "anaconda-cloud": {},
  "kernelspec": {
   "display_name": "Python [conda root]",
   "language": "python",
   "name": "conda-root-py"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.5.2"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
