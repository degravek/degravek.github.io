{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Introduction\n",
    "The Federal National Mortgage Association (FNMA), also known as Fannie Mae, is a government sponsored corporation founded in 1938 whose primary purpose, according to [this source](https://en.wikipedia.org/wiki/Fannie_Mae), is \"to expand the secondary mortgage market by securitizing mortgages in the form of mortgage-backed securities, allowing lenders to reinvest their assets into more lending and in effect increasing the number of lenders in the mortgage market by reducing the reliance on locally based savings and loan associations.\" In short, Fannie Mae purchases mortgage loans from primary lenders like Bank of America and Wells Fargo, among several others. After these mortgages are acquired, Fannie Mae sells them as securities in the bond market. According to [this source](http://home.howstuffworks.com/real-estate/buying-home/mortgage16.htm), these sales \"provide lenders with the liquidity to fund more mortgages, and until 2006, the mortgage-backed securities (MBS) sold by [Fannie Mae] were considered solid investments.\" Unfortunately, however, not all borrowers whose loans have been purchased by Fannie Mae are able to repay their mortgages in a timely manner, and many end up defaulting at some point. In fact, between 2006 and 2008, many hundreds of thousands of people had defaulted, causing these securities to decreases significantly in value, thereby strongly impacting the global economy.\n",
    "\n",
    "On its website, Fannie Mae has made a subset of its single family loan performance (SFLP) data available to anyone interested in looking at it. The SFLP data cover the years 2000-2015, and can be downloaded [here](http://www.fanniemae.com/portal/funding-the-market/data/loan-performance-data.html). The goal of this project it so see if we can predict from this data, with some accuracy, those borrowers who are most at risk of defaulting on their mortgage loans. Let's get started!"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Cleaning the Data\n",
    "Once downloaded, one will find that the SFLP data is divided into two files called Acquisition^.txt and Performance^.txt, where the \"^\" is a placeholder for the particular year and quarter of interest. For the purposes of this project, we're using the quarter 4 data of 2007 which contains a reasonable number of defaults to analyze. The aquisition data contains personal information for each of the borrowers, including an individual's debt-to-income ratio, credit score, and loan amount, among several other things. The perfomance data contains information regarding loan payment history, and whether or not a borrower ended up defaulting on their loan. Additional information regarding the contents of these two files can be found in the [Layout](https://loanperformancedata.fanniemae.com/lppub-docs/lppub_file_layout.pdf) and [Glossary of Terms](https://loanperformancedata.fanniemae.com/lppub-docs/lppub_glossary.pdf) files.\n",
    "\n",
    "Letâ€™s begin by importing the appropriate Python libraries and reading in the data."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 57,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "from sklearn.ensemble import RandomForestClassifier\n",
    "from sklearn.naive_bayes import GaussianNB\n",
    "from sklearn.cross_validation import train_test_split\n",
    "from sklearn.preprocessing import StandardScaler\n",
    "from sklearn.metrics import confusion_matrix\n",
    "from sklearn.metrics import roc_curve\n",
    "from collections import Counter\n",
    "import seaborn as sns\n",
    "import pandas as pd\n",
    "import numpy as np\n",
    "\n",
    "import matplotlib.pyplot as mp\n",
    "%matplotlib inline\n",
    "\n",
    "columns = ['LoanID','Channel','SellerName','OrInterestRate','OrUnpaidPrinc','OrLoanTerm',\n",
    "        'OrDate','FirstPayment','OrLTV','OrCLTV','NumBorrow','DTIRat','CreditScore',\n",
    "        'FTHomeBuyer','LoanPurpose','PropertyType','NumUnits','OccStatus','PropertyState',\n",
    "        'Zip','MortInsPerc','ProductType','CoCreditScore','MortInsType'];\n",
    "\n",
    "df_acq = pd.read_csv('/Users/degravek/Downloads/Acquisition_2007Q4.txt', sep='|', names=columns)\n",
    "df_per = pd.read_csv('/Users/degravek/Downloads/Performance_2007Q4.txt', sep='|')\n",
    "\n",
    "df_def = df_per[df_per.iloc[:,15].notnull()]"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "After reading in the data, a new column called \"Default\" is added to the acquisition dataframe (df_acq). In this column, a 1 is placed next to any borrower that was found to have defaulted in the performance dataframe (df_per), and a 0 is placed next to any borrower that has not defaulted."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 58,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "df_acq['Default'] = np.nan\n",
    "df_acq.loc[df_acq.LoanID.isin(df_def.iloc[:,0]),'Default'] = 1\n",
    "df_acq.loc[df_acq.Default.isnull(), 'Default'] = 0"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The two classes (default and non-default) are extremely imbalanced here; defaulters make up only about 10% of all borrowers in this particular case. For very imbalanced data sets, it is often the case that machine learning algorithms will have a tendency to always predict the more dominant class when presented with new, unseen test data. To avoid this overabundance of false negatives, we can balance the classes so that the dataframe contains equal numbers of defaulters and non-defaulters. We do this by randomly sampling the non-defaulters $n$ times, where $n$ is the number of defaulters."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 59,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "df_ydef = df_acq[df_acq.Default==1]\n",
    "df_ndef = df_acq[df_acq.Default==0].sample(n=len(df_ydef), random_state=0)\n",
    "\n",
    "df = df_ydef.append(df_ndef, ignore_index=True).reset_index(drop=True)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Let's take a look at the dataframe header."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 53,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "ename": "IndentationError",
     "evalue": "unexpected indent (<ipython-input-53-1d043bb2e299>, line 3)",
     "output_type": "error",
     "traceback": [
      "\u001b[0;36m  File \u001b[0;32m\"<ipython-input-53-1d043bb2e299>\"\u001b[0;36m, line \u001b[0;32m3\u001b[0m\n\u001b[0;31m    LoanID Channel                                 SellerName  0  100026162343       B                      BANK OF AMERICA, N.A.\u001b[0m\n\u001b[0m    ^\u001b[0m\n\u001b[0;31mIndentationError\u001b[0m\u001b[0;31m:\u001b[0m unexpected indent\n"
     ]
    }
   ],
   "source": [
    "df.head()\n",
    "\n",
    "         LoanID Channel                                 SellerName  \\\n",
    "0  100026162343       B                      BANK OF AMERICA, N.A.   \n",
    "1  100043973870       B                      BANK OF AMERICA, N.A.   \n",
    "2  100051174956       B  FIRST TENNESSEE BANK NATIONAL ASSOCIATION   \n",
    "3  100053457392       C       FLAGSTAR CAPITAL MARKETS CORPORATION   \n",
    "4  100059647383       C                      BANK OF AMERICA, N.A.   \n",
    "\n",
    "   OrInterestRate  OrUnpaidPrinc  OrLoanTerm   OrDate FirstPayment  OrLTV  \\\n",
    "0           6.875         108000         360  11/2007      01/2008     90   \n",
    "1           7.250         147000         360  08/2007      10/2007     90   \n",
    "2           5.625         204000         360  10/2007      12/2007     75   \n",
    "3           7.375         111000         360  08/2007      10/2007     75   \n",
    "4           6.625         159000         360  11/2007      12/2007     89   \n",
    "\n",
    "   OrCLTV   ...     PropertyType  NumUnits  OccStatus PropertyState  Zip  \\\n",
    "0    90.0   ...               SF         2          I            MO  631   \n",
    "1    90.0   ...               CO         1          I            IL  601   \n",
    "2    75.0   ...               CO         1          I            MA   21   \n",
    "3    93.0   ...               SF         1          S            TX  775   \n",
    "4    89.0   ...               SF         1          P            VA  244   \n",
    "\n",
    "  MortInsPerc  ProductType CoCreditScore MortInsType  Default  \n",
    "0        25.0          FRM         668.0         1.0      1.0  \n",
    "1        25.0          FRM           NaN         1.0      1.0  \n",
    "2         NaN          FRM           NaN         NaN      1.0  \n",
    "3         NaN          FRM         713.0         NaN      1.0  \n",
    "4        25.0          FRM         785.0         1.0      1.0 "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The data contains additional information regarding loan interest rate, payment dates, property state, and the last few digits of each property ZIP code. Several of the columns contain missing values, and these will have to be filled in before we start making our predictions. Let's summarize the data in another way."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 54,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "ename": "SyntaxError",
     "evalue": "invalid syntax (<ipython-input-54-ad836442f105>, line 3)",
     "output_type": "error",
     "traceback": [
      "\u001b[0;36m  File \u001b[0;32m\"<ipython-input-54-ad836442f105>\"\u001b[0;36m, line \u001b[0;32m3\u001b[0m\n\u001b[0;31m    RangeIndex: 63752 entries, 0 to 63751\u001b[0m\n\u001b[0m              ^\u001b[0m\n\u001b[0;31mSyntaxError\u001b[0m\u001b[0;31m:\u001b[0m invalid syntax\n"
     ]
    }
   ],
   "source": [
    "df.info()\n",
    "\n",
    "RangeIndex: 63752 entries, 0 to 63751\n",
    "Data columns (total 25 columns):\n",
    "LoanID            63752 non-null int64\n",
    "Channel           63752 non-null object\n",
    "SellerName        63752 non-null object\n",
    "OrInterestRate    63752 non-null float64\n",
    "OrUnpaidPrinc     63752 non-null int64\n",
    "OrLoanTerm        63752 non-null int64\n",
    "OrDate            63752 non-null object\n",
    "FirstPayment      63752 non-null object\n",
    "OrLTV             63752 non-null int64\n",
    "OrCLTV            63746 non-null float64\n",
    "NumBorrow         63751 non-null float64\n",
    "DTIRat            61735 non-null float64\n",
    "CreditScore       63662 non-null float64\n",
    "FTHomeBuyer       63752 non-null object\n",
    "LoanPurpose       63752 non-null object\n",
    "PropertyType      63752 non-null object\n",
    "NumUnits          63752 non-null int64\n",
    "OccStatus         63752 non-null object\n",
    "PropertyState     63752 non-null object\n",
    "Zip               63752 non-null int64\n",
    "MortInsPerc       20001 non-null float64\n",
    "ProductType       63752 non-null object\n",
    "CoCreditScore     23018 non-null float64\n",
    "MortInsType       20001 non-null float64\n",
    "Default           63752 non-null float64\n",
    "dtypes: float64(9), int64(6), object(10)\n",
    "memory usage: 12.2+ MB"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "We see that the dataframe contains 63,752 rows and 25 columns. Looking at the third column in this list, there appears to be eight data columns that contain at least one missing value. These can be handled in a number of ways; depending on the distribution of data in each column, we can fill in missing values with the column median or mean, or we could sample randomly from a distribution defined by the present values. We could also fit for the missing values using a machine learning algorithm applied to the complete columns, or we could drop the missing data altogether. Columns \"OrCLTV\", \"DTIRat\", \"CreditScore\", \"OrInterestRate\", and \"NumBorrow\" don't contain too many missing values, so we could simply drop those particular rows from the analysis with little impact on the final results. But let's fill them in anyway just for fun. However, before doing so, we should first take a quick look at the distribution of values in each of these columns."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 65,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "image/png": "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\niv4Lft1xO17nllsAAAAASUVORK5CYII=\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x11586b390>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "data = df[['OrCLTV','DTIRat','CreditScore','OrInterestRate','Default']]\n",
    "\n",
    "fig, axes = mp.subplots(nrows=2, ncols=2, figsize=(6,5))\n",
    "mp.tight_layout(w_pad=2.0, h_pad=2.0)\n",
    "\n",
    "columns = data.columns\n",
    "for i, column in zip(range(1,5), data.columns):\n",
    "    mp.subplot(2,2,i)\n",
    "    sns.distplot(data.loc[data['Default'] == 0, column].dropna(), kde=False)\n",
    "    sns.distplot(data.loc[data['Default'] == 1, column].dropna(), kde=False)\n",
    "    mp.xlabel(column)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "In these figures, the green histograms represent the default class, while the blue histograms represent the non-default class. The various distributions are clearly non-Gaussian, and so simply filling in missing values with the mean may not be appropriate. As such (and for simplicity) we will fill in the missing values with the column median, which is more appropriate for skewed distributions. The \"NumBorrow\" column takes on only six finite values, and so here we fill in missing data with the most common value, rather than the median. It is worth noting that some experimentation suggests fitting for values in these columns (or even using the column mean rather than the median) actually has a negligible effect on the final classification later. Interestingly, the disparity in values between the two classes seems largest for the \"DTI\" (debt-to-income ratio) and credit score columns. Let's take a closer look at these features."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 56,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.text.Text at 0x1fa039400>"
      ]
     },
     "execution_count": 56,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\nrkJggg==\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x11a055438>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "fig, axes = mp.subplots(nrows=1, ncols=2)\n",
    "mp.tight_layout(pad=2)\n",
    "\n",
    "mp.subplot(1,2,1)\n",
    "sns.boxplot(x=\"Default\", y=\"DTIRat\", data=data, linewidth=0.5)\n",
    "mp.ylabel('Debt-to-Income Ratio')\n",
    "\n",
    "mp.subplot(1,2,2)\n",
    "sns.boxplot(x=\"Default\", y=\"CreditScore\", data=data, linewidth=0.5)\n",
    "mp.ylabel('Credit Score')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The figures above show boxplots of debt-to-income ratio and borrower credit score. The green boxes (and whiskers) show the distribution of values spanned by the default class, while the blue boxes show the values spanned by the non-default class. Boxplots are assembled such that 25% of the data values are contained between the lowest whisker and the bottom of the box, 50% of the values are contained within the box itself, and 25% of the values are spanned between the top of the box and the top whisker. The median value of the data is represented by the horizontal line in the middle of each box. On average, defaulters have a higher debt-to-income ratio than do non-defaulters, and they also have lower credit scores. Interestingly, in looking at the various data features, the borrower's location (ZIP code) also seems to be a strong indicator of whether or not a default will occur. The figure below shows the fraction of people that have defaulted from the ten most common ZIP codes with more than 500 borrowers. In certain locations (for example, ZIP code 891), over 80% of borrowers defaulted. We will see shortly that these are a few of the most discriptive features in terms of identifying which class a borrower belongs to."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.text.Text at 0x1169081d0>"
      ]
     },
     "execution_count": 19,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x118e0f7f0>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "data = df.loc[df['Zip'].isin(df['Zip'].value_counts().index.tolist()[:10])]\n",
    "\n",
    "ptab = pd.pivot_table(data, index='Zip', columns='Default', aggfunc='size')\n",
    "ptab = ptab.div(ptab.sum(axis=1), axis=0)\n",
    "ptab.plot.barh(stacked=True, figsize=(6,4))\n",
    "mp.legend(loc='center left', bbox_to_anchor=(1.0, 0.5))\n",
    "mp.xlabel('Fraction of Borrowers')\n",
    "mp.ylabel('ZIP Code')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Now that we've explored the data a little bit, let's fill in those missing values. This is done easily using the Pandas fillna function."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "df['OrCLTV'].fillna(df['OrCLTV'].median(), inplace=True)\n",
    "df['DTIRat'].fillna(df['DTIRat'].median(), inplace=True)\n",
    "df['CreditScore'].fillna(df['CreditScore'].median(), inplace=True)\n",
    "df['OrInterestRate'].fillna(df['OrInterestRate'].median(), inplace=True)\n",
    "\n",
    "count = Counter(df.loc[df['NumBorrow'].notnull(), 'NumBorrow'])\n",
    "tmp = count.most_common()[0][0]\n",
    "df['NumBorrow'] = df['NumBorrow'].fillna(tmp)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "We can perform one last preprocessing step and split up any date columns into their month and year components, just in case they might have some predictive power later."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "df['OrDateMonth'] = np.nan\n",
    "df['OrDateMonth'] = df['OrDate'].apply(lambda x: x.split('/')[0].strip()).astype(int)\n",
    "\n",
    "df['OrDateYear'] = np.nan\n",
    "df['OrDateYear'] = df['OrDate'].apply(lambda x: x.split('/')[1].strip()).astype(int)\n",
    "\n",
    "df['FirstMonth'] = np.nan\n",
    "df['FirstMonth'] = df['FirstPayment'].apply(lambda x: x.split('/')[0].strip()).astype(int)\n",
    "\n",
    "df['FirstYear'] = np.nan\n",
    "df['FirstYear'] = df['FirstPayment'].apply(lambda x: x.split('/')[1].strip()).astype(int)\n",
    "\n",
    "df.drop(['OrDate','FirstPayment'], axis=1, inplace=True)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Before we try and predict loan defaulters, we must ensure that all columns in the dataframe are numerical (i.e., no strings present). To do this quickly, the dataframe categorical variables are isolated by identifying any columns with the \"object\" data type. We loop over each of these columns, and use the Pandas get_dummies function to convert them to numerical values."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "df_cat = df.select_dtypes(include=['object'])\n",
    "df_num = df.drop(df_cat.columns, axis=1)\n",
    "\n",
    "data = pd.DataFrame()\n",
    "for i in df_cat.columns:\n",
    "    tmp = pd.get_dummies(df_cat[i])\n",
    "    data = pd.concat([data, tmp], axis=1)\n",
    "\n",
    "df_new = pd.concat([df_num, data], axis=1).reset_index(drop=True)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "One may note that columns \"MortInsPerc\", \"MortInsType\", and \"CoCreditScore\" still contain missing values (many of them!). In fact, they contain so many missing values that trying to fill them accurately may just result in additional noise being added to the data. To this end, we simply drop these columns from the dataframe."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "df_new.drop(['MortInsPerc','MortInsType','CoCreditScore'], axis=1, inplace=True)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Predicting Bad Loans\n",
    "Okay, now we're ready to make some predictions! We first randomly split the data into a training set and a test set using the Scikit-Learn train_test_split_function. From these two sets, we idenfiy the target (\"Default\") vector, and feature arrays. We then initialize the random forest classifier composed of 200 random decision trees, fit it to the training data, and then predict the test set classes."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "df_train, df_test = train_test_split(df_new, test_size = 0.25, random_state=0)\n",
    "df_train = df_train.reset_index(drop=True)\n",
    "df_test  = df_test.reset_index(drop=True)\n",
    "\n",
    "df_targ_train = df_train['Default']\n",
    "df_feat_train = df_train.drop(['Default','LoanID'], axis=1)\n",
    "\n",
    "df_targ_test = df_test['Default']\n",
    "df_feat_test = df_test.drop(['Default','LoanID'], axis=1)\n",
    "\n",
    "targ_train = df_targ_train.values\n",
    "feat_train = df_feat_train.values\n",
    "\n",
    "targ_test = df_targ_test.values\n",
    "feat_test = df_feat_test.values\n",
    "\n",
    "model = RandomForestClassifier(n_estimators=200)\n",
    "model = model.fit(feat_train,targ_train)\n",
    "predict = model.predict(feat_test)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "We can evaluate the perfomance of our classifier by examining the resulting confusion matrix. The confusion matrix is a table which shows the percentage of correct (true positives or true negatives) and incorrect (false positives or false negatives) classifications for each positive (default) or negative (non-default) class. In the table below, the true class is given along the x-axis, while the predicted class is given along the y-axis."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 87,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "ename": "SyntaxError",
     "evalue": "invalid syntax (<ipython-input-87-e59a74c659cb>, line 7)",
     "output_type": "error",
     "traceback": [
      "\u001b[0;36m  File \u001b[0;32m\"<ipython-input-87-e59a74c659cb>\"\u001b[0;36m, line \u001b[0;32m7\u001b[0m\n\u001b[0;31m    Actual          0.0       1.0\u001b[0m\n\u001b[0m                      ^\u001b[0m\n\u001b[0;31mSyntaxError\u001b[0m\u001b[0;31m:\u001b[0m invalid syntax\n"
     ]
    }
   ],
   "source": [
    "y_actu = pd.Series(targ_test, name='Actual')\n",
    "y_pred = pd.Series(predict, name='Predicted')\n",
    "df_conf1 = pd.crosstab(y_pred, y_actu)\n",
    "df_conf2 = df_conf1/df_conf1.sum(axis=0)\n",
    "print(df_conf2)\n",
    "\n",
    "Actual          0.0       1.0\n",
    "Predicted                    \n",
    "0.0        0.695582  0.239213\n",
    "1.0        0.304418  0.760787"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Or, graphically,"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "image/png": "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\nRK5CYII=\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x11ad2ff60>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "cm = confusion_matrix(targ_test, predict).T\n",
    "cm = cm.astype('float')/cm.sum(axis=0)\n",
    "\n",
    "fig, ax = mp.subplots()\n",
    "sns.heatmap(cm, annot=True, cmap='Blues');\n",
    "ax.set_xlabel('True Label')\n",
    "ax.set_ylabel('Predicted Label')\n",
    "ax.xaxis.set_label_position('top')\n",
    "ax.xaxis.tick_top()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The confusion matrix shows that for all of the defaulters in our data set, we are able to correctly identify them about 76% of the time (these are true positives). On the other hand, our algorithm incorrectly labels defaulters as being non-defaulters about 24% of the time (these are false negatives). However, this is not too bad! Since roughly 10% of the original data set was composed of the default class (before balancing the data), simply always predicting a non-default for all borrowers would result in a misclassification of defaulters 10% of the time. We see now, though, that our algorithm is able to identify defaulters 76% of the time, which means we have reduced the misclassification error from 10% to 2.2%!\n",
    "\n",
    "Similarly, for all non-defaulters in our data set, the algorithm incorrectly labels them as defaulters about 30% of the time (these are false positives). In terms of profitability to Fannie Mae, however, false negatives are much more important. This is because Fannie Mae loses money when we incorrectly label a defaulter as being a non-defaulter. The fact that we incorrectly classify some of our non-defaulters is of little consequence, though, because there are so many of them present in the full data set (i.e., we can always find more non-defaulters easily enough).\n",
    "\n",
    "One may point out that both our training and test sets have been balanced before analysis, and wonder if this predictive capability holds up when the algorithm is presented with new, very imbalanced data. It turns out that this is in fact still the case. Some additional testing suggests that rates of false positives and false negatives are nearly identical to those given above.\n",
    "\n",
    "To further visualize the performance of our classifier, we can look at the corresponding receiver operating characteristics (ROC) curve. The ROC curve shows the number of true positives vs. the number of false positives labeled by the algorithm for a number of threshold values."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.text.Text at 0x118ea95f8>"
      ]
     },
     "execution_count": 41,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\nSApBEARBkf8BklmV3naVMLMAAAAASUVORK5CYII=\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x116901dd8>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "fpr, tpr, thresholds = roc_curve(targ_test,model.predict_proba(feat_test)[:,1])\n",
    "\n",
    "fig = mp.figure(figsize=(4,4))\n",
    "mp.plot(fpr,tpr,'-r')\n",
    "mp.plot([0, 1], [0, 1], 'k--')\n",
    "mp.xlabel('False Positive Rate')\n",
    "mp.ylabel('True Positive Rate')\n",
    "mp.title('Random Forest ROC')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "In the case of a perfect classifier, the ROC curve would hug the top left corver of the figure (the true positive rate would be 1.0, and the false positive rate would be 0.0). The black dashed curve represents a classifier with no predictive power. We see that in our case, the random forest does a pretty good job; it clearly has predictive capabilities, but of course is not perfect.\n",
    "\n",
    "The random forest classifier is nice in that it allows one to identify directly those features in the dataframe that were most important in predicting the positive and negative classes. Let's take a look at the top 10 most important features."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 42,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(array([0, 1, 2, 3, 4, 5, 6, 7, 8, 9]), <a list of 10 Text xticklabel objects>)"
      ]
     },
     "execution_count": 42,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\nCL0i5YyWF6mq6D7/mfXOIdXj7h2sOg1YRCpQ9x4PwvSrtwvm388G1o6Wpl6Ju4+OekVW4e6P5m86\nBRxB+CXxcDUDi4iISDxpKDz6EqbW5cs97h33oma2PWHsyDh3X93FmkRERKQK0nCrZQmrFhi5x4XL\n/5Yl2hjpz8AUdy+8HdOjrq6urqamcpY5EBERkQIl30DTUHi8Bgwys2Z3z21uNYSwO+M7lV4sWnTn\nDsKmUWMqff7cuYtoblbhISIiUqn+/UuvaZeGwuNZwrz4HQgr5kFYwObJbp/RjWjZ5cmERXbG5BUy\nZevs7KKzUwPWRUREaqHuhUe0TfhEYIKZHUbYv+FkwtTY3P4T8919SRmXu4qwc+PJwPpmlmsv9/ki\nIiJSQ2kYXAph0a+niPYAAM7Mm7nyBrB/qQtEBcoOhL0HXiVs4Zz7U/L5IiIiUnupWDI9Td56a6Fe\nEBERkRjWX3/dkoMk09LjISIiImsAFR4iIiKSGBUeIiIikhgVHiIiIpIYFR4iIiKSGBUeIiIikhgV\nHiIiIpIYFR4iIiKSGBUeIiIikpi679WSZu3t7cyY8Xy9YxQ1fPgIWltb6x1DRESkIio8ejBjxvOM\nuXMqrUOH1TvKStpnzWQSMGrU1vWOIiIiUhEVHiW0Dh1G72Ej6x1DRESkIWiMh4iIiCRGhYeIiIgk\nRoWHiIiIJEaFh4iIiCRGhYeIiIgkRoWHiIiIJEaFh4iIiCRGhYeIiIgkRoWHiIiIJEaFh4iIiCRG\nhYeIiIgkRoWHiIiIJEaFh4iIiCRGhYeIiIgkRoWHiIiIJEaFh4iIiCRGhYeIiIgkRoWHiIiIJEaF\nh4iIiCRGhYeIiIgkRoWHiIiIJEaFh4iIiCRGhYeIiIgkRoWHiIiIJEaFh4iIiCRGhYeIiIgkRoWH\niIiIJEaFh4iIiCSmV70DAJhZb+AKYDSwGLjI3S8u8ZydgevcfdOC9gOBc4ANgb8AR7j7nJoEFxER\nkYqkpcdjPLAVsDtwDDDWzEZ3d7KZjQBuAZoK2rcDrgHGAtsD/YFra5JYREREKlb3wsPM+gKHA8e5\n+zR3nwyMA47t5vzvAI8A/yty+LvATe5+o7tPB74FfNHMNqlNehEREalE3QsPYCThls9jeW0PE3os\nivk8oaC4tMixHYAHcw/c/b/Aq1G7iIiI1FkaCo8NgbfdfVle22xgbTMbWHiyu4+OekW6u9brBW2z\n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\n1zvGKoYPH0Fra2vFz6t74RE5ibBy6b3AfODMaD0PCLdRDgEmuvtCM/syocA4EngO2DMqXgYTek0g\nFB/5DgUm1vZbEBERqb4ZM55nzJ1TaR06rN5RlmufNZNJwKhRW1f83FQUHu7eRigODi1yrLng8VTC\nqqSF580mTJ0VERFpKK1Dh9F72Mh6x6iKNWf+joiIiNSdCg8RERFJjAoPERERSYwKDxEREUmMCg8R\nERFJjAoPERERSYwKDxEREUmMCg8RERFJjAoPERERSYwKDxEREUmMCg8RERFJjAoPERERSYwKDxER\nEUmMCg8RERFJjAoPERERSYwKDxEREUmMCg8RERFJjAoPERERSYwKDxEREUmMCg8RERFJjAoPERER\nSYwKDxEREUmMCg8RERFJjAoPERERSYwKDxEREUmMCg8RERFJjAoPERERSYwKDxEREUmMCg8RERFJ\njAoPERERSYwKDxEREUmMCg8RERFJjAoPERERSYwKDxEREUmMCg8RERFJjAoPERERSYwKDxEREUmM\nCg8RERFJjAoPERERSYwKDxEREUlMr3oHADCz3sAVwGhgMXCRu1/czbmjgCuBEcB04Gh3fzrv+IHA\nOcCGwF+AI9x9Tm2/AxERESlHWno8xgNbAbsDxwBjzWx04Ulm1heYAjwQnf8YMMXM+kTHtwOuAcYC\n2wP9gWtrH19ERETKUffCIyomDgeOc/dp7j4ZGAccW+T0A4DF7n6aBycAC4H9ouPfBW5y9xvdfTrw\nLeCLZrZJ7b8TERERKaXuhQcwknDL57G8tocJPRaFto+O5XsE2DH6egfgwdwBd/8v8GrULiIiInWW\nhsJjQ+Btd1+W1zYbWNvMBhY59/WCttnAxmUeFxERkTpKw+DSvsB7BW25x73LPLd3mcdLam5uorm5\nCYCWlmbaZ80s96mJaZ81k5attqNXr+7rxjRmz2puyG72rOaG7GbPam7Ibvas5obsZi8nd3eaurq6\nahCpfGa2L3CZu2+U17Y5MAMY6O7v5LXfCTzn7j/Ma7sA2Nzd9zazd4HR7v7XvOOPA79390sT+HZE\nRESkB2m41fIaMMjM8rMMAdryi468c4cUtA0B3ijzuIiIiNRRGgqPZ4GlrDwAdBfgySLnPg58sqBt\nJ1YMTH0c2Dl3wMyGEsZ3PF6tsCIiIhJf3W+1AJjZlYQC4jBCoXAtcLC7TzazwcB8d19iZusCM4Hf\nAb8CjgL2BTZz9zYz2wG4jzCtdipwafTcfZL+nkRERGRVaejxADgJeAq4F7gcODNazwPCbZL9Adx9\nIfBlYFdCYbEdsKe7t0XHHwe+Q1hA7GFgDqGYERERkRRIRY+HiIiIrBnS0uMhIiIiawAVHiIiIpIY\nFR4iIiKSGBUeIiIikhgVHiIiIpIYFR4iIiKSGBUeknlmdkK00JyIiBQwsz71zpBP63jUmJntBJwI\nbAZ8BfgG8Iq7/76uwUqINuo7DNgC6ASeA37t7q/UM1cxZvZv4IPAA8CNwB/cfUF9U5VmZpcCN7p7\nse0BMsPMegPnAP9x919GbU8B/0dYDHBpPfM1KjNrAb4AfBT4LWDAP919fl2DlWBmnwNGAmsDTfnH\n3P3suoRqcGbWBjwE3A3c7e7/qGceFR41ZGajCb8QriYs4z4c2Ac4DzjR3a+sY7xumdlXgD8AjxJW\niG0BtgG2IqwU+2Ad4xVlZtsC+0V/hgB/JhQhd7p7ez2zdcfM7iPsS/QyYRuASe7+z/qmqpyZXUXY\nI+lId38kavsq4ef8Hnc/vp75emJmLwHbuPvcgvaNgGfdfYP6JOtZtA/VX4CBwABC0XEhYS+rz7n7\n83WM1y0zGwecDEwDCgukLnffI/lU5ctq0WRmHwU+E/3ZHVhI+Pm5G/hb0h/UVHjUkJlNA37m7pPM\nbCEw0t1fMrMxwNnuvlmdIxZlZi8Av3X3cQXtZwD7uvuo+iQrj5ltTyhA9gXWA24HJhH+B0vVD7yZ\nbcCKgmlnwi/kScDv3P31emYrl5m9BXzW3Z8taN8GmOLuqboNZmb7Al+MHh4C3AS0FZz2IWBzd98o\nuWTlM7PJwGzgaOAdwpvhLODXwFB3/1Qd43XLzOYB33H3m+udpVJZL5pyop3gtwWOB74OLHP33klm\n6JXkP7YGGkbxnXGfAD6QcJZKfBCYXKT9FuCMhLNUzN3/DvwdOCXaOHAfwh5A/YBUvZG4+5vAL4Ff\nmtkQVhQhF5jZw4Qi5BZ3f6eOMUtpInwCLNbemnCWcjxAKDxyn1ibWPnTaxcwA/hBwrkqsSuwvbt3\nmBkA7r7UzM4Bnq5rsp4tI935enIEcGBGi6ZWQq/1ToQPODsR3v//QrgFkygVHrU1A/g8kLulkvu0\nfXB0LK1uAr5vZkcV3J//dnQsE8ysP7A5oRv6A6T7Ncfd/0cokC43sw2BvYFjgMuAVA0OK/AH4Goz\nO4YVbyojCblvq1uqbrj7W0SbR5rZK8B4d19Uz0wxLAYGA/8qaDcgzeObfgH8xMwOd/cl9Q5ToSwX\nTQtYUWj8mbCR6rR69QDrVksNmdkuwB2EQXZ7AdcTekG2Ab7i7vfWMV63zOx3wGjC7r5TgaXAJ4CP\nEHoSlv/CSFv3YtRrsA8h/26AA78n3Lp4qZ7ZymVmnyDk35swKPlOdz+gvqm6Z2Z9CV38+7Jiplwn\ncB1wgru/W69s5TCz9QkDNFuipiagNzDK3X9Wt2A9MLMzgQOBUwkfBvYFNgTOB6529x/XMd5KzOxl\nVnzoaib0qLYTbhV15J/r7h9JNl35zGws4eckc0VTdJt8V2AH4BXC7u0PAQ+7+3+TzqPCo8aiaZ7f\nJcwO6UV4I7zC3V+ta7AeRP+DlcXdf1LLLOUws00Ib9RfI/yPNYsVxcZz9cxWLjPbjpB/NOEX8/8R\nBpz+MSufxs1sPUKhtBR4yd0X1jlSSWZ2BOFT+FqEN8fcLZcu4Al337Fe2Uoxs+8RCo+No6Y3gYsJ\nPTiddQtWwMwOLvdcd7+ullkq1ShFU040E2orQhGyE7An8D93/3CSOXSrpYbM7I/AD9L06aMcaSgm\nKvQy4ZfurcD33f3ROucpi5ntRig09iGMPXkEGA/c6u5z6pmtUma2LuG21lpAX2BU3tiD1M2CyvND\nQi/BBYSfo+2BdYGJpPA2UY6ZfRD4pbtfbmbrAL3cfX70xrIlKbolkF9MmNmPCYXR4vxzzKwfofs/\nbc6qd4AqM8LA0h0Ihcc7aIxHw9mJcF8w9czsN8Dx7r4w+rpb7n5YQrHKdRZwvrtn4rXOcx/wDGEs\nxO/r0eVZDWb2TWACoeAo1MWKWxhp9AHgOnd/z8yeBnZw91vM7ATgN4Qpqmn0MmHa+FsFPWIfJnSj\nF/tvURcWKtDczKaxwLRodku+jwNHEWaNpEbGi6blzOwWwtT99Qg/H38FznX3afXIo8Kjtq4AbjKz\nCcB/yBsbAan+JNjUTXsL6SykxhLe+N6sd5AKnUWYbv1evYOspvMJa9X8OAu3Vwq8CaxPuO/9T2AU\nYfbWa6Rs5pmZfZvQQwPh/9GpZtZRcFp/oK6LQxWxEXBP3uPbi5yzCLg0mTjly3LRVOA14FDgfncv\nnDqeOBUetXVm9PdVRY6l7ZPgIcD6ZnaYux9a7IRo4OZrRDMCUqS7QintslowFRoI/DyDRQfAzcBE\nMzucsJjS9dGqq18BZtY12aquI4wvaCb0xlzEyutJdBHewFM1aN3d7yMadByNmdjW3d+ub6qyZbZo\nyufuJ0Qz5X5kZlsQ3nscuMbdC2dG1ZwKjxpy96zthTMCmGFmR7r7H4scT/NI5DRn605WC6ZCdxAG\nxl5U7yAxnEa4zz3I3f9kZr8mFINzSFmBHU1tnwjL38AfydrtxaQHMa6ujBdNy0UzLKcA04HHCIXH\nrsCxZvbZ3IrDSdGslhqLNuf5JmFWSwuhO/emwiWa6y3qsh1G6P7/JnAtcFz+VMhohs7r7p6mnhrM\nrJNwz7uw23kV7v7R2icqT5R7cLSuRGaZ2UWEmVvTCL0EKy1Rn8IxQWUxs4FpHeRrZk3AVwnbMBSb\nBrxnvbL1JJqBdi5hgONarLrseOpnhmSRmT1B2L7g9IL2C4Bd3f2TSeZRj0cNmdnHCd23HazY82Q0\nYQGd3eu9UU+BJuBddz/IzO4kjE/Z3cy+lXQ1HNMvSPfCSd15LTf7oyfunsYVQHMGEKb+5qS+J8fM\nPgJ8iTBmaUr+9PboTf0Y4GzCbaQ0uhw4nDA4eTvCvkqbEgacpnIPqMj1wCDCar2Z+v8140XTxwkb\nlBb6NXBcwllUeNTYzwnrMRyR6xI1s17ANYR7gp+rY7ZuufvN0XLdvwXuN7PxrBivklY3RsuPZ80Y\noHCwWqZ0NyYorcxsH0KhtIyw5sh4M/uCuz8UbTZ4NWHBvBvqGLOUrwPfcPfbzOyfhD1bnNBTmeYi\ndTtgq5R96CpXZosmwuDp7Vh13NL2wP+SDqPCo7Z2BI7Jvw/r7sui7q2p9YtV1Er33KINyj4fLVJ0\nAWHp95PqEayBdQEPZrFgyp9aGH3drRTu2nkWYVDp4YQVVs8mFB8XE95cpgM7p3w9mH6s+B3yPLCd\nu88ws58SlsVOq5mEWURZlOWiaRwwwcw2J+wVBmEtj++xYqZUYlR41NYbhJUcvaB9M9JXMRftHo8W\nKPo/wi/ktP5Cu5FVdxfNgtTfkujBpwjrjyyOvu5OF+GNPU02I2z2tRTAzM4jDDK9ktCzd2GaVv7s\nxkuEqb+vEvYg2o7QQ9kEvL+OuUq5ALgmGhf0IquOB0rrEgOQ4aLJ3a+Nbul+jzDtdwnhfelwd78l\n6TwqPGprAuF/sh+xcpV5NqE7N00+DBQd5Oju/4x2eT2TsP9Jqrj7t0qdY2abAQelbBXZ84BU72PS\nnYJt138F/DWtAzGL6AMsn5kQ9dosIaxD8ov6xarIRcCN0TTgm4CnzGwZ8EnCCrhpdX309xVFjqVt\niYFCmS2azOxUwhYS19Y7C6jwqLXxwDrAzwgD8CCs8X8xKZt66O7/KXG8g2wvH7wpcAaQmsLD3UuO\nmzGzEcCp7n5QApHiuoJwrzgrhUcxXYSB4Jng7teY2b8IA8JfiMatfBt4khSvopnBJQbyZbloOoOw\ni3QqqPCooWjL4bOiMR39CN1b66V5gzhJnY0Io9HTXHjcB3zDzM7PyCqsXRRf96XkdOw0yf+E7e5/\nIboVamZ7ED7gpFJWlhgolPGiaRJwRvRe9B93by/1hFpS4VFDZvYhwiC2+9z9tKjtRTP7N7BfVvfm\nECmwAeE23Blm9iarbg2QtmmGTcDtZpb/y7cPMMnMVhor5O57JJqshGhfnH0IM3Jucfdb844NJfSm\njialn74ztsTAKrJaNBF2od2EsEI1hVP4k16bSYVHbV1JmMaUf1tlC8LYj18SFgASybqrSd+YpZ4U\n2335gcRTVMjMxhJuFd4DvAfcYGaD3H1CtKnduYTlu4+oY8xSMrnEAGS+aDqUFK3urMKjtnYGtsyf\nLunuc8zsDNI3nTazSu2mG9m45kHWQGb2fuDmNGw8VS53L1Z4ZMEhwMnufimAmX0NuCAaOH0CYezB\nme4+v/tL1F2WlhgolNmiifDh9xB3f77eQUCFR629TZjy9u+C9s1J33TaLCtnWuprRPtcpIWZ3Ufp\nTyGpXDkz2jDwBsJU2i4z+xvhF/Ks+iYrzcw+WO65KRuPtREwOe/x7cDvCYuJ7eLuj9UlVWWytMRA\noSwXTRuSojFMKjxq63Lg6mg3wKejtpHAiYQZL1IF+StnmtmBZGdq5/1lnndbLUPEdD5hu/AxhF9o\npxF2T03VmIhuvELpgq+J9M1UWItwKwUAd++MpgEflZGiA7K1xEChLBdNE4G7zewGws9/4TisRD+U\nqfCoIXe/2MwWAUcSfjEvJSxCc6K7p3k55iy7gvCLLPWFR4a7/CFsG/95d38awMymAS+YWV93X1zf\naCVlaofUMrxQ7wAVyMwSA0VkuWj6OuEDwoFFjnWRcG+wCo8ac/ergKvqnWMNch8wJitTO81sIOH+\n/C/cfXZe+3mE7bjHuXsa93LpT7h9BYC7z4wWsFof6HFNmBTYjTATIfU/HwWKTQPubmpwKuWWGCAs\nM7ABsMTd095bkJPZosndU1Vsq/CoATNbh7Dz5Z9z28qb2fHAZwirg17m7s/WMWIjy8zUTjPbmDCb\nohdwKyuvvTCbcEvua2a2m7u/UYeIPWlm1Te8paTr1kR3fkuYnZC1PXKagP8VTIVsAl6s9/TInphZ\nj2vQ5GdPusu/EhkvmjCzDYFjWXkq8DXuXrhxXM2p8KgyM9uU8GayLmFg6btmdjlhm+2bCdPgHjCz\nPVO+CVVWXU3oNhxAuN1S14VySjiXsPTy3oWzQtz9smi2zp+BcwirUqZJlj99Z3WPnJ72xEmzawmb\n8c0i/Hx09/on3uVfSqMUTWa2C+F3yfPAY4TCYzfge2b2WXdPdJl9FR7Vdz7wd2CMu78XVZlHEdbJ\n/yaAmTnhzeTT9YvZeMzsaMJ4mk/kNT8H/Mrdr6xPqh59liJFR467v2tmZ7JiqeY0KbYIV18ysAhX\nJAsF0krcfflaI9Eb4iq3i6Le1sNJ17ok4whrFq37/+2debQcdZXHPwEUJBLAQScHGAQjfBVRBNkZ\n5oAC4wIhLKOjqDABF0SIBzAgS4LMDEYWFwQEZAkgAuIhgiigSCIg6BAQJEGuDpgxRggiEB3WDLz5\n4/461OvXr9+S7qpf9bufc9553VUVuK+6uur+7vK9eCfO94F5aQxD7sympk5TE2fi6dwvFDemjpzT\n8Rk/pRGOR+d5D7B74YbwfjwsfWnhmJ+Q38TO2iJpVeB6YBf8RvEl4Cm8/XAb4ExJHwAmZzZ1dAJD\nF8EuxuspcqOWIlwFmlMWLcksZbEe7tyBp4sWSHqi6bAt8RqEs8q0rR1mdhxwXBrJPgVfnE2S9EO8\nY+tmM3u+3X+jQursNBXZAh+90MxFwJEl2xKORxcYDzxdeL87PrK9eFNeXqpFvc/ngM2Bt7XQkbhU\n0mnArcA04KtlG9eGhXi485E2xwy1vxJq3pEDcACQu8x1M7vi6dpGtObupv2N1XiWHXNm9hA+4XWW\npA2AyXgK+hJJ84A5ZpZVdK/mTlORRcB2eFdlke2Bx8o2JhyPzvMg/gEvSmHP9+EXZzEkPYV6tcDl\nzsHA9MHEq8xssaTpeJQpJ8fjHDwa81ArHQZJO+Irrn8v3bIhGCr3XSTD3Hcf8POionAdMLPvpflP\nq+DO6HZ4sXqDPuCZOmjYmNkS4JuSfoSvxI/FIwtZOR4N6ug0NXEacF5yoIqtwEcAx5dtTDgenecM\n4AJJO+Af7Hj8Q0fS+vhKayZweGUW9h6TeOXLNBjzgWw6WgDM7HJJWwF3SPolvoJdhqdW3oU/WC4y\ns7n11EsAABEYSURBVGzC5gWaIx4b4YXTj+AFvW/GB6/dR36577oWlxaVVPtNSpW0BvB24LelGzVC\nJG2DP7gn45HKO/Hr6bp2/y4X6uY0AZjZ7JRaPAI4Gu/2M+AQM7umbHvC8egwZnalpGfxMeZLgOPN\n7Jdp9xfwC3WGmc2uyMRe5GlgA9rrR2xE/9VhFpjZUZKuxa+XHYB18LqPe4CjzOwXVdo3GEVdgDR7\naFtgamNKp6S1gAuoIIw7DL4INNrc34Q//NbC1ScXmFnuOiQkNeRLgKPwKOtdgIBnJE02s7lV2ldE\n0qvxlPNkXHhubeDHePTxhjpEaBrU2WlKz5zZFZsBwLi+vtoVd9eWlHp5Lkkdr2dmzYVhwSiQdAE+\n8vm9qde+ef844EbAzGxa2fYNh5pJvfdD0tPAjmb2m6btAu42swnVWDY4kt6NP/i2oH8EpI9XnL47\nqrBtOKQ5P4/ihYEHAccA7wSmAv9iZltXaF4/JP0Nl3u/DX9A34LXvQ0gs9k47Zym66iJ05Sm6mJm\nC9L73YDD8Jbaq83su2XbFBGPLiLpJWCimf0ZwMyeSdvfiBcWvrZC83qJGXiq5dbCwKangIl4yuIk\nXNfjo5VZODTn4oVe2d/IWrAM16xprlvahQyjTJL2BH4IXImnPB/E/4YJeFfIVOAWSbtlPANle7yY\n+glJU4BrzWyppO/g13tOjE+/d08/rVa7Oc7GAf8+NpymU+nvNI1Pi0kgS6dpEu4gbZ7e349HZ67G\nFZ7HAVdIWtvMSpV8D8ejw0j6GNAYWtZK6wC8zTM3JcraYmaPSdoJOBsXySnyMt4Gt0/mEaa5wIF1\nkXpv4lTgorSSug+/7rcFPsgr34WcmAF8xcyObdr+FD64b56kJ4ETcQXiHHkamJhk6nfEPwNwB3Dp\noP+qGrKS6x4hdXaazgHuxyUengVOwBWSTzSzWQCSPoNHzcLxqDlz8C/aOLz97S5SPjnRh0+YnFO6\nZT2Mmf0RmJKkjLfGIxxPAvMzdzga1EbqvRkzO1/SIly46rC0eQGwR6bpii1xobl2XIjr7eTKbFy7\n5gXg98CPJX0aL27PKuLRqmYm1QC9GY82rZ6x9HidnaadgO0bM6AkzcRTcsXF2fVUMGcmHI8Ok2az\nnAKQbsZX1XAFW1tSi+RNVdsxCuok9T4AM7sZuLlqO4bJmgyt4fEEPvAuS8zseEl347VNV5rZS5L+\nAPyrmd1QsXmDkrpvvsErkbDNgDMkrQl8OLeBiEWnKY0wmGZmfyseI2ld/Pt7QMnmDcVrKVznSUn7\nOfovhJcDry7bsHA8OkyTlHEf8KHBFBIz1DcIKqCGUu/9bsLp9aCY2dSSzBou4/AUXDvayWNngZnN\naUQOUoHvHRlHDhqcBrwNTwk1ZlXNxDt0zgI+VpFdLUlaOpumtwcB90pqPsdvAfYs1bDhk2X3SDge\nneeLeOHaC7SWlW6Qu7Z/0GVqLPUO/R/KWT+gB+GDLR4gRdYuzZJRULfIQYH98PlEDzQWZOn1J/Fu\nkdx4Fp9IOy79TAeKcumN1HlzvVAuHCOpGOF4NXBkqmGCihocwvHoMEV9g+LrIGhBXaXeMbN/a/W6\nJvwBF1EaznG5UqvIQYG18Id5M6uQ4fPIzO4nCQ+mFub9MnbqmrkNL/Iucide49R8XKmEjkeHkfRP\nwz3WzEr/wIN8kPQAcEo75UBJ+6Zj3l6eZSMj6aTsgz8IG5X944DVga3M7H1V2darSPojHjmYn3Qy\ntjSzRyRtjevBrFexiS2RdDm+yv448CdeSS9+B3jEzFoNMssGSesAz5vZ85LeAfwzcK+Z/bRi02pF\ndh5mDzCv6X0jV/wMXsizDh6qewrvZAjGLrWUem/BN/COll/hMu934n/bRCDLGpUeoFaRgwKfBS7G\n73+r4GJta+OFyaVPSR0JkvbBHaR9UuPA7cAfgZmSjjOzsys0b0gkbYnXo6zetKuv7DkzOV+gtcTM\nVsxQkDQVvyEf2lB1TEOeLqQ+HQBB96it1HsTHwIONLNrJT2Et9QaXrdSesX8GOF64D8Lw/r6JG2C\nO4E/rM6s9pjZMmD/JG71FvwZZGkIW+6cio+7uCUJFS42sy0k7YWf92wdj2TvdOBxBqrG9lHynJlw\nPLrLLGD3opS0mS2S9Dk8r3Z6ZZYFOXADvlpqJ/V+EvnPgZiAR2YAHgC2M7OFkr5EONjdol3k4IgK\n7WqLpEeAbczsYeDhwvb1gfvMLOco8JuAhrz4PkAjRbqA/KPXn8IHwl1StSEQjke36cNXtL9u2r4Z\ng8wqCMYUvSD1Dj6Rdiu8GHMhnm65BE8xZt0dUmPWM7P905C7t5Jx5EDSAcD709uNgXOSnkSRjYH/\nK9Gs0fA/wK6SluAD+a5P2w8k/6nAy/Dp11kQjkd3OQe4XNJXcOnahpT0NLwCPRjD9IjUO7jy4RWS\nDsHnQNyTpLx3AnJULu0Ffi7pA2Z2D+745czPcMej0XY9joGD+RYCx5Vs10iZiUsgrIYPiJsv6XQ8\ntbhvpZYNzdG4wzcDd6D6teeXPWcmHI8uYmanSHoMOBQ4Pm1eABxuZldUZ1mQCz0g9Y6ZXSjpt8D/\nmtlvUifOofgK6+RKjetdHgP+vmojhkMakjkVVqg5n9EYmFkz5gMbAhuY2X1p24X435PbfJxmXoNH\nUefSX1Sskjkz0U4bBEFHSCqam+GrKTOzVl0XQQeQdAmegrsbWMTA2T65qcWuQNLr8eukVev1lysz\nbAjSIrIRZaoVkv4EXAVcQIs0f6t5Ot0kIh5dRtLOuFDUpsDeeD5wkZldValhQdAh0mjw8/DulsY9\n5QVJs4EjzWx5Vbb1ON8uvK6FeqykT+CpxVfRX5a+D693ytbxoEZRphasAZxtZlmk5cLx6CKS9sOL\n7L4F7IV/2ZYDsyWtm+scjiAYIefjQlB74uHoVfFapq/jiqufrc603qSGarENjsfbUmfhU3W3xzVJ\nLgOurdCu4fAr4Lo0nG8RNYoy4VOLvyDpCDN7fsiju0w4Ht1lJnCYmX1H0qcAzOxMSY/iE2zD8Qh6\ngcnArmZ2b2HbLUnH5kbC8egKNY2mbgBcmial3gvsYGbXJImBi8lfYqB2UabEHsCOwMclLaWpg8jM\nShUpDMeju2wK/KLF9v/Cv4BB0As8Tmsdg9XxNr6gw9Q4mvo48Ho8YvAQ3oZ9DbCEzO+JNY4ygYv5\nza7YhhWE49FdFuJa/o2bQKOS96C0Lwh6gVOBi5Jg2J34A/CdeFTv0uL8ophP1DHqGk39LnBZar2+\nCZcbuAeP2PyuUstakNpPzzCzZ9PrQTGzU0oya8SY2aVV21AkHI/uchTwA0nvxqWjT5C0KT7yfO9K\nLQuCznFh+n1Wi30z0g9U0LbXw9Q1mnosPipgPTO7XtJFeGHyX4AcIwq74df1s+n1YPThDl+WpMm6\ng7awmtm7SzQnHI9uYma3SxJweNr0d8BdwMfKFmwJgm5RnE8UlEYto6mpw+mUwvsTgROrs2hIVjjK\nZrYbgKTXmFndlKfnNb1fDZeA/wDwH2UbE45HF5H0feA4M2sboguCXkDSRLzWoF/RXTjZXaF20VRJ\nW+EKn5vjnSx/xWf7fM/MHqzStjbszMBBh0slvTOX1tThYGZfbLVd0sHA/njXS2nESqW77Ez+8weC\nYKWQtGdSpFyCFw0uwlslG7+DDmNmt+PzQn6DzwxpRFPfama3VmlbM5JWk3QxPsjuw/iD/PH0+2Dg\nAUnnpaGIudHKphztHC0/A95T9v80Ih7d5Vzgaknn4fr4zX3fUWgX9ALfAH6Jr7T/WrEtY4JC0eOM\npu0TJJ1pZkdXZForTgLeh0/qHuAUpajNFcCDtK4TClYSSRu12LwW8Hl8gVAq4Xh0l5PS7/Nb7ItC\nu6BX+AfgvWYW0Y0ukurFGsqZM4H7JT3VdNgWwKfxoWC58FFcwbZlJMbMbpU0Hbc5HI/usIiBxaXj\ngMWkOTplEo5Hl5D0ZmANM3uxsO09wJIcR1cHwUpwG/CPRFql26wP/LTwfk6LY54BvlaOOcNmQ7zb\nph2349O8c+SDkoqRvFWBfSX9uXiQmV1WrlkjYpOm933Ai8BSMyt9YFs4Hh0m5Sm/DnwGz539rLD7\nCGBvSV8DjqniAw+CLnAb8E1Je+FaDC8Wd+asb1AnzGwuqS5P0u+BbWsywfhVtBhM1sRzwPgSbBkp\nf2Bg9GgpA9V4+3DZ9ywpewjcUITj0XmOxIdlTTGzotOBmU2RtDeuIPff5CvyEwQjYQ98SuobGKhg\nmrW+QV0xs+YVbM700UZDImfMbOOqbRgtyTkdznnvM7NJ3banSDgeneeTwGfN7IZWO83sBymfOY1w\nPIIeoKFvEJSHpDfi+gvb0rqFudTZG0MwDpgj6cU2xzS3rAYrz8lt9o0HjgE2xtWGSyUcj86zMUPn\nM+cSRVRBjSnKoDexHFem/K2ZvVSiSWONy4H18LqI3DuJWmpItOAnXbVijDGYTLqkyfhnMh441Mwu\nLtUwwvHoBktx56NdTm1DXCI4COrKvCH2PyPpLDM7oQxjxiDbAVtnLLy1gqJ4laQPAzeb2ZMVmjQm\nSVGys3C10kuAY6v6HMLx6DxzgJMl7ZnkgfshaTW8Fe7m0i0Lgg4xmEx6Kq5eB9gBOEfSMjM7rVTj\nxga/w6e81o1z8WsjHI+SSM+cz+PS9L8DdjGzu6q0aVxfXy1rfrJF0jp4od1zuLDSfHw0+LrAu/Bq\n6AnAzma2pCo7g6DbpNHts8xss6pt6TUkHYjn8M/EC9WbO4myFCeUdC0uk36qmb1QtT29jqRd8XTc\nBvj1cpaZvVylTRCOR1eQ9Drgy3h3S6NFbBzugFwFnGxmSysyLwhKQdImwEIzW7NqW3oNSe0eHn1m\nlqU4oaQ7gJ2Al3HZ9GY155yKYmuNpG/jEvWL8GjHoAvdsh3VSLV0gZQ3+4Skw4FJeOj5L8DDUXAX\njCFeDzQrawYdoMYTgb+F6128Dr8ntut0CVaOj6Tfm+CS9INRuop2RDyCIOg4ktYGrgEWm9khVdsT\nVI+kw3C5gXcUNv8auMDMQlpgDBGORxAEI0bSXFqLE60CrA28BViAz3CJDq4OMAJBqKxSFpJWxSfo\n7oKLJ96BR8LWB7YBDgFuBSbnUH8QdJ9ItQRBMBrmDbK9oePxa+DnMRago5xctQGj5HPA5sDbzGxx\n075LJZ2GOx7TgK+WbVxQPhHxCIJgpQhthvKp0zmX9ABwipld0+aYfdMxby/PsqAq6lqgFARBPpxL\nPTUl6kydzvkkhlZzng9kkx4Kuks4HkEQrCxzgY9IWr1qQ8YQdTrnT+M6Eu3YCPjzEMcEPUKkWoIg\nWClCm6F86nTOJV0AvBEvNB7wwElqtzcCZmbTyrYvKJ8oLg2CYGUJbYbyqdM5n4GnWm6VNAtPqzwF\nTMTVnE/C/46PVmZhUCoR8QiCYNSENkP51PGcS9oQOBvYu2nXy/h8q2lm9mjphgWVEI5HEAQjJrQZ\nyqcXzrmkNwBb4xGOJ4H5ZvZEtVYFZROpliAIRkNoM5RP7c+5mT0O3FS1HUG1RFdLEASj4WBgeosH\nIABp+3RgaplG9TgHE+c86AHC8QiCYDSENkP5xDkPeoJwPIIgGA2hzVA+cc6DniAcjyAIRsMNwMyk\nwTCAtP0k4LpSrept4pwHPUF0tQRBMGIkTcTD/g8D7bQZdoiuhc4Q5zzoFSLiEQTBiDGzx3DlzGXA\nj3D1zOXAYuBaYBGwSzwAO0ec86BXiIhHEAQrRWgzlE+c86DOhOMRBEEQBEFpRKolCIIgCILSCMcj\nCIIgCILSCMcjCIIgCILSCMcjCIIgCILSCMcjCIIgCILSCMcjCIIgCILSCMcjCIIgCILS+H+bfUbu\nt9aeFgAAAABJRU5ErkJggg==\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x11ab737b8>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "feat_labels = df_feat_train.columns\n",
    "importances = model.feature_importances_\n",
    "indices = np.argsort(importances)[::-1]\n",
    "\n",
    "ncomp = 10\n",
    "sns.barplot(x=feat_labels[indices[:ncomp]], y=importances[indices[:ncomp]], color='deepskyblue')\n",
    "mp.title('Top 10 Feature Importances')\n",
    "mp.ylabel('Relative Feature Importance')\n",
    "mp.xticks(rotation=90)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "As we saw earlier, of all the available features, it looks like borrower credit score, ZIP code, and debt-to-income ratio are among the most predictive. It also appears that reasonably good predictions could be made using only the first seven features or so. This sort of analysis of feature importances would be useful for dimensionality reduction if we had many hundreds of features in our dataframe."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Minimizing False Negatives\n",
    "Though we've seen that our algorithm appears to perform reasonably well, there is definitely still some room for improvement. Let's see if we can decrease the number of false negatives even further by using a different algorithm - a naive Bayes classifier. When using other classifiers, it is usually the case that the feature array must first be scaled so that values take on similar ranges. This can be done quickly using the the StandardScaler function, and is applied using a call to fit_transform. Let's fit the naive Bayes classifier (GaussianNB) on the training data, and then predict using the test set."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 48,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "ename": "SyntaxError",
     "evalue": "invalid syntax (<ipython-input-48-f462bd01578a>, line 18)",
     "output_type": "error",
     "traceback": [
      "\u001b[0;36m  File \u001b[0;32m\"<ipython-input-48-f462bd01578a>\"\u001b[0;36m, line \u001b[0;32m18\u001b[0m\n\u001b[0;31m    Actual          0.0       1.0\u001b[0m\n\u001b[0m                      ^\u001b[0m\n\u001b[0;31mSyntaxError\u001b[0m\u001b[0;31m:\u001b[0m invalid syntax\n"
     ]
    }
   ],
   "source": [
    "sc = StandardScaler()\n",
    "\n",
    "feat_train_std = sc.fit_transform(feat_train)\n",
    "feat_test_std  = sc.fit_transform(feat_test)\n",
    "\n",
    "model = GaussianNB()\n",
    "model = model.fit(feat_train_std, targ_train)\n",
    "\n",
    "predict = model.predict(feat_test_std)\n",
    "\n",
    "\n",
    "y_actu = pd.Series(targ_test, name='Actual')\n",
    "y_pred = pd.Series(predict, name='Predicted')\n",
    "df_conf1 = pd.crosstab(y_pred,y_actu)\n",
    "df_conf2 = df_conf1/df_conf1.sum(axis=0)\n",
    "print(df_conf2)\n",
    "\n",
    "Actual          0.0       1.0\n",
    "Predicted                    \n",
    "0.0        0.419335  0.178299\n",
    "1.0        0.580665  0.821701"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Or, graphically,"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 49,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "image/png": "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\nTAAkSUrQ/wdPqePcHXzH7AAAAABJRU5ErkJggg==\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x2054f3438>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "cm = confusion_matrix(targ_test, predict).T\n",
    "cm = cm.astype('float')/cm.sum(axis=0)\n",
    "\n",
    "fig, ax = mp.subplots()\n",
    "sns.heatmap(cm, annot=True, cmap='Blues');\n",
    "ax.set_xlabel('True Label')\n",
    "ax.set_ylabel('Predicted Label')\n",
    "ax.xaxis.set_label_position('top')\n",
    "ax.xaxis.tick_top()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Looking at the resulting confusion matrix, we can see that we have significantly reduced the false negative rate to about 18% over the random forest classifier. This translates to a final misclassification rate of about 1.7%. This is much better than simply predicting the non-default class for all borrowers! It is worth noting, though, that the false positive rate for the negative class is also now much worse than before (about 58% now instead of 30% with the random forest classifier). Again, however, this is a small price to pay for significantly reducing the false negative rate; remember, it is the false negatives that cost us money in the end!"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Concluding Remarks\n",
    "In this project, we've detailed how to predict bad loans Fannie Mae single family loan performance data. The random forest classifier gave us a nice baseline algorithm by which we could identify loan defaulters with reasonably good accuracy. We also found that the false negative rate could be significantly reduced by switching to a different (naive Bayes) classifier.\n",
    "\n",
    "A number of tests could be conducted to try and further improve the analysis. For example, one could find the optimal number of estimators (trees) to use in the initial random forest classification. A value of 200 was shown to perform quite well, but could be tuned to give an even better performance. We could also compare a number of different tuned algorithms like logistic regression or k-nearest neighbors to see how these perform relative to the two algorithms used in this work.\n",
    "\n",
    "Well, that's all I have for now. Thanks for following along!"
   ]
  }
 ],
 "metadata": {
  "anaconda-cloud": {},
  "kernelspec": {
   "display_name": "Python [conda root]",
   "language": "python",
   "name": "conda-root-py"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.5.2"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 1
}
