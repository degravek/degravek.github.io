{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Introduction\n",
    "The Federal National Mortgage Association (FNMA), also known as Fannie Mae, is a government sponsored corporation founded in 1938 whose primary purpose, according to [this source](https://en.wikipedia.org/wiki/Fannie_Mae), is \"to expand the secondary mortgage market by securitizing mortgages in the form of mortgage-backed securities, allowing lenders to reinvest their assets into more lending and in effect increasing the number of lenders in the mortgage market by reducing the reliance on locally based savings and loan associations.\" In short, Fannie Mae purchases mortgage loans from primary lenders like Bank of America and Wells Fargo, among several others. After these mortgages are acquired, Fannie Mae sells them as securities in the bond market. According to [this source](http://home.howstuffworks.com/real-estate/buying-home/mortgage16.htm), these sales \"provide lenders with the liquidity to fund more mortgages, and until 2006, the mortgage-backed securities (MBS) sold by [Fannie Mae] were considered solid investments.\" Unfortunately, however, not all borrowers whose loans had been purchased by Fannie Mae were able to repay their mortgage in a timely manner, and many ended up defaulting at some point. In fact, between roughly 2006 and 2008, many hundreds of thousands of people had defaulted, causing these securities to decreases significantly in value, thereby strongly impacting the global economy.\n",
    "\n",
    "On its website, Fannie Mae has made a subset of its single family loan performance (SFLP) data available to anyone interested in looking at it. The SFLP data cover the years 2000-2015, and can be downloaded [here](http://www.fanniemae.com/portal/funding-the-market/data/loan-performance-data.html). The goal of this project it so see if we can predict from this data, with some accuracy, those borrowers who are most at risk of defaulting on their mortgage loans. Let's get started!"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Cleaning the Data\n",
    "Once downloaded, one will find that the SFLP data is dived into two relevant files called Acquisition().txt and Performance().txt, where the () is a placeholder for the particular year and quarter of interest. For the purposes of this project, we're using the quarter 4 data of 2007 which contains a reasonable number of defaults to analyze. The aquisition data contains personal information for each of the borrowers, including an individual's debt-to-income ratio, credit score, and loan amount, among several other things. The perfomance data contains information regarding loan payment history, and whether or not a borrower ended up defaulting on their loan. Additional information regarding the contents of these two files can be found in the [Layout](https://loanperformancedata.fanniemae.com/lppub-docs/lppub_file_layout.pdf) and [Glossary of Terms](https://loanperformancedata.fanniemae.com/lppub-docs/lppub_glossary.pdf) files.\n",
    "\n",
    "Letâ€™s begin by importing the appropriate Python libraries and reading in the data."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 50,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "from sklearn.ensemble import RandomForestClassifier\n",
    "from sklearn.naive_bayes import GaussianNB\n",
    "from sklearn.cross_validation import train_test_split\n",
    "from sklearn.preprocessing import StandardScaler\n",
    "from sklearn.metrics import confusion_matrix\n",
    "from sklearn.metrics import roc_curve\n",
    "from collections import Counter\n",
    "import seaborn as sns\n",
    "import pandas as pd\n",
    "import numpy as np\n",
    "\n",
    "import matplotlib.pyplot as mp\n",
    "%matplotlib inline\n",
    "\n",
    "columns = ['LoanID','Channel','SellerName','OrInterestRate','OrUnpaidPrinc','OrLoanTerm',\n",
    "        'OrDate','FirstPayment','OrLTV','OrCLTV','NumBorrow','DTIRat','CreditScore',\n",
    "        'FTHomeBuyer','LoanPurpose','PropertyType','NumUnits','OccStatus','PropertyState',\n",
    "        'Zip','MortInsPerc','ProductType','CoCreditScore','MortInsType'];\n",
    "\n",
    "df_acq = pd.read_csv('/Users/degravek/Downloads/Acquisition_2007Q4.txt', sep='|', names=columns)\n",
    "df_per = pd.read_csv('/Users/degravek/Downloads/Performance_2007Q4.txt', sep='|')\n",
    "\n",
    "df_def = df_per[df_per.iloc[:,15].notnull()]"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "After reading in the data, a new column called \"Default\" is added to the acquisition dataframe (df_acq). In this column, a 1 is placed next to any borrower that was found to have defaulted in the performance dataframe (df_per), and a 0 is placed next to any borrower that has not defaulted."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 51,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "df_acq['Default'] = np.nan\n",
    "df_acq.loc[df_acq.LoanID.isin(df_def.iloc[:,0]),'Default'] = 1\n",
    "df_acq.loc[df_acq.Default.isnull(), 'Default'] = 0"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The two classes (default and no default) are extremely imbalanced here; defaulters make up only about 10% of all borrowers in this particular case. For very imbalanced data sets, it is often the case that machine learning algorithms will have a tendency to always predict the more dominant class when presented with new, unseen test data. To avoid this overabundance of false negatives, we can balance the classes so that the dataframe contains equal numbers of defaulters and non-defaulters. We do this by randomly sampling the non-defaulters $n$ times, where $n$ is the number of defaulters."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 52,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "# Make classes balanced by undersampling non-defaulters, then concatenate dataframes\n",
    "# The no default case has been randomly sampled\n",
    "df_ydef = df_acq[df_acq.Default==1]\n",
    "df_ndef = df_acq[df_acq.Default==0].sample(n=len(df_ydef), random_state=0)\n",
    "\n",
    "df = df_ydef.append(df_ndef, ignore_index=True).reset_index(drop=True)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Let's take a look at the dataframe header."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 53,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "ename": "IndentationError",
     "evalue": "unexpected indent (<ipython-input-53-1d043bb2e299>, line 3)",
     "output_type": "error",
     "traceback": [
      "\u001b[0;36m  File \u001b[0;32m\"<ipython-input-53-1d043bb2e299>\"\u001b[0;36m, line \u001b[0;32m3\u001b[0m\n\u001b[0;31m    LoanID Channel                                 SellerName  0  100026162343       B                      BANK OF AMERICA, N.A.\u001b[0m\n\u001b[0m    ^\u001b[0m\n\u001b[0;31mIndentationError\u001b[0m\u001b[0;31m:\u001b[0m unexpected indent\n"
     ]
    }
   ],
   "source": [
    "df.head()\n",
    "\n",
    "         LoanID Channel                                 SellerName  \\\n",
    "0  100026162343       B                      BANK OF AMERICA, N.A.   \n",
    "1  100043973870       B                      BANK OF AMERICA, N.A.   \n",
    "2  100051174956       B  FIRST TENNESSEE BANK NATIONAL ASSOCIATION   \n",
    "3  100053457392       C       FLAGSTAR CAPITAL MARKETS CORPORATION   \n",
    "4  100059647383       C                      BANK OF AMERICA, N.A.   \n",
    "\n",
    "   OrInterestRate  OrUnpaidPrinc  OrLoanTerm   OrDate FirstPayment  OrLTV  \\\n",
    "0           6.875         108000         360  11/2007      01/2008     90   \n",
    "1           7.250         147000         360  08/2007      10/2007     90   \n",
    "2           5.625         204000         360  10/2007      12/2007     75   \n",
    "3           7.375         111000         360  08/2007      10/2007     75   \n",
    "4           6.625         159000         360  11/2007      12/2007     89   \n",
    "\n",
    "   OrCLTV   ...     PropertyType  NumUnits  OccStatus PropertyState  Zip  \\\n",
    "0    90.0   ...               SF         2          I            MO  631   \n",
    "1    90.0   ...               CO         1          I            IL  601   \n",
    "2    75.0   ...               CO         1          I            MA   21   \n",
    "3    93.0   ...               SF         1          S            TX  775   \n",
    "4    89.0   ...               SF         1          P            VA  244   \n",
    "\n",
    "  MortInsPerc  ProductType CoCreditScore MortInsType  Default  \n",
    "0        25.0          FRM         668.0         1.0      1.0  \n",
    "1        25.0          FRM           NaN         1.0      1.0  \n",
    "2         NaN          FRM           NaN         NaN      1.0  \n",
    "3         NaN          FRM         713.0         NaN      1.0  \n",
    "4        25.0          FRM         785.0         1.0      1.0 "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The data contains additional information regarding loan interest rate, payment dates, property state, and the last few digits of each property zip code. Several of the columns contain missing values. These will have to be filled in before we start making our predictions. Let's summarize the data in another way."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 54,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "ename": "SyntaxError",
     "evalue": "invalid syntax (<ipython-input-54-ad836442f105>, line 3)",
     "output_type": "error",
     "traceback": [
      "\u001b[0;36m  File \u001b[0;32m\"<ipython-input-54-ad836442f105>\"\u001b[0;36m, line \u001b[0;32m3\u001b[0m\n\u001b[0;31m    RangeIndex: 63752 entries, 0 to 63751\u001b[0m\n\u001b[0m              ^\u001b[0m\n\u001b[0;31mSyntaxError\u001b[0m\u001b[0;31m:\u001b[0m invalid syntax\n"
     ]
    }
   ],
   "source": [
    "df.info()\n",
    "\n",
    "RangeIndex: 63752 entries, 0 to 63751\n",
    "Data columns (total 25 columns):\n",
    "LoanID            63752 non-null int64\n",
    "Channel           63752 non-null object\n",
    "SellerName        63752 non-null object\n",
    "OrInterestRate    63752 non-null float64\n",
    "OrUnpaidPrinc     63752 non-null int64\n",
    "OrLoanTerm        63752 non-null int64\n",
    "OrDate            63752 non-null object\n",
    "FirstPayment      63752 non-null object\n",
    "OrLTV             63752 non-null int64\n",
    "OrCLTV            63746 non-null float64\n",
    "NumBorrow         63751 non-null float64\n",
    "DTIRat            61735 non-null float64\n",
    "CreditScore       63662 non-null float64\n",
    "FTHomeBuyer       63752 non-null object\n",
    "LoanPurpose       63752 non-null object\n",
    "PropertyType      63752 non-null object\n",
    "NumUnits          63752 non-null int64\n",
    "OccStatus         63752 non-null object\n",
    "PropertyState     63752 non-null object\n",
    "Zip               63752 non-null int64\n",
    "MortInsPerc       20001 non-null float64\n",
    "ProductType       63752 non-null object\n",
    "CoCreditScore     23018 non-null float64\n",
    "MortInsType       20001 non-null float64\n",
    "Default           63752 non-null float64\n",
    "dtypes: float64(9), int64(6), object(10)\n",
    "memory usage: 12.2+ MB"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "We see that the dataframe contains 63,752 rows, and 25 columns. Looking at the third column in this list, there appears to be eight data columns that contain at least one missing value. These can be handled in a number of ways; depending on the distribution of data in each column, we can fill in missing values with the column median or mean, or we could sample randomly from a distribution defined by the present values. We could also fit for the missing values using a machine learning algorithm applied to the complete columns, or we could drop the missing data altogether. Columns \"OrCLTV\", \"DTIRat\", \"CreditScore\", \"OrInterestRate\", and \"NumBorrow\" don't contain too many missing values, so we could simply drop them from the analysis with little impact on the final results, but let's fill them in anyway just for fun. However, before doing so, we should first take a quick look at the distribution of values in each of these columns."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 55,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x11ab2acc0>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "data = df[['OrCLTV','DTIRat','CreditScore','OrInterestRate','NumBorrow','Default']]\n",
    "\n",
    "fig, axes = mp.subplots(nrows=2, ncols=2, figsize=(5,5))\n",
    "mp.tight_layout(w_pad=2.0, h_pad=2.0)\n",
    "\n",
    "columns = data.columns\n",
    "for i, column in zip(range(1,5), data.columns):\n",
    "    mp.subplot(2,2,i)\n",
    "    sns.distplot(data.loc[data['Default'] == 0, column].dropna(), kde=False)\n",
    "    sns.distplot(data.loc[data['Default'] == 1, column].dropna(), kde=False)\n",
    "    mp.xlabel(column)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "In these figures, the green histograms represent the default class, while the blue histograms represent the non-default class. The various distributions are clearly non-Gaussian, and so simply filling in missing values with the mean may not be appropriate. As such (and for simplicity) we will fill in the missing values with the column median, which is more appropriate for skewed distributions. The 'NumBorrow' column takes on only six finite values, and so here we fill in missing data with the most common value, rather than the median. It is worth noting that some experimentation suggests fitting for values in these columns (or even using the column mean rather than the median) actually has a negligible effect on the final classification later. Interestingly, the disparity in values between the two classes seems largest for the DTI (debt-to-income ratio) and credit score columns. Let's take a closer look at these features."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.text.Text at 0x11683bac8>"
      ]
     },
     "execution_count": 18,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x1175f2128>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "fig, axes = mp.subplots(nrows=1, ncols=2)\n",
    "mp.tight_layout(pad=2)\n",
    "\n",
    "mp.subplot(1,2,1)\n",
    "sns.boxplot(x=\"Default\", y=\"DTIRat\", data=data)\n",
    "mp.ylabel('Debt-to-Income Ratio')\n",
    "\n",
    "mp.subplot(1,2,2)\n",
    "sns.boxplot(x=\"Default\", y=\"CreditScore\", data=data)\n",
    "mp.ylabel('Credit Score')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The figures above show boxplots of debt-to-income ratio and borrower credit score. The green boxes (and whiskers) show the distribution of values spanned by the default class, while the blue boxes show the values spanned by the non-default class. Boxplots are assembled such that 25% of the data values are contained between the lowest whisker and the bottom of the box, 50% of the values are contained within the box itself, and 25% of the values are spanned between the top of the box and the top whisker. The median value of the data is represented by the horizontal line in the middle of the box. On average, defaulters have a higher debt-to-income ratio than do non-defaulters, and they also have lower credit scores. Interestingly, in looking at the various data features, the borrower's location (ZIP code) also seems to be a strong indicator of whether or not a default will occur. The figure below shows the fraction of people who have defaulted from the ten most common ZIP codes with more than 500 borrowers. In certain locations (for example, ZIP code 891), over 80% of borrowers defaulted. We will see shortly that these are a few of the most discriptive features in terms of identifying which class a borrower belongs to."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.text.Text at 0x1169081d0>"
      ]
     },
     "execution_count": 19,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x118e0f7f0>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "data = df.loc[df['Zip'].isin(df['Zip'].value_counts().index.tolist()[:10])]\n",
    "\n",
    "ptab = pd.pivot_table(data, index='Zip', columns='Default', aggfunc='size')\n",
    "ptab = ptab.div(ptab.sum(axis=1), axis=0)\n",
    "ptab.plot.barh(stacked=True, figsize=(6,4))\n",
    "mp.legend(loc='center left', bbox_to_anchor=(1.0, 0.5))\n",
    "mp.xlabel('Fraction of Borrowers')\n",
    "mp.ylabel('ZIP Code')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Now that we've explored the data a little bit, let's fill in those missing values. This is done easily using the Pandas fillna function."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "df['OrCLTV'].fillna(df['OrCLTV'].median(), inplace=True)\n",
    "df['DTIRat'].fillna(df['DTIRat'].median(), inplace=True)\n",
    "df['CreditScore'].fillna(df['CreditScore'].median(), inplace=True)\n",
    "df['OrInterestRate'].fillna(df['OrInterestRate'].median(), inplace=True)\n",
    "\n",
    "count = Counter(df.loc[df['NumBorrow'].notnull(), 'NumBorrow'])\n",
    "tmp = count.most_common()[0][0]\n",
    "df['NumBorrow'] = df['NumBorrow'].fillna(tmp)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "We can perform one last preprocessing step and split up any date columns into their month and year components, just in case they might have some predictive power."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "df['OrDateMonth'] = np.nan\n",
    "df['OrDateMonth'] = df['OrDate'].apply(lambda x: x.split('/')[0].strip()).astype(int)\n",
    "\n",
    "df['OrDateYear'] = np.nan\n",
    "df['OrDateYear'] = df['OrDate'].apply(lambda x: x.split('/')[1].strip()).astype(int)\n",
    "\n",
    "df['FirstMonth'] = np.nan\n",
    "df['FirstMonth'] = df['FirstPayment'].apply(lambda x: x.split('/')[0].strip()).astype(int)\n",
    "\n",
    "df['FirstYear'] = np.nan\n",
    "df['FirstYear'] = df['FirstPayment'].apply(lambda x: x.split('/')[1].strip()).astype(int)\n",
    "\n",
    "df.drop(['OrDate','FirstPayment'], axis=1, inplace=True)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Before we try and predict loan defaulters, we must ensure that all columns in the dataframe are numerical (i.e., no strings present). To do this quickly, the dataframe categorical variables are isolated by identifying any columns with the \"object\" data type. We loop over each of these columns, and use the Pandas get_dummies function to convert them to numerical values."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "df_cat = df.select_dtypes(include=['object'])\n",
    "df_num = df.drop(df_cat.columns, axis=1)\n",
    "\n",
    "data = pd.DataFrame()\n",
    "for i in df_cat.columns:\n",
    "    tmp = pd.get_dummies(df_cat[i])\n",
    "    data = pd.concat([data, tmp], axis=1)\n",
    "\n",
    "df_new = pd.concat([df_num, data], axis=1).reset_index(drop=True)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "One may note that columns \"MortInsPerc\", \"MortInsType\", and \"CoCreditScore\" still contain missing values (many of them!). In fact, they contain so many missing values that trying to fill them accurately may just result in additional noise being added to the data. To this end, we simply drop these columns from the dataframe."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "df_new.drop(['MortInsPerc','MortInsType','CoCreditScore'], axis=1, inplace=True)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Predicting Bad Loans\n",
    "Okay, now we're ready to make some predictions! We first randomly split the data into a training set and a test set using the Scikit-Learn train_test_split_function. From these two sets, we idenfiy the target (Default) vector, and feature arrays. We then initialize the RandomForestClassifier composed of 200 random decision trees, fit it to the training data, and then predict the test set classes."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "df_train, df_test = train_test_split(df_new, test_size = 0.25, random_state=0)\n",
    "df_train = df_train.reset_index(drop=True)\n",
    "df_test  = df_test.reset_index(drop=True)\n",
    "\n",
    "df_targ_train = df_train['Default']\n",
    "df_feat_train = df_train.drop(['Default','LoanID'], axis=1)\n",
    "\n",
    "df_targ_test = df_test['Default']\n",
    "df_feat_test = df_test.drop(['Default','LoanID'], axis=1)\n",
    "\n",
    "targ_train = df_targ_train.values\n",
    "feat_train = df_feat_train.values\n",
    "\n",
    "targ_test = df_targ_test.values\n",
    "feat_test = df_feat_test.values\n",
    "\n",
    "model = RandomForestClassifier(n_estimators=200)\n",
    "model = model.fit(feat_train,targ_train)\n",
    "predict = model.predict(feat_test)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "We can evaluate the perfomance of our classifier by examining the resulting confusion matrix. The confusion matrix is a table which shows the percentage of correct and incorrect classifications (false positives or false negatives) for each positive (default) or negative (non-default) class. In the table below, the true class is given along the x-axis, while the predicted class is given along the y-axis."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 87,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "ename": "SyntaxError",
     "evalue": "invalid syntax (<ipython-input-87-e59a74c659cb>, line 7)",
     "output_type": "error",
     "traceback": [
      "\u001b[0;36m  File \u001b[0;32m\"<ipython-input-87-e59a74c659cb>\"\u001b[0;36m, line \u001b[0;32m7\u001b[0m\n\u001b[0;31m    Actual          0.0       1.0\u001b[0m\n\u001b[0m                      ^\u001b[0m\n\u001b[0;31mSyntaxError\u001b[0m\u001b[0;31m:\u001b[0m invalid syntax\n"
     ]
    }
   ],
   "source": [
    "y_actu = pd.Series(targ_test, name='Actual')\n",
    "y_pred = pd.Series(predict, name='Predicted')\n",
    "df_conf1 = pd.crosstab(y_pred, y_actu)\n",
    "df_conf2 = df_conf1/df_conf1.sum(axis=0)\n",
    "print(df_conf2)\n",
    "\n",
    "Actual          0.0       1.0\n",
    "Predicted                    \n",
    "0.0        0.695582  0.239213\n",
    "1.0        0.304418  0.760787"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Or, graphically,"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "image/png": "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\nRK5CYII=\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x11ad2ff60>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "cm = confusion_matrix(targ_test, predict).T\n",
    "cm = cm.astype('float')/cm.sum(axis=0)\n",
    "\n",
    "fig, ax = mp.subplots()\n",
    "sns.heatmap(cm, annot=True, cmap='Blues');\n",
    "ax.set_xlabel('True Label')\n",
    "ax.set_ylabel('Predicted Label')\n",
    "ax.xaxis.set_label_position('top')\n",
    "ax.xaxis.tick_top()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The confusion matrix shows that for all of the defaulters in our data set, we are able to correctly identify them about 76% of the time (these are true positives). On the other hand, our algorithm incorrectly labels defaulters as being non-defaulters about 24% of the time (these are false negatives). However, this is not too bad! Since roughly 10% of the original data set was composed of the default class (before balancing the data), simply always predicting a non-default for all borrowers would result in a misclassification of defaulters 10% of the time. We see now, though, that our algorithm is able to identify defaulters 76% of the time, which means we have reduced the misclassification error from 10% to 2.2%!\n",
    "\n",
    "Similarly, for all non-defaulters in our data set, the algorithm incorrectly labels them as defaulters about 30% of the time (these are false positives). In terms of profitability to Fannie Mae, however, false negatives are much more important. This is because Fannie Mae loses money when we incorrectly label a defaulter as being a non-defaulter. The fact that we incorrectly classify some of our non-defaulters is of little consequence, though, because there are so many of them present in the full data set (we can always find more non-defaulters easily enough).\n",
    "\n",
    "One may point out that both our training and test sets have been balanced before analysis, and wonder if this predictive capability holds up when the algorithm is presented with new, very imbalanced data. It turns out that this is in fact still the case. Some additional testing suggests that rates of false positives and false negatives are nearly identical to those given above.\n",
    "\n",
    "To further visualize the performance of our classifier, we can look at the corresponding receiver operating characteristics (ROC) curve. The ROC curve shows the number of true positives vs. the number of false positives labeled by the algorithm for a number of threshold values."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.text.Text at 0x118ea95f8>"
      ]
     },
     "execution_count": 41,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\nSApBEARBkf8BklmV3naVMLMAAAAASUVORK5CYII=\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x116901dd8>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "fpr, tpr, thresholds = roc_curve(targ_test,model.predict_proba(feat_test)[:,1])\n",
    "\n",
    "fig = mp.figure(figsize=(4,4))\n",
    "mp.plot(fpr,tpr,'-r')\n",
    "mp.plot([0, 1], [0, 1], 'k--')\n",
    "mp.xlabel('False Positive Rate')\n",
    "mp.ylabel('True Positive Rate')\n",
    "mp.title('Random Forest ROC')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "In the case of a perfect classifier, the ROC curve would hug the top left corver of the figure (the true positive rate would be 1.0, and the false positive rate would be 0.0). The black dashed curve represents a classifier with no predictive power. We see that in our case, the random forest does a pretty good job; it clearly has predictive capabilities, but of course is not perfect.\n",
    "\n",
    "The random forest classifier is unique in that it allows one to identify directly those features in the dataframe that were most important in predicting the positive and negative classes. Let's take a look at the top 10 most important features."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 42,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(array([0, 1, 2, 3, 4, 5, 6, 7, 8, 9]), <a list of 10 Text xticklabel objects>)"
      ]
     },
     "execution_count": 42,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\nCL0i5YyWF6mq6D7/mfXOIdXj7h2sOg1YRCpQ9x4PwvSrtwvm388G1o6Wpl6Ju4+OekVW4e6P5m86\nBRxB+CXxcDUDi4iISDxpKDz6EqbW5cs97h33oma2PWHsyDh3X93FmkRERKQK0nCrZQmrFhi5x4XL\n/5Yl2hjpz8AUdy+8HdOjrq6urqamcpY5EBERkQIl30DTUHi8Bgwys2Z3z21uNYSwO+M7lV4sWnTn\nDsKmUWMqff7cuYtoblbhISIiUqn+/UuvaZeGwuNZwrz4HQgr5kFYwObJbp/RjWjZ5cmERXbG5BUy\nZevs7KKzUwPWRUREaqHuhUe0TfhEYIKZHUbYv+FkwtTY3P4T8919SRmXu4qwc+PJwPpmlmsv9/ki\nIiJSQ2kYXAph0a+niPYAAM7Mm7nyBrB/qQtEBcoOhL0HXiVs4Zz7U/L5IiIiUnupWDI9Td56a6Fe\nEBERkRjWX3/dkoMk09LjISIiImsAFR4iIiKSGBUeIiIikhgVHiIiIpIYFR4iIiKSGBUeIiIikhgV\nHiIiIpIYFR4iIiKSGBUeIiIikpi679WSZu3t7cyY8Xy9YxQ1fPgIWltb6x1DRESkIio8ejBjxvOM\nuXMqrUOH1TvKStpnzWQSMGrU1vWOIiIiUhEVHiW0Dh1G72Ej6x1DRESkIWiMh4iIiCRGhYeIiIgk\nRoWHiIiIJEaFh4iIiCRGhYeIiIgkRoWHiIiIJEaFh4iIiCRGhYeIiIgkRoWHiIiIJEaFh4iIiCRG\nhYeIiIgkRoWHiIiIJEaFh4iIiCRGhYeIiIgkRoWHiIiIJEaFh4iIiCRGhYeIiIgkRoWHiIiIJEaF\nh4iIiCRGhYeIiIgkRoWHiIiIJEaFh4iIiCRGhYeIiIgkRoWHiIiIJEaFh4iIiCRGhYeIiIgkRoWH\niIiIJEaFh4iIiCSmV70DAJhZb+AKYDSwGLjI3S8u8ZydgevcfdOC9gOBc4ANgb8AR7j7nJoEFxER\nkYqkpcdjPLAVsDtwDDDWzEZ3d7KZjQBuAZoK2rcDrgHGAtsD/YFra5JYREREKlb3wsPM+gKHA8e5\n+zR3nwyMA47t5vzvAI8A/yty+LvATe5+o7tPB74FfNHMNqlNehEREalE3QsPYCThls9jeW0PE3os\nivk8oaC4tMixHYAHcw/c/b/Aq1G7iIiI1FkaCo8NgbfdfVle22xgbTMbWHiyu4+OekW6u9brBW2z\n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\n1zvGKoYPH0Fra2vFz6t74RE5ibBy6b3AfODMaD0PCLdRDgEmuvtCM/syocA4EngO2DMqXgYTek0g\nFB/5DgUm1vZbEBERqb4ZM55nzJ1TaR06rN5RlmufNZNJwKhRW1f83FQUHu7eRigODi1yrLng8VTC\nqqSF580mTJ0VERFpKK1Dh9F72Mh6x6iKNWf+joiIiNSdCg8RERFJjAoPERERSYwKDxEREUmMCg8R\nERFJjAoPERERSYwKDxEREUmMCg8RERFJjAoPERERSYwKDxEREUmMCg8RERFJjAoPERERSYwKDxER\nEUmMCg8RERFJjAoPERERSYwKDxEREUmMCg8RERFJjAoPERERSYwKDxEREUmMCg8RERFJjAoPERER\nSYwKDxEREUmMCg8RERFJjAoPERERSYwKDxEREUmMCg8RERFJjAoPERERSYwKDxEREUmMCg8RERFJ\njAoPERERSYwKDxEREUmMCg8RERFJjAoPERERSYwKDxEREUmMCg8RERFJjAoPERERSYwKDxEREUmM\nCg8RERFJjAoPERERSYwKDxEREUlMr3oHADCz3sAVwGhgMXCRu1/czbmjgCuBEcB04Gh3fzrv+IHA\nOcCGwF+AI9x9Tm2/AxERESlHWno8xgNbAbsDxwBjzWx04Ulm1heYAjwQnf8YMMXM+kTHtwOuAcYC\n2wP9gWtrH19ERETKUffCIyomDgeOc/dp7j4ZGAccW+T0A4DF7n6aBycAC4H9ouPfBW5y9xvdfTrw\nLeCLZrZJ7b8TERERKaXuhQcwknDL57G8tocJPRaFto+O5XsE2DH6egfgwdwBd/8v8GrULiIiInWW\nhsJjQ+Btd1+W1zYbWNvMBhY59/WCttnAxmUeFxERkTpKw+DSvsB7BW25x73LPLd3mcdLam5uorm5\nCYCWlmbaZ80s96mJaZ81k5attqNXr+7rxjRmz2puyG72rOaG7GbPam7Ibvas5obsZi8nd3eaurq6\nahCpfGa2L3CZu2+U17Y5MAMY6O7v5LXfCTzn7j/Ma7sA2Nzd9zazd4HR7v7XvOOPA79390sT+HZE\nRESkB2m41fIaMMjM8rMMAdryi468c4cUtA0B3ijzuIiIiNRRGgqPZ4GlrDwAdBfgySLnPg58sqBt\nJ1YMTH0c2Dl3wMyGEsZ3PF6tsCIiIhJf3W+1AJjZlYQC4jBCoXAtcLC7TzazwcB8d19iZusCM4Hf\nAb8CjgL2BTZz9zYz2wG4jzCtdipwafTcfZL+nkRERGRVaejxADgJeAq4F7gcODNazwPCbZL9Adx9\nIfBlYFdCYbEdsKe7t0XHHwe+Q1hA7GFgDqGYERERkRRIRY+HiIiIrBnS0uMhIiIiawAVHiIiIpIY\nFR4iIiKSGBUeIiIikhgVHiIiIpIYFR4iIiKSGBUeknlmdkK00JyIiBQwsz71zpBP63jUmJntBJwI\nbAZ8BfgG8Iq7/76uwUqINuo7DNgC6ASeA37t7q/UM1cxZvZv4IPAA8CNwB/cfUF9U5VmZpcCN7p7\nse0BMsPMegPnAP9x919GbU8B/0dYDHBpPfM1KjNrAb4AfBT4LWDAP919fl2DlWBmnwNGAmsDTfnH\n3P3suoRqcGbWBjwE3A3c7e7/qGceFR41ZGajCb8QriYs4z4c2Ac4DzjR3a+sY7xumdlXgD8AjxJW\niG0BtgG2IqwU+2Ad4xVlZtsC+0V/hgB/JhQhd7p7ez2zdcfM7iPsS/QyYRuASe7+z/qmqpyZXUXY\nI+lId38kavsq4ef8Hnc/vp75emJmLwHbuPvcgvaNgGfdfYP6JOtZtA/VX4CBwABC0XEhYS+rz7n7\n83WM1y0zGwecDEwDCgukLnffI/lU5ctq0WRmHwU+E/3ZHVhI+Pm5G/hb0h/UVHjUkJlNA37m7pPM\nbCEw0t1fMrMxwNnuvlmdIxZlZi8Av3X3cQXtZwD7uvuo+iQrj5ltTyhA9gXWA24HJhH+B0vVD7yZ\nbcCKgmlnwi/kScDv3P31emYrl5m9BXzW3Z8taN8GmOLuqboNZmb7Al+MHh4C3AS0FZz2IWBzd98o\nuWTlM7PJwGzgaOAdwpvhLODXwFB3/1Qd43XLzOYB33H3m+udpVJZL5pyop3gtwWOB74OLHP33klm\n6JXkP7YGGkbxnXGfAD6QcJZKfBCYXKT9FuCMhLNUzN3/DvwdOCXaOHAfwh5A/YBUvZG4+5vAL4Ff\nmtkQVhQhF5jZw4Qi5BZ3f6eOMUtpInwCLNbemnCWcjxAKDxyn1ibWPnTaxcwA/hBwrkqsSuwvbt3\nmBkA7r7UzM4Bnq5rsp4tI935enIEcGBGi6ZWQq/1ToQPODsR3v//QrgFkygVHrU1A/g8kLulkvu0\nfXB0LK1uAr5vZkcV3J//dnQsE8ysP7A5oRv6A6T7Ncfd/0cokC43sw2BvYFjgMuAVA0OK/AH4Goz\nO4YVbyojCblvq1uqbrj7W0SbR5rZK8B4d19Uz0wxLAYGA/8qaDcgzeObfgH8xMwOd/cl9Q5ToSwX\nTQtYUWj8mbCR6rR69QDrVksNmdkuwB2EQXZ7AdcTekG2Ab7i7vfWMV63zOx3wGjC7r5TgaXAJ4CP\nEHoSlv/CSFv3YtRrsA8h/26AA78n3Lp4qZ7ZymVmnyDk35swKPlOdz+gvqm6Z2Z9CV38+7Jiplwn\ncB1wgru/W69s5TCz9QkDNFuipiagNzDK3X9Wt2A9MLMzgQOBUwkfBvYFNgTOB6529x/XMd5KzOxl\nVnzoaib0qLYTbhV15J/r7h9JNl35zGws4eckc0VTdJt8V2AH4BXC7u0PAQ+7+3+TzqPCo8aiaZ7f\nJcwO6UV4I7zC3V+ta7AeRP+DlcXdf1LLLOUws00Ib9RfI/yPNYsVxcZz9cxWLjPbjpB/NOEX8/8R\nBpz+MSufxs1sPUKhtBR4yd0X1jlSSWZ2BOFT+FqEN8fcLZcu4Al337Fe2Uoxs+8RCo+No6Y3gYsJ\nPTiddQtWwMwOLvdcd7+ullkq1ShFU040E2orQhGyE7An8D93/3CSOXSrpYbM7I/AD9L06aMcaSgm\nKvQy4ZfurcD33f3ROucpi5ntRig09iGMPXkEGA/c6u5z6pmtUma2LuG21lpAX2BU3tiD1M2CyvND\nQi/BBYSfo+2BdYGJpPA2UY6ZfRD4pbtfbmbrAL3cfX70xrIlKbolkF9MmNmPCYXR4vxzzKwfofs/\nbc6qd4AqM8LA0h0Ihcc7aIxHw9mJcF8w9czsN8Dx7r4w+rpb7n5YQrHKdRZwvrtn4rXOcx/wDGEs\nxO/r0eVZDWb2TWACoeAo1MWKWxhp9AHgOnd/z8yeBnZw91vM7ATgN4Qpqmn0MmHa+FsFPWIfJnSj\nF/tvURcWKtDczKaxwLRodku+jwNHEWaNpEbGi6blzOwWwtT99Qg/H38FznX3afXIo8Kjtq4AbjKz\nCcB/yBsbAan+JNjUTXsL6SykxhLe+N6sd5AKnUWYbv1evYOspvMJa9X8OAu3Vwq8CaxPuO/9T2AU\nYfbWa6Rs5pmZfZvQQwPh/9GpZtZRcFp/oK6LQxWxEXBP3uPbi5yzCLg0mTjly3LRVOA14FDgfncv\nnDqeOBUetXVm9PdVRY6l7ZPgIcD6ZnaYux9a7IRo4OZrRDMCUqS7QintslowFRoI/DyDRQfAzcBE\nMzucsJjS9dGqq18BZtY12aquI4wvaCb0xlzEyutJdBHewFM1aN3d7yMadByNmdjW3d+ub6qyZbZo\nyufuJ0Qz5X5kZlsQ3nscuMbdC2dG1ZwKjxpy96zthTMCmGFmR7r7H4scT/NI5DRn605WC6ZCdxAG\nxl5U7yAxnEa4zz3I3f9kZr8mFINzSFmBHU1tnwjL38AfydrtxaQHMa6ujBdNy0UzLKcA04HHCIXH\nrsCxZvbZ3IrDSdGslhqLNuf5JmFWSwuhO/emwiWa6y3qsh1G6P7/JnAtcFz+VMhohs7r7p6mnhrM\nrJNwz7uw23kV7v7R2icqT5R7cLSuRGaZ2UWEmVvTCL0EKy1Rn8IxQWUxs4FpHeRrZk3AVwnbMBSb\nBrxnvbL1JJqBdi5hgONarLrseOpnhmSRmT1B2L7g9IL2C4Bd3f2TSeZRj0cNmdnHCd23HazY82Q0\nYQGd3eu9UU+BJuBddz/IzO4kjE/Z3cy+lXQ1HNMvSPfCSd15LTf7oyfunsYVQHMGEKb+5qS+J8fM\nPgJ8iTBmaUr+9PboTf0Y4GzCbaQ0uhw4nDA4eTvCvkqbEgacpnIPqMj1wCDCar2Z+v8140XTxwkb\nlBb6NXBcwllUeNTYzwnrMRyR6xI1s17ANYR7gp+rY7ZuufvN0XLdvwXuN7PxrBivklY3RsuPZ80Y\noHCwWqZ0NyYorcxsH0KhtIyw5sh4M/uCuz8UbTZ4NWHBvBvqGLOUrwPfcPfbzOyfhD1bnNBTmeYi\ndTtgq5R96CpXZosmwuDp7Vh13NL2wP+SDqPCo7Z2BI7Jvw/r7sui7q2p9YtV1Er33KINyj4fLVJ0\nAWHp95PqEayBdQEPZrFgyp9aGH3drRTu2nkWYVDp4YQVVs8mFB8XE95cpgM7p3w9mH6s+B3yPLCd\nu88ws58SlsVOq5mEWURZlOWiaRwwwcw2J+wVBmEtj++xYqZUYlR41NYbhJUcvaB9M9JXMRftHo8W\nKPo/wi/ktP5Cu5FVdxfNgtTfkujBpwjrjyyOvu5OF+GNPU02I2z2tRTAzM4jDDK9ktCzd2GaVv7s\nxkuEqb+vEvYg2o7QQ9kEvL+OuUq5ALgmGhf0IquOB0rrEgOQ4aLJ3a+Nbul+jzDtdwnhfelwd78l\n6TwqPGprAuF/sh+xcpV5NqE7N00+DBQd5Oju/4x2eT2TsP9Jqrj7t0qdY2abAQelbBXZ84BU72PS\nnYJt138F/DWtAzGL6AMsn5kQ9dosIaxD8ov6xarIRcCN0TTgm4CnzGwZ8EnCCrhpdX309xVFjqVt\niYFCmS2azOxUwhYS19Y7C6jwqLXxwDrAzwgD8CCs8X8xKZt66O7/KXG8g2wvH7wpcAaQmsLD3UuO\nmzGzEcCp7n5QApHiuoJwrzgrhUcxXYSB4Jng7teY2b8IA8JfiMatfBt4khSvopnBJQbyZbloOoOw\ni3QqqPCooWjL4bOiMR39CN1b66V5gzhJnY0Io9HTXHjcB3zDzM7PyCqsXRRf96XkdOw0yf+E7e5/\nIboVamZ7ED7gpFJWlhgolPGiaRJwRvRe9B93by/1hFpS4VFDZvYhwiC2+9z9tKjtRTP7N7BfVvfm\nECmwAeE23Blm9iarbg2QtmmGTcDtZpb/y7cPMMnMVhor5O57JJqshGhfnH0IM3Jucfdb844NJfSm\njialn74ztsTAKrJaNBF2od2EsEI1hVP4k16bSYVHbV1JmMaUf1tlC8LYj18SFgASybqrSd+YpZ4U\n2335gcRTVMjMxhJuFd4DvAfcYGaD3H1CtKnduYTlu4+oY8xSMrnEAGS+aDqUFK3urMKjtnYGtsyf\nLunuc8zsDNI3nTazSu2mG9m45kHWQGb2fuDmNGw8VS53L1Z4ZMEhwMnufimAmX0NuCAaOH0CYezB\nme4+v/tL1F2WlhgolNmiifDh9xB3f77eQUCFR629TZjy9u+C9s1J33TaLCtnWuprRPtcpIWZ3Ufp\nTyGpXDkz2jDwBsJU2i4z+xvhF/Ks+iYrzcw+WO65KRuPtREwOe/x7cDvCYuJ7eLuj9UlVWWytMRA\noSwXTRuSojFMKjxq63Lg6mg3wKejtpHAiYQZL1IF+StnmtmBZGdq5/1lnndbLUPEdD5hu/AxhF9o\npxF2T03VmIhuvELpgq+J9M1UWItwKwUAd++MpgEflZGiA7K1xEChLBdNE4G7zewGws9/4TisRD+U\nqfCoIXe/2MwWAUcSfjEvJSxCc6K7p3k55iy7gvCLLPWFR4a7/CFsG/95d38awMymAS+YWV93X1zf\naCVlaofUMrxQ7wAVyMwSA0VkuWj6OuEDwoFFjnWRcG+wCo8ac/ergKvqnWMNch8wJitTO81sIOH+\n/C/cfXZe+3mE7bjHuXsa93LpT7h9BYC7z4wWsFof6HFNmBTYjTATIfU/HwWKTQPubmpwKuWWGCAs\nM7ABsMTd095bkJPZosndU1Vsq/CoATNbh7Dz5Z9z28qb2fHAZwirg17m7s/WMWIjy8zUTjPbmDCb\nohdwKyuvvTCbcEvua2a2m7u/UYeIPWlm1Te8paTr1kR3fkuYnZC1PXKagP8VTIVsAl6s9/TInphZ\nj2vQ5GdPusu/EhkvmjCzDYFjWXkq8DXuXrhxXM2p8KgyM9uU8GayLmFg6btmdjlhm+2bCdPgHjCz\nPVO+CVVWXU3oNhxAuN1S14VySjiXsPTy3oWzQtz9smi2zp+BcwirUqZJlj99Z3WPnJ72xEmzawmb\n8c0i/Hx09/on3uVfSqMUTWa2C+F3yfPAY4TCYzfge2b2WXdPdJl9FR7Vdz7wd2CMu78XVZlHEdbJ\n/yaAmTnhzeTT9YvZeMzsaMJ4mk/kNT8H/Mrdr6xPqh59liJFR467v2tmZ7JiqeY0KbYIV18ysAhX\nJAsF0krcfflaI9Eb4iq3i6Le1sNJ17ok4whrFq37/+2debQcdZXHPwEUJBLAQScHGAQjfBVRBNkZ\n5oAC4wIhLKOjqDABF0SIBzAgS4LMDEYWFwQEZAkgAuIhgiigSCIg6BAQJEGuDpgxRggiEB3WDLz5\n4/461OvXr9+S7qpf9bufc9553VUVuK+6uur+7vK9eCfO94F5aQxD7sympk5TE2fi6dwvFDemjpzT\n8Rk/pRGOR+d5D7B74YbwfjwsfWnhmJ+Q38TO2iJpVeB6YBf8RvEl4Cm8/XAb4ExJHwAmZzZ1dAJD\nF8EuxuspcqOWIlwFmlMWLcksZbEe7tyBp4sWSHqi6bAt8RqEs8q0rR1mdhxwXBrJPgVfnE2S9EO8\nY+tmM3u+3X+jQursNBXZAh+90MxFwJEl2xKORxcYDzxdeL87PrK9eFNeXqpFvc/ngM2Bt7XQkbhU\n0mnArcA04KtlG9eGhXi485E2xwy1vxJq3pEDcACQu8x1M7vi6dpGtObupv2N1XiWHXNm9hA+4XWW\npA2AyXgK+hJJ84A5ZpZVdK/mTlORRcB2eFdlke2Bx8o2JhyPzvMg/gEvSmHP9+EXZzEkPYV6tcDl\nzsHA9MHEq8xssaTpeJQpJ8fjHDwa81ArHQZJO+Irrn8v3bIhGCr3XSTD3Hcf8POionAdMLPvpflP\nq+DO6HZ4sXqDPuCZOmjYmNkS4JuSfoSvxI/FIwtZOR4N6ug0NXEacF5yoIqtwEcAx5dtTDgenecM\n4AJJO+Af7Hj8Q0fS+vhKayZweGUW9h6TeOXLNBjzgWw6WgDM7HJJWwF3SPolvoJdhqdW3oU/WC4y\ns7n11EsAABEYSURBVGzC5gWaIx4b4YXTj+AFvW/GB6/dR36577oWlxaVVPtNSpW0BvB24LelGzVC\nJG2DP7gn45HKO/Hr6bp2/y4X6uY0AZjZ7JRaPAI4Gu/2M+AQM7umbHvC8egwZnalpGfxMeZLgOPN\n7Jdp9xfwC3WGmc2uyMRe5GlgA9rrR2xE/9VhFpjZUZKuxa+XHYB18LqPe4CjzOwXVdo3GEVdgDR7\naFtgamNKp6S1gAuoIIw7DL4INNrc34Q//NbC1ScXmFnuOiQkNeRLgKPwKOtdgIBnJE02s7lV2ldE\n0qvxlPNkXHhubeDHePTxhjpEaBrU2WlKz5zZFZsBwLi+vtoVd9eWlHp5Lkkdr2dmzYVhwSiQdAE+\n8vm9qde+ef844EbAzGxa2fYNh5pJvfdD0tPAjmb2m6btAu42swnVWDY4kt6NP/i2oH8EpI9XnL47\nqrBtOKQ5P4/ihYEHAccA7wSmAv9iZltXaF4/JP0Nl3u/DX9A34LXvQ0gs9k47Zym66iJ05Sm6mJm\nC9L73YDD8Jbaq83su2XbFBGPLiLpJWCimf0ZwMyeSdvfiBcWvrZC83qJGXiq5dbCwKangIl4yuIk\nXNfjo5VZODTn4oVe2d/IWrAM16xprlvahQyjTJL2BH4IXImnPB/E/4YJeFfIVOAWSbtlPANle7yY\n+glJU4BrzWyppO/g13tOjE+/d08/rVa7Oc7GAf8+NpymU+nvNI1Pi0kgS6dpEu4gbZ7e349HZ67G\nFZ7HAVdIWtvMSpV8D8ejw0j6GNAYWtZK6wC8zTM3JcraYmaPSdoJOBsXySnyMt4Gt0/mEaa5wIF1\nkXpv4lTgorSSug+/7rcFPsgr34WcmAF8xcyObdr+FD64b56kJ4ETcQXiHHkamJhk6nfEPwNwB3Dp\noP+qGrKS6x4hdXaazgHuxyUengVOwBWSTzSzWQCSPoNHzcLxqDlz8C/aOLz97S5SPjnRh0+YnFO6\nZT2Mmf0RmJKkjLfGIxxPAvMzdzga1EbqvRkzO1/SIly46rC0eQGwR6bpii1xobl2XIjr7eTKbFy7\n5gXg98CPJX0aL27PKuLRqmYm1QC9GY82rZ6x9HidnaadgO0bM6AkzcRTcsXF2fVUMGcmHI8Ok2az\nnAKQbsZX1XAFW1tSi+RNVdsxCuok9T4AM7sZuLlqO4bJmgyt4fEEPvAuS8zseEl347VNV5rZS5L+\nAPyrmd1QsXmDkrpvvsErkbDNgDMkrQl8OLeBiEWnKY0wmGZmfyseI2ld/Pt7QMnmDcVrKVznSUn7\nOfovhJcDry7bsHA8OkyTlHEf8KHBFBIz1DcIKqCGUu/9bsLp9aCY2dSSzBou4/AUXDvayWNngZnN\naUQOUoHvHRlHDhqcBrwNTwk1ZlXNxDt0zgI+VpFdLUlaOpumtwcB90pqPsdvAfYs1bDhk2X3SDge\nneeLeOHaC7SWlW6Qu7Z/0GVqLPUO/R/KWT+gB+GDLR4gRdYuzZJRULfIQYH98PlEDzQWZOn1J/Fu\nkdx4Fp9IOy79TAeKcumN1HlzvVAuHCOpGOF4NXBkqmGCihocwvHoMEV9g+LrIGhBXaXeMbN/a/W6\nJvwBF1EaznG5UqvIQYG18Id5M6uQ4fPIzO4nCQ+mFub9MnbqmrkNL/Iucide49R8XKmEjkeHkfRP\nwz3WzEr/wIN8kPQAcEo75UBJ+6Zj3l6eZSMj6aTsgz8IG5X944DVga3M7H1V2darSPojHjmYn3Qy\ntjSzRyRtjevBrFexiS2RdDm+yv448CdeSS9+B3jEzFoNMssGSesAz5vZ85LeAfwzcK+Z/bRi02pF\ndh5mDzCv6X0jV/wMXsizDh6qewrvZAjGLrWUem/BN/COll/hMu934n/bRCDLGpUeoFaRgwKfBS7G\n73+r4GJta+OFyaVPSR0JkvbBHaR9UuPA7cAfgZmSjjOzsys0b0gkbYnXo6zetKuv7DkzOV+gtcTM\nVsxQkDQVvyEf2lB1TEOeLqQ+HQBB96it1HsTHwIONLNrJT2Et9QaXrdSesX8GOF64D8Lw/r6JG2C\nO4E/rM6s9pjZMmD/JG71FvwZZGkIW+6cio+7uCUJFS42sy0k7YWf92wdj2TvdOBxBqrG9lHynJlw\nPLrLLGD3opS0mS2S9Dk8r3Z6ZZYFOXADvlpqJ/V+EvnPgZiAR2YAHgC2M7OFkr5EONjdol3k4IgK\n7WqLpEeAbczsYeDhwvb1gfvMLOco8JuAhrz4PkAjRbqA/KPXn8IHwl1StSEQjke36cNXtL9u2r4Z\ng8wqCMYUvSD1Dj6Rdiu8GHMhnm65BE8xZt0dUmPWM7P905C7t5Jx5EDSAcD709uNgXOSnkSRjYH/\nK9Gs0fA/wK6SluAD+a5P2w8k/6nAy/Dp11kQjkd3OQe4XNJXcOnahpT0NLwCPRjD9IjUO7jy4RWS\nDsHnQNyTpLx3AnJULu0Ffi7pA2Z2D+745czPcMej0XY9joGD+RYCx5Vs10iZiUsgrIYPiJsv6XQ8\ntbhvpZYNzdG4wzcDd6D6teeXPWcmHI8uYmanSHoMOBQ4Pm1eABxuZldUZ1mQCz0g9Y6ZXSjpt8D/\nmtlvUifOofgK6+RKjetdHgP+vmojhkMakjkVVqg5n9EYmFkz5gMbAhuY2X1p24X435PbfJxmXoNH\nUefSX1Sskjkz0U4bBEFHSCqam+GrKTOzVl0XQQeQdAmegrsbWMTA2T65qcWuQNLr8eukVev1lysz\nbAjSIrIRZaoVkv4EXAVcQIs0f6t5Ot0kIh5dRtLOuFDUpsDeeD5wkZldValhQdAh0mjw8/DulsY9\n5QVJs4EjzWx5Vbb1ON8uvK6FeqykT+CpxVfRX5a+D693ytbxoEZRphasAZxtZlmk5cLx6CKS9sOL\n7L4F7IV/2ZYDsyWtm+scjiAYIefjQlB74uHoVfFapq/jiqufrc603qSGarENjsfbUmfhU3W3xzVJ\nLgOurdCu4fAr4Lo0nG8RNYoy4VOLvyDpCDN7fsiju0w4Ht1lJnCYmX1H0qcAzOxMSY/iE2zD8Qh6\ngcnArmZ2b2HbLUnH5kbC8egKNY2mbgBcmial3gvsYGbXJImBi8lfYqB2UabEHsCOwMclLaWpg8jM\nShUpDMeju2wK/KLF9v/Cv4BB0As8Tmsdg9XxNr6gw9Q4mvo48Ho8YvAQ3oZ9DbCEzO+JNY4ygYv5\nza7YhhWE49FdFuJa/o2bQKOS96C0Lwh6gVOBi5Jg2J34A/CdeFTv0uL8ophP1DHqGk39LnBZar2+\nCZcbuAeP2PyuUstakNpPzzCzZ9PrQTGzU0oya8SY2aVV21AkHI/uchTwA0nvxqWjT5C0KT7yfO9K\nLQuCznFh+n1Wi30z0g9U0LbXw9Q1mnosPipgPTO7XtJFeGHyX4AcIwq74df1s+n1YPThDl+WpMm6\ng7awmtm7SzQnHI9uYma3SxJweNr0d8BdwMfKFmwJgm5RnE8UlEYto6mpw+mUwvsTgROrs2hIVjjK\nZrYbgKTXmFndlKfnNb1fDZeA/wDwH2UbE45HF5H0feA4M2sboguCXkDSRLzWoF/RXTjZXaF20VRJ\nW+EKn5vjnSx/xWf7fM/MHqzStjbszMBBh0slvTOX1tThYGZfbLVd0sHA/njXS2nESqW77Ez+8weC\nYKWQtGdSpFyCFw0uwlslG7+DDmNmt+PzQn6DzwxpRFPfama3VmlbM5JWk3QxPsjuw/iD/PH0+2Dg\nAUnnpaGIudHKphztHC0/A95T9v80Ih7d5Vzgaknn4fr4zX3fUWgX9ALfAH6Jr7T/WrEtY4JC0eOM\npu0TJJ1pZkdXZForTgLeh0/qHuAUpajNFcCDtK4TClYSSRu12LwW8Hl8gVAq4Xh0l5PS7/Nb7ItC\nu6BX+AfgvWYW0Y0ukurFGsqZM4H7JT3VdNgWwKfxoWC58FFcwbZlJMbMbpU0Hbc5HI/usIiBxaXj\ngMWkOTplEo5Hl5D0ZmANM3uxsO09wJIcR1cHwUpwG/CPRFql26wP/LTwfk6LY54BvlaOOcNmQ7zb\nph2349O8c+SDkoqRvFWBfSX9uXiQmV1WrlkjYpOm933Ai8BSMyt9YFs4Hh0m5Sm/DnwGz539rLD7\nCGBvSV8DjqniAw+CLnAb8E1Je+FaDC8Wd+asb1AnzGwuqS5P0u+BbWsywfhVtBhM1sRzwPgSbBkp\nf2Bg9GgpA9V4+3DZ9ywpewjcUITj0XmOxIdlTTGzotOBmU2RtDeuIPff5CvyEwQjYQ98SuobGKhg\nmrW+QV0xs+YVbM700UZDImfMbOOqbRgtyTkdznnvM7NJ3banSDgeneeTwGfN7IZWO83sBymfOY1w\nPIIeoKFvEJSHpDfi+gvb0rqFudTZG0MwDpgj6cU2xzS3rAYrz8lt9o0HjgE2xtWGSyUcj86zMUPn\nM+cSRVRBjSnKoDexHFem/K2ZvVSiSWONy4H18LqI3DuJWmpItOAnXbVijDGYTLqkyfhnMh441Mwu\nLtUwwvHoBktx56NdTm1DXCI4COrKvCH2PyPpLDM7oQxjxiDbAVtnLLy1gqJ4laQPAzeb2ZMVmjQm\nSVGys3C10kuAY6v6HMLx6DxzgJMl7ZnkgfshaTW8Fe7m0i0Lgg4xmEx6Kq5eB9gBOEfSMjM7rVTj\nxga/w6e81o1z8WsjHI+SSM+cz+PS9L8DdjGzu6q0aVxfXy1rfrJF0jp4od1zuLDSfHw0+LrAu/Bq\n6AnAzma2pCo7g6DbpNHts8xss6pt6TUkHYjn8M/EC9WbO4myFCeUdC0uk36qmb1QtT29jqRd8XTc\nBvj1cpaZvVylTRCOR1eQ9Drgy3h3S6NFbBzugFwFnGxmSysyLwhKQdImwEIzW7NqW3oNSe0eHn1m\nlqU4oaQ7gJ2Al3HZ9GY155yKYmuNpG/jEvWL8GjHoAvdsh3VSLV0gZQ3+4Skw4FJeOj5L8DDUXAX\njCFeDzQrawYdoMYTgb+F6128Dr8ntut0CVaOj6Tfm+CS9INRuop2RDyCIOg4ktYGrgEWm9khVdsT\nVI+kw3C5gXcUNv8auMDMQlpgDBGORxAEI0bSXFqLE60CrA28BViAz3CJDq4OMAJBqKxSFpJWxSfo\n7oKLJ96BR8LWB7YBDgFuBSbnUH8QdJ9ItQRBMBrmDbK9oePxa+DnMRago5xctQGj5HPA5sDbzGxx\n075LJZ2GOx7TgK+WbVxQPhHxCIJgpQhthvKp0zmX9ABwipld0+aYfdMxby/PsqAq6lqgFARBPpxL\nPTUl6kydzvkkhlZzng9kkx4Kuks4HkEQrCxzgY9IWr1qQ8YQdTrnT+M6Eu3YCPjzEMcEPUKkWoIg\nWClCm6F86nTOJV0AvBEvNB7wwElqtzcCZmbTyrYvKJ8oLg2CYGUJbYbyqdM5n4GnWm6VNAtPqzwF\nTMTVnE/C/46PVmZhUCoR8QiCYNSENkP51PGcS9oQOBvYu2nXy/h8q2lm9mjphgWVEI5HEAQjJrQZ\nyqcXzrmkNwBb4xGOJ4H5ZvZEtVYFZROpliAIRkNoM5RP7c+5mT0O3FS1HUG1RFdLEASj4WBgeosH\nIABp+3RgaplG9TgHE+c86AHC8QiCYDSENkP5xDkPeoJwPIIgGA2hzVA+cc6DniAcjyAIRsMNwMyk\nwTCAtP0k4LpSrept4pwHPUF0tQRBMGIkTcTD/g8D7bQZdoiuhc4Q5zzoFSLiEQTBiDGzx3DlzGXA\nj3D1zOXAYuBaYBGwSzwAO0ec86BXiIhHEAQrRWgzlE+c86DOhOMRBEEQBEFpRKolCIIgCILSCMcj\nCIIgCILSCMcjCIIgCILSCMcjCIIgCILSCMcjCIIgCILSCMcjCIIgCILSCMcjCIIgCILS+H+bfUbu\nt9aeFgAAAABJRU5ErkJggg==\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x11ab737b8>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "feat_labels = df_feat_train.columns\n",
    "importances = model.feature_importances_\n",
    "indices = np.argsort(importances)[::-1]\n",
    "\n",
    "ncomp = 10\n",
    "sns.barplot(x=feat_labels[indices[:ncomp]], y=importances[indices[:ncomp]], color='deepskyblue')\n",
    "mp.title('Top 10 Feature Importances')\n",
    "mp.ylabel('Relative Feature Importance')\n",
    "mp.xticks(rotation=90)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "As we saw earlier, of all the available features, it looks like borrower credit score, ZIP code, and debt-to-income ratio are among the most predictive. It also appears that reasonably good predictions could be made using only the first seven features or so. This sort of analysis of feature importances would be useful for dimensionality reduction if we had many hundreds of features in our dataframe."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Minimizing False Negatives\n",
    "Though we've seen that our algorithm appears to perform reasonably well, there is definitely still some room for improvement. Let's see if we can decrease the number of false negatives even further by using a different algorithm - a naive Bayes classifier. When using other classifiers, it is usually the case that the feature array must first be scaled so that values take on similar ranges. This can be done quickly using the the StandardScaler function, and is applied using a call to fit_transform. Let's fit the naive Bayes classifier (GaussianNB) on the training data, and then predict using the test set."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 48,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "ename": "SyntaxError",
     "evalue": "invalid syntax (<ipython-input-48-f462bd01578a>, line 18)",
     "output_type": "error",
     "traceback": [
      "\u001b[0;36m  File \u001b[0;32m\"<ipython-input-48-f462bd01578a>\"\u001b[0;36m, line \u001b[0;32m18\u001b[0m\n\u001b[0;31m    Actual          0.0       1.0\u001b[0m\n\u001b[0m                      ^\u001b[0m\n\u001b[0;31mSyntaxError\u001b[0m\u001b[0;31m:\u001b[0m invalid syntax\n"
     ]
    }
   ],
   "source": [
    "sc = StandardScaler()\n",
    "\n",
    "feat_train_std = sc.fit_transform(feat_train)\n",
    "feat_test_std  = sc.fit_transform(feat_test)\n",
    "\n",
    "model = GaussianNB()\n",
    "model = model.fit(feat_train_std, targ_train)\n",
    "\n",
    "predict = model.predict(feat_test_std)\n",
    "\n",
    "\n",
    "y_actu = pd.Series(targ_test, name='Actual')\n",
    "y_pred = pd.Series(predict, name='Predicted')\n",
    "df_conf1 = pd.crosstab(y_pred,y_actu)\n",
    "df_conf2 = df_conf1/df_conf1.sum(axis=0)\n",
    "print(df_conf2)\n",
    "\n",
    "Actual          0.0       1.0\n",
    "Predicted                    \n",
    "0.0        0.419335  0.178299\n",
    "1.0        0.580665  0.821701"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Or, graphically,"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 49,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "image/png": "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\nTAAkSUrQ/wdPqePcHXzH7AAAAABJRU5ErkJggg==\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x2054f3438>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "cm = confusion_matrix(targ_test, predict).T\n",
    "cm = cm.astype('float')/cm.sum(axis=0)\n",
    "\n",
    "fig, ax = mp.subplots()\n",
    "sns.heatmap(cm, annot=True, cmap='Blues');\n",
    "ax.set_xlabel('True Label')\n",
    "ax.set_ylabel('Predicted Label')\n",
    "ax.xaxis.set_label_position('top')\n",
    "ax.xaxis.tick_top()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Looking at the resulting confusion matrix, we can see that we have significantly reduced the false negative rate to about 18% over the random forest classifier. This translates to a final misclassification rate of about 1.7%. This is much better than simply predicting the non-default class for all borrowers! It is worth noting, though, that the false positive rate for the negative class is also now much worse than before (about 58% now instead of 30% with the random forest classifier). Again, however, this is a small price to pay for significantly reducing the false negative rate; remember, it is the false negatives that cost us money in the end!"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Concluding Remarks\n",
    "In this project, we've detailed how to predict bad loans Fannie Mae single family loan performance data. The random forest classifier gave us a nice baseline algorithm by which we could identify loan defaulters with reasonably good accuracy. We also found that the false negative rate could be significantly reduced by switching to a different (naive Bayes) classifier.\n",
    "\n",
    "A number of tests could be conducted to try and further improve the analysis. For example, one could find the optimal number of estimators (trees) to use in the initial random forest classification. A value of 200 was shown to perform quite well, but could be tuned to give an even better performance. We could also compare a number of different tuned algorithms like logistic regression or k-nearest neighbors to see how these perform relative to the two algorithms used in this work.\n",
    "\n",
    "Well, that's all I have for now. Thanks for following along!"
   ]
  }
 ],
 "metadata": {
  "anaconda-cloud": {},
  "kernelspec": {
   "display_name": "Python [conda root]",
   "language": "python",
   "name": "conda-root-py"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.5.2"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 1
}
